<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <artifactId>gemma</artifactId>
        <groupId>gemma</groupId>
        <version>1.33.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>gemma-core</artifactId>
    <name>Gemma Core</name>
    <description>Module containing Gemma backend logic (everything but web-related)</description>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>version-file</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <skip>${skipVersionFile}</skip>
                            <target>
                                <exec executable="git" outputproperty="gemma.hash" logError="true">
                                    <arg value="rev-parse"/>
                                    <arg value="HEAD"/>
                                </exec>
                                <echo append="false" file="${project.build.directory}/classes/ubic/gemma/version.properties">
                                    gemma.version=${project.version}${line.separator}gemma.build.timestamp=${maven.build.timestamp}${line.separator}gemma.build.gitHash=${gemma.hash}
                                </echo>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                        <configuration>
                            <!-- only include test classes that are meant to be re-used -->
                            <includes>
                                <include>org/springframework/security/test/**/*.class</include>
                                <include>ubic/gemma/core/ontology/TestOntologyConfig.class</include>
                                <include>ubic/gemma/core/util/test/**/*.class</include>
                                <!-- FIXME: this is not a scalable approach, we should have a separate test module -->
                                <include>ubic/gemma/persistence/service/expression/bioAssayData/NegativeBinomialDistribution.class</include>
                                <include>ubic/gemma/persistence/service/expression/bioAssayData/RandomBulkDataUtils.class</include>
                                <include>ubic/gemma/persistence/service/expression/bioAssayData/RandomDataUtils.class</include>
                                <include>ubic/gemma/persistence/service/expression/bioAssayData/RandomExpressionDataMatrixUtils.class</include>
                                <include>ubic/gemma/persistence/service/expression/bioAssayData/RandomSingleCellDataUtils.class</include>
                                <include>ubic/gemma/applicationContext-dataSourceInitializer.xml</include>
                                <include>log4j2-test.xml</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>unpack-spring-security-test</id>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.springframework.security</groupId>
                                    <artifactId>spring-security-test</artifactId>
                                    <version>4.0.4.RELEASE</version>
                                    <classifier>sources</classifier>
                                    <outputDirectory>${project.build.directory}/generated-test-sources/spring-security-test</outputDirectory>
                                    <includes>**/*.java</includes>
                                    <excludes>org/springframework/security/test/web/servlet/setup/**</excludes>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.6.1</version>
                <executions>
                    <execution>
                        <phase>generate-test-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <!-- dependencies:unpack does not add a test source root -->
                            <sources>
                                <source>${project.build.directory}/generated-test-sources/spring-security-test</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <dependencies>
        <!-- Spring -->
        <!-- this is the latest for Spring 3 (>= 1.1 requires Spring 4) -->
        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
            <version>1.0.3.RELEASE</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework</groupId>
                    <artifactId>spring-context</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Email -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>1.6.2</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.velocity</groupId>
            <artifactId>velocity-engine-core</artifactId>
            <version>2.4.1</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.commons</groupId>
                    <artifactId>commons-lang3</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Lucene (version is synced with baseCode) -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers</artifactId>
            <version>${lucene.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-highlighter</artifactId>
            <version>${lucene.version}</version>
        </dependency>

        <!-- Hibernate Search (latest for Hibernate and Lucene) -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-search-orm</artifactId>
            <version>4.4.6.Final</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.avro</groupId>
                    <artifactId>avro</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.solr</groupId>
                    <artifactId>solr-analysis-extras</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- Apache Commons -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.14.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-math3</artifactId>
            <version>3.6.1</version>
        </dependency>
        <dependency>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
            <version>3.11.1</version>
        </dependency>

        <!-- Swagger (only annotations, implementation is reserved to Gemma REST) -->
        <dependency>
            <groupId>io.swagger.core.v3</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger.version}</version>
        </dependency>

        <!-- Utilities -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.1</version>
        </dependency>
        <dependency>
            <groupId>obo</groupId>
            <artifactId>org.geneontology</artifactId>
            <version>1.002</version>
        </dependency>
        <!-- bit array -->
        <!-- it can't be updated though because the binary format has changed, and we store those in the database -->
        <dependency>
            <groupId>com.googlecode.javaewah</groupId>
            <artifactId>JavaEWAH</artifactId>
            <!--suppress MavenPackageUpdate -->
            <version>0.7.9</version>
        </dependency>

        <!-- MTJ, for reading MatrixMarket formats -->
        <!-- this is also declared in baseCode, but we use it explicitly for reading single-cell data -->
        <dependency>
            <groupId>com.googlecode.matrix-toolkits-java</groupId>
            <artifactId>mtj</artifactId>
            <version>1.0.4</version>
            <exclusions>
                <exclusion>
                    <groupId>com.github.fommil.netlib</groupId>
                    <artifactId>core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>core</artifactId>
            <version>1.1.2</version>
            <scope>runtime</scope>
        </dependency>

        <!-- HDF5 -->
        <dependency>
            <groupId>org.hdf5group</groupId>
            <artifactId>hdf5</artifactId>
            <version>${hdf5.version}</version>
            <scope>system</scope>
            <systemPath>${hdf5.jarPath}</systemPath>
        </dependency>

        <!-- Gemma Slack Bot -->
        <dependency>
            <groupId>com.slack.api</groupId>
            <artifactId>slack-api-client</artifactId>
            <version>${slack.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-stdlib-jdk8</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.slack.api</groupId>
            <artifactId>slack-api-model</artifactId>
            <version>${slack.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>1.9.25</version>
        </dependency>

        <!-- Scheduling -->
        <!-- This is the latest Quartz release compatible with Spring 3 -->
        <dependency>
            <groupId>org.quartz-scheduler</groupId>
            <artifactId>quartz</artifactId>
            <version>1.8.6</version>
        </dependency>

        <!-- Testing -->
        <!-- specifically for spring-security-test which refers to definitions from javax.servlet-api, spring-web and spring-security-web -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>4.0.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>${spring.security.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <properties>
        <skipVersionFile>false</skipVersionFile>
    </properties>
</project>
