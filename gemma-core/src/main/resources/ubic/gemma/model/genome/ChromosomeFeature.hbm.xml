<?xml version="1.0" encoding="UTF-8"?>

<hibernate-mapping xmlns="http://www.hibernate.org/xsd/hibernate-mapping"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.hibernate.org/xsd/hibernate-mapping http://hibernate.org/xsd/hibernate-mapping-4.0.xsd">

    <class name="ubic.gemma.model.genome.ChromosomeFeature" table="CHROMOSOME_FEATURE"
    >
        <cache usage="nonstrict-read-write"/>
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
            </generator>
        </id>
        <discriminator column="class"/>
        <property name="name" type="java.lang.String">
            <column name="NAME" not-null="false" unique="false"
                    sql-type="VARCHAR(255)" index="CHROMOSOME_FEATURE_NAME"/>
        </property>
        <property name="description" type="org.hibernate.type.MaterializedClobType">
            <column name="DESCRIPTION" not-null="false" unique="false"
                    sql-type="text"/>
        </property>
        <property name="previousNcbiId" type="java.lang.String">
            <column name="PREVIOUS_NCBI_ID" not-null="false" unique="false"
                    sql-type="VARCHAR(255)" index="PREVIOUS_NCBI_ID"/>
        </property>
        <many-to-one name="physicalLocation" class="ubic.gemma.model.genome.PhysicalLocation" cascade="all"
                     lazy="proxy" fetch="select">
            <column name="PHYSICAL_LOCATION_FK" not-null="false" sql-type="BIGINT" unique="true"/>
        </many-to-one>
        <subclass name="ubic.gemma.model.genome.gene.GeneProduct" discriminator-value="GeneProduct"
                  abstract="false">
            <property name="ncbiGi" type="java.lang.String">
                <column name="NCBI_GI" not-null="false" unique="false"
                        sql-type="VARCHAR(255)" index="NCBI_GI"/>
            </property>
            <property name="dummy" type="java.lang.Boolean">
                <column name="DUMMY" not-null="false" sql-type="TINYINT"/>
            </property>
            <!--  having cascade-all here is a problem since the same entry can be associated with a biosequence as well -->
            <set name="accessions" lazy="true" fetch="select" cascade="all">
                <cache usage="read-write"/>
                <key foreign-key="DATABASE_ENTRY_GENE_PRODUCT_FKC">
                    <column name="GENE_PRODUCT_FK" sql-type="BIGINT"/>
                </key>
                <one-to-many class="ubic.gemma.model.common.description.DatabaseEntry"/>
            </set>
            <many-to-one name="gene" class="ubic.gemma.model.genome.Gene" cascade="none" lazy="proxy" fetch="select">
                <column name="GENE_FK" not-null="false" sql-type="BIGINT"/>
            </many-to-one>
        </subclass>
        <subclass name="ubic.gemma.model.genome.Gene" discriminator-value="Gene"
                  abstract="false">
            <property name="officialSymbol" type="java.lang.String">
                <column name="OFFICIAL_SYMBOL" not-null="false" unique="false"
                        sql-type="VARCHAR(255)"/>
            </property>
            <property name="officialName" type="org.hibernate.type.MaterializedClobType">
                <column name="OFFICIAL_NAME" not-null="false" unique="false"
                        sql-type="text"/>
            </property>
            <property name="ncbiGeneId" type="java.lang.Integer">
                <column name="NCBI_GENE_ID" not-null="false" unique="false" sql-type="INTEGER" index="NCBI_GENE_ID"/>
            </property>
            <property name="ensemblId" type="java.lang.String">
                <column name="ENSEMBL_ID" not-null="false" unique="false"
                        sql-type="VARCHAR(255)" index="ENSEMBL_ID"/>
            </property>
            <!-- dummy gene products are not visible in this collection, use BioSequence2GeneProduct instead -->
            <set name="products" lazy="true" fetch="select" inverse="true" cascade="all" where="DUMMY = 0">
                <cache usage="read-write"/>
                <key foreign-key="GENE_PRODUCT_GENE_FKC">
                    <column name="GENE_FK" sql-type="BIGINT"/>
                </key>
                <one-to-many class="ubic.gemma.model.genome.gene.GeneProduct"/>
            </set>
            <set name="aliases" lazy="true" fetch="select" cascade="all-delete-orphan">
                <cache usage="read-write"/>
                <key foreign-key="GENE_ALIAS_GENE_FKC">
                    <column name="GENE_FK" sql-type="BIGINT"/>
                </key>
                <one-to-many class="ubic.gemma.model.genome.gene.GeneAlias"/>
            </set>
            <many-to-one name="taxon" class="ubic.gemma.model.genome.Taxon" lazy="false" fetch="select">
                <column name="TAXON_FK" not-null="false" sql-type="BIGINT"/>
            </many-to-one>
            <set name="accessions" lazy="true" fetch="select" cascade="all">
                <cache usage="read-write"/>
                <key foreign-key="DATABASE_ENTRY_GENE_FKC">
                    <column name="GENE_FK" sql-type="BIGINT"/>
                </key>
                <one-to-many class="ubic.gemma.model.common.description.DatabaseEntry"/>
            </set>
            <many-to-one name="multifunctionality" class="ubic.gemma.model.genome.gene.Multifunctionality"
                         cascade="all" lazy="proxy" fetch="select">
                <column name="MULTIFUNCTIONALITY_FK" not-null="false" sql-type="BIGINT" unique="true"/>
            </many-to-one>
            <set name="phenotypeAssociations" lazy="true" fetch="select" inverse="true" cascade="all">
                <cache usage="read-write"/>
                <key foreign-key="PHENOTYPE_ASSOCIATION_GENE_FKC">
                    <column name="GENE_FK" sql-type="BIGINT"/>
                </key>
                <one-to-many class="ubic.gemma.model.association.phenotype.PhenotypeAssociation"/>
            </set>
        </subclass>
    </class>
</hibernate-mapping>