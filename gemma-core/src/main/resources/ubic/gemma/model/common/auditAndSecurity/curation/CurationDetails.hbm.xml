<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="ubic.gemma.model.common.auditAndSecurity.curation.CurationDetails" table="CURATION_DETAILS">
        <cache usage="read-write"/>
        <id name="id" type="java.lang.Long" unsaved-value="null">
            <column name="ID" sql-type="BIGINT"/>
            <generator class="native">
            </generator>
        </id>
        <!--  cascade="all" on these events causes problems with EE deletion; however, making them 'none' exposed other issues -->
        <!-- all the many-to-one below are absolutely necessary, so always fetch with an eager jointure -->
        <many-to-one name="lastTroubledEvent" class="ubic.gemma.model.common.auditAndSecurity.AuditEvent"
                     cascade="all" lazy="false" fetch="join">
            <column name="TROUBLE_AUDIT_EVENT_FK" not-null="false" sql-type="BIGINT" unique="true"/>
        </many-to-one>
        <many-to-one name="lastNeedsAttentionEvent" class="ubic.gemma.model.common.auditAndSecurity.AuditEvent"
                     cascade="all" lazy="false" fetch="join">
            <column name="ATTENTION_AUDIT_EVENT_FK" not-null="false" sql-type="BIGINT" unique="true"/>
        </many-to-one>
        <many-to-one name="lastNoteUpdateEvent" class="ubic.gemma.model.common.auditAndSecurity.AuditEvent"
                     cascade="all" lazy="false" fetch="join">
            <column name="NOTE_AUDIT_EVENT_FK" not-null="false" sql-type="BIGINT" unique="true"/>
        </many-to-one>
        <property name="lastUpdated" type="java.util.Date">
            <column name="LAST_UPDATED" not-null="false" unique="false" sql-type="DATETIME"/>
        </property>
        <property name="troubled" type="java.lang.Boolean">
            <column name="TROUBLED" not-null="true" unique="false" sql-type="TINYINT"/>
        </property>
        <property name="needsAttention" type="java.lang.Boolean">
            <column name="NEEDS_ATTENTION" not-null="true" unique="false" sql-type="TINYINT"/>
        </property>
        <property name="curationNote" type="java.lang.String">
            <column name="NOTE" not-null="false" unique="false"
                    sql-type="VARCHAR(255)"/>
        </property>
    </class>
</hibernate-mapping>