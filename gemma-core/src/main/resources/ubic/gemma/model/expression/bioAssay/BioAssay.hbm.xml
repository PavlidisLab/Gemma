<?xml version="1.0" encoding="UTF-8"?>
<hibernate-mapping xmlns="http://www.hibernate.org/xsd/hibernate-mapping"
                   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.hibernate.org/xsd/hibernate-mapping http://hibernate.org/xsd/hibernate-mapping-4.0.xsd">
   <class name="ubic.gemma.model.expression.bioAssay.BioAssay" table="BIO_ASSAY">
      <cache usage="read-write"/>
      <id name="id" type="java.lang.Long" unsaved-value="null">
         <column name="ID" sql-type="BIGINT"/>
         <generator class="native">
         </generator>
      </id>
      <property name="shortName" type="java.lang.String" index="BIO_ASSAY_SHORT_NAME">
         <!-- TODO: mark this as non-null -->
         <column name="SHORT_NAME" not-null="false" unique="true" sql-type="VARCHAR(255)"/>
      </property>
      <property name="name" type="java.lang.String" index="BIO_ASSAY_NAME">
         <column name="NAME" not-null="false" unique="false" sql-type="VARCHAR(255)"/>
      </property>
      <property name="description" type="org.hibernate.type.MaterializedClobType">
         <column name="DESCRIPTION" not-null="false" unique="false" sql-type="text"/>
      </property>
      <property name="isOutlier" type="java.lang.Boolean">
         <column name="IS_OUTLIER" not-null="false" unique="false" sql-type="TINYINT"/>
      </property>
      <property name="metadata" type="org.hibernate.type.MaterializedClobType">
         <column name="METADATA" not-null="false" unique="false" sql-type="text"/>
      </property>
      <property name="processingDate" type="java.util.Date">
         <column name="PROCESSING_DATE" not-null="false" unique="false" sql-type="DATETIME(3)"/>
      </property>
      <!-- only for RNA-Seq data -->
      <property name="sequenceReadCount" type="java.lang.Long">
         <column name="SEQUENCE_READ_COUNT" not-null="false" unique="false" sql-type="BIGINT"/>
      </property>
      <property name="sequenceReadLength" type="java.lang.Integer">
         <column name="SEQUENCE_READ_LENGTH" not-null="false" unique="false" sql-type="INTEGER"/>
      </property>
      <property name="sequencePairedReads" type="java.lang.Boolean">
         <column name="SEQUENCE_PAIRED_READS" not-null="false" unique="false" sql-type="TINYINT"/>
      </property>
      <property name="fastqHeaders" type="org.hibernate.type.MaterializedClobType">
         <column name="FASTQ_HEADERS" not-null="false" unique="false" sql-type="text"/>
      </property>
      <!-- only for single-cell data -->
      <property name="numberOfCells" type="java.lang.Integer">
         <column name="NUMBER_OF_CELLS" not-null="false" sql-type="INTEGER"/>
      </property>
      <property name="numberOfDesignElements">
         <column name="NUMBER_OF_DESIGN_ELEMENTS" not-null="false" sql-type="INTEGER"/>
      </property>
      <property name="numberOfCellsByDesignElements">
         <column name="NUMBER_OF_CELLS_BY_DESIGN_ELEMENTS" not-null="false" sql-type="INTEGER"/>
      </property>
      <!-- the four entities below are assumed readily available in BioAssayValueObject -->
      <many-to-one name="arrayDesignUsed" class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"
                   lazy="false" fetch="select">
         <column name="ARRAY_DESIGN_USED_FK" not-null="true" sql-type="BIGINT"/>
      </many-to-one>
      <many-to-one name="originalPlatform" class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"
                   lazy="false" fetch="select">
         <column name="ORIGINAL_PLATFORM_FK" not-null="false" sql-type="BIGINT"/>
      </many-to-one>
      <many-to-one name="accession" class="ubic.gemma.model.common.description.DatabaseEntry" cascade="all"
                   lazy="false" fetch="join">
         <column name="ACCESSION_FK" not-null="false" sql-type="BIGINT" unique="true"/>
      </many-to-one>
      <!-- BioMaterial are in the second-level cached, so a select fetching is efficient -->
      <many-to-one name="sampleUsed" class="ubic.gemma.model.expression.biomaterial.BioMaterial"
                   lazy="false" fetch="select">
         <column name="SAMPLE_USED_FK" not-null="true" sql-type="BIGINT"/>
      </many-to-one>
   </class>
</hibernate-mapping>
