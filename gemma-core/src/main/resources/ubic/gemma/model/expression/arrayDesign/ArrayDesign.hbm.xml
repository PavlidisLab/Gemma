<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
   <class name="ubic.gemma.model.expression.arrayDesign.ArrayDesign" table="ARRAY_DESIGN">
      <cache usage="read-write" />
      <id name="id" type="java.lang.Long" unsaved-value="null">
         <column name="ID" sql-type="BIGINT"/>
         <generator class="native">
         </generator>
      </id>
      <many-to-one name="auditTrail" class="ubic.gemma.model.common.auditAndSecurity.AuditTrailImpl"  cascade="all" lazy="proxy" fetch="select">
         <column name="AUDIT_TRAIL_FK" not-null="true" sql-type="BIGINT" unique="true"/>
      </many-to-one>
      <!-- This is assumed readily available in AbstractCuratableValueObject -->
      <!-- The curation details are a single-row thing with only eagerly join-fetched many-to-one relationships, so it's no big deal -->
      <many-to-one name="curationDetails" class="ubic.gemma.model.common.auditAndSecurity.curation.CurationDetails" cascade="all" lazy="false" fetch="join">
         <column name="CURATION_DETAILS_FK" not-null="false" sql-type="BIGINT" unique="true"/>
      </many-to-one>
      <property name="name" type="java.lang.String">
         <column name="NAME" not-null="false" unique="false" sql-type="VARCHAR(255)"/>
      </property>
      <property name="description" type="org.hibernate.type.MaterializedClobType">
         <column name="DESCRIPTION" not-null="false" unique="false" sql-type="text"/>
      </property>
      <property name="advertisedNumberOfDesignElements" type="java.lang.Integer">
         <column name="ADVERTISED_NUMBER_OF_DESIGN_ELEMENTS" not-null="false" unique="false" sql-type="INTEGER"/>
      </property>
      <property name="shortName" type="java.lang.String">
         <column name="SHORT_NAME" not-null="false" unique="true" sql-type="VARCHAR(255)"/>
      </property>
       <property name="technologyType">
           <column name="TECHNOLOGY_TYPE" not-null="false" unique="false" sql-type="VARCHAR(255)"/>
           <type name="org.hibernate.type.EnumType">
               <param name="enumClass">ubic.gemma.model.expression.arrayDesign.TechnologyType</param>
               <param name="useNamed">true</param>
           </type>
       </property>
       <!-- considering lazy false on taxon, join fetch; we almost always need that (was: lazy=proxy, fetch=select) -->
      <!-- this is assumed available in ArrayDesignValueObject -->
      <many-to-one name="primaryTaxon" class="ubic.gemma.model.genome.Taxon" lazy="false" fetch="join">
         <column name="PRIMARY_TAXON_FK" not-null="true" sql-type="BIGINT"/>
      </many-to-one>
      <set name="externalReferences" lazy="true" fetch="select" cascade="all">
         <cache usage="read-write" />
         <key foreign-key="DATABASE_ENTRY_ARRAY_DESIGN_FKC">
            <column name="ARRAY_DESIGN_FK" sql-type="BIGINT"/>
         </key>
         <one-to-many class="ubic.gemma.model.common.description.DatabaseEntry"/>
      </set>
      <set name="compositeSequences"  lazy="true" fetch="select" inverse="true" cascade="all">
         <cache usage="read-write" />
         <key foreign-key="COMPOSITE_SEQUENCE_ARRAY_DESIGN_FKC">
            <column name="ARRAY_DESIGN_FK" sql-type="BIGINT"/>
         </key>
         <one-to-many class="ubic.gemma.model.expression.designElement.CompositeSequence"/>
      </set>
      <many-to-one name="mergedInto" class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"  lazy="proxy" fetch="select">
         <column name="MERGED_INTO_FK" not-null="false" sql-type="BIGINT"/>
      </many-to-one>
      <many-to-one name="subsumingArrayDesign" class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"  lazy="proxy" fetch="select">
         <column name="SUBSUMING_ARRAY_DESIGN_FK" not-null="false" sql-type="BIGINT"/>
      </many-to-one>
       <many-to-one name="alternativeTo" class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"  lazy="proxy" fetch="select">
         <column name="ALTERNATIVE_TO_FK" not-null="false" sql-type="BIGINT"/>
      </many-to-one>
      <set name="subsumedArrayDesigns" lazy="true" fetch="select" inverse="true">
         <cache usage="read-write" />
         <key foreign-key="ARRAY_DESIGN_SUBSUMING_ARRAY_DESIGN_FKC">
            <column name="SUBSUMING_ARRAY_DESIGN_FK" sql-type="BIGINT"/>
         </key>
         <one-to-many class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"/>
      </set>
      <set name="mergees"  lazy="true" fetch="select" inverse="true" cascade="save-update">
         <cache usage="read-write" />
         <key foreign-key="ARRAY_DESIGN_MERGED_INTO_FKC">
            <column name="MERGED_INTO_FK" sql-type="BIGINT"/>
         </key>
         <one-to-many class="ubic.gemma.model.expression.arrayDesign.ArrayDesign"/>
      </set>
      <many-to-one name="designProvider" class="ubic.gemma.model.common.auditAndSecurity.Contact"  lazy="proxy" fetch="select">
         <column name="DESIGN_PROVIDER_FK" not-null="false" sql-type="BIGINT"/>
      </many-to-one>
      <!-- this is assumed readily available in the frontend -->
      <!-- it makes sense to use an eager select here because we pro-actively cache them, so it never really result in an additional query -->
      <set name="alternateNames" lazy="false" fetch="select" cascade="all">
         <cache usage="read-write" />
         <key foreign-key="ALTERNATE_NAME_ARRAY_DESIGN_FKC">
            <column name="ARRAY_DESIGN_FK" sql-type="BIGINT"/>
         </key>
         <one-to-many class="ubic.gemma.model.expression.arrayDesign.AlternateNameImpl"/>
      </set>
   </class>
</hibernate-mapping>