# suppress inspection "UnusedProperty" for whole file
# This properties file is used to configure default settings.
# Local installations can override these settings with a Gemma.properties file. 
# See also project.properties for additional settings.
#####################################################
# PATHS
# Some tools will write results or reports here.
# Allow sufficient space, especially if search indices are stored here (see below)
gemma.appdata.home=/var/tmp/gemmaData
# Location where files downloaded by Gemma will end up.
gemma.download.path=${gemma.appdata.home}/download
# Where some outputs will be stored on disk.
gemma.analysis.dir=${gemma.appdata.home}/analysis
# For search engines: where the indexes are stored
gemma.search.dir=${gemma.appdata.home}/searchIndices
# For backward-compatibility with existing configuration, please replace with ${gemma.search.dir}
gemma.compass.dir=${gemma.search.dir}
# The expected structure in this root directory is then: ${gemma.fastq.headers.dir}/GSExxx/GSMxxx/SRRxxx.fastq.header
gemma.fastq.headers.dir=${gemma.appdata.home}/fastqHeaders
# Directory for on-disk cache, overwritten by the ehcache.disk.store.dir system property
gemma.cache.dir=${gemma.appdata.home}/cache
gemma.gene2cs.path=${gemma.appdata.home}/DBReports/gene2cs.info
# Directory for storing large temporary files, /var/tmp is usually inadequate, so it is recommended to override this
gemma.scratch.dir=${gemma.appdata.home}/scratch
# Directory where the source code of Gemma is located, This is a development feature only.
gemma.project.dir=.
# The value of this variable is usually overridden by the gemma.log.dir system property
gemma.log.dir=.
#####################################################
# EMAIL and URLS
# base url for the system, used in formed URLs
gemma.hosturl=https://gemma.msl.ubc.ca
# 'From' address for system notifications and SMTP server settings
gemma.admin.email=gemma@chibi.msl.ubc.ca
gemma.noreply.email=pavlab-apps@msl.ubc.ca
gemma.support.email=pavlab-support@msl.ubc.ca
mail.host=localhost
mail.protocol=smtp
mail.username=XXXXXX
mail.password=
# CORS
cors.allowedOrigins=${gemma.hosturl}
# Google Analytics 4
ga.tracker=
# secret key to send events from the backend
ga.secretKey=
ga.debug=false
#####################################################
# Database configuration
gemma.db.host=localhost
gemma.db.port=3306
gemma.db.name=gemd
gemma.db.url=jdbc:mysql://${gemma.db.host}:${gemma.db.port}/${gemma.db.name}?useSSL=false
# You must override these settings:
gemma.db.user=gemmauser
gemma.db.password=XXXXXX
# Maximum size for the connections pool
gemma.db.maximumPoolSize=10
############################################################
# SECURITY
# Used to elevate authorities for some methods.
gemma.runas.password=XXXXXXX
# Used to provide authentication for threads that run in the server but are autonomous; e.g. scheduled tasks.
# It is suggested you change this password for maximum security!
gemma.agent.userName=gemmaAgent
gemma.agent.password=XXXXXXXX
# If you want to use reCaptcha (http://recaptcha.net/), set these.
gemma.recaptcha.privateKey=
gemma.recaptcha.publicKey=
######################################################
# Sequence and other analysis configuration
# Change these if the programs are not in your path.
# (note: gfServer must be started manually)
gfServer.exe=gfServer
gfClient.exe=gfClient
repeatMasker.exe=RepeatMasker
fastaCmd.exe=blastdbcmd
# Override these hosts and port numbers according to your setup.
gfClient.host=localhost
gfClient.humanServerPort=17778
gfClient.mouseServerPort=17777
gfClient.ratServerPort=17779
gfClient.flyServerPort=17780
gfClient.wormServerPort=17781
gfClient.zebrafishServerPort=17782
# optional (if you intend to run blat with -sensitive)
gfClient.sensitive.humanServerPort=16668
gfClient.sensitive.mouseServerPort=16667
gfClient.sensitive.ratServerPort=16669
# You must configure the following according to your installation.
gfClient.seqDir=/
gfClient.human.seqFiles=/etc/databases/goldenpath/hg38/hg38.2bit
gfClient.mouse.seqFiles=/etc/databases/goldenpath/mm39/mm39.2bit
gfClient.rat.seqFiles=/etc/databases/goldenpath/rn7/rn7.2bit
gfClient.fly.seqFiles=/etc/databases/goldenpath/dm3/dm3.2bit
gfClient.worm.seqFiles=/etc/databases/goldenpath/ce6/ce6.2bit
gfClient.zebrafish.seqFiles=/etc/databases/goldenpath/danRer7/danRer7.2bit
# path to apt-probeset-summarize (Affymetrix power tools for exon array analysis)
affy.power.tools.exec=/usr/bin/apt-probeset-summarize
# path to reference files for affymetrix exon arrays
affy.power.tools.ref.path=/etc/databases/affyexons/
# path to CDF files
affy.power.tools.cdf.path=/etc/databases/affycdfs/
# set to true to use R for linear models. If false, native implementation will be used.
gemma.linearmodels.useR=false
# Host used to run rserve.
#gemma.rserve.hostname=localhost
# Command to start RServe. Note: not currently used. You must start RServe separately.
#rserve.start.command = "R CMD /usr/local/lib/R/site-library/Rserve/Rserve.dbg"
###########################################################
# Sequence annotation databases
# Parameters for GoldenPath database installations.
gemma.goldenpath.db.driver=com.mysql.cj.jdbc.Driver
gemma.goldenpath.db.host=${gemma.db.host}
gemma.goldenpath.db.port=${gemma.db.port}
gemma.goldenpath.db.url=jdbc:mysql://${gemma.goldenpath.db.host}:${gemma.goldenpath.db.port}?useSSL=false
gemma.goldenpath.db.user=${gemma.db.user}
gemma.goldenpath.db.password=${gemma.db.password}
gemma.goldenpath.db.maximumPoolSize=10
gemma.goldenpath.db.human=hg38
gemma.goldenpath.db.mouse=mm39
gemma.goldenpath.db.rat=rn7
gemma.goldenpath.db.fly=dm3
gemma.goldenpath.db.worm=ce6
gemma.goldenpath.db.zebrafish=danRer7
###########################################################
# Scheduling 
# Gemma has "cron" jobs that will run if set to true (e.g. indexing, gene2cs table updates summary reports for ADs and EEs)
# Defaults to false as these cron jobs can hamper performance of Gemma on machines that lack sufficient resources.
quartzOn=false
###########################################################
# ONTOLOGIES AND OTHER DATA SOURCES TO USE
# Pool size for loading ontologies
gemma.ontology.loader.corePoolSize=4
# Other ontologies are configured with defaults through basecode.properties
# by default, same place as other search indices
# You may set basecode properties by prefixing them with 'basecode.'. See BaseCodeConfigurer for more details.
basecode.ontology.index.dir=${gemma.search.dir}
basecode.ontology.cache.dir=${gemma.cache.dir}/ontologyCache
# Auto-load ontologies on startup
load.ontologies=false
# GO
load.geneOntology=false
url.geneOntology=http://purl.obolibrary.org/obo/go.owl
# Gemma ontology
load.gemmaOntology=true
url.gemmaOntology=https://raw.githubusercontent.com/PavlidisLab/TGEMO/master/TGEMO.OWL
# MONDO disease ontology
load.mondoOntology=false
url.mondoOntology=http://purl.obolibrary.org/obo/mondo.owl
# PATO
load.patoOntology=false
url.patoOntology=http://purl.obolibrary.org/obo/pato/pato.owl
# Homologene
load.homologene=false
###########################################################
# MISCELLANEOUS
# Should javascript errors be logged.
gemma.javascript.log=true
# Default location for FASTQ header information
############################################################
# HIBERNATE, CACHE AND GRID CONFIGURATION
#### Transaction settings #####
# how many times transactions will be retried (under certain conditions e.g. deadlocks)
gemma.transaction.maxretries=10
#### Hibernate settings.  #####
# See https://docs.jboss.org/hibernate/orm/4.2/manual/en-US/html/ch03.html
# this should be set to validate in production
gemma.hibernate.hbm2ddl.auto=
# Setting the following to true might be good in development/debugging environments.
gemma.hibernate.format_sql=false
gemma.hibernate.show_sql=false
gemma.hibernate.jdbc_fetch_size=128
gemma.hibernate.jdbc_batch_size=32
# Default size for batch-fetching data (adjust as needed, requires more memory!)
# It's beneficial to use a power of two because the query plan can be shared with other queries
gemma.hibernate.default_batch_fetch_size=128
#coexpression vis/grid properties
#controls how many results will be returned per query gene:
gemma.coexpressionSearch.maxResultsPerQueryGene=200
#controls how many approximate max edges(coexpression results) will be returned to the cytoscape visualizer after trimming.
#Sometimes graphs can come back with more than this number and that is a result of the fact that we only filter edges between non-query genes.
gemma.cytoscapeweb.maxEdges=2000
# FIXME these settings are based on coordinating things a bit with GeneCoexpressionSearchService, but it probably isn't completely coherent (and also probably redundant)
#controls the maximum number genes we are allowed to search for per regular search(search that populates grid)
gemma.coexpressionSearch.maxGenesPerQuery=125
#controls the maximum number of genes that can be used for the coexpression querygenesonly' query.
gemma.coexpressionSearch.maxGenesForQueryGenesOnly=500
#controls the maximum number of genes that can be used for the large coexpression 'my genes only' query, that is, no 'complete the graph' operations.
gemma.coexpressionSearch.maxGenesPerCoexLargeQuery=1000
############################################################
# Configuration for the local task executor
# This is used for short-lived tasks and is based on Spring TaskExecutor and AsyncTaskExecutor API
gemma.localTasks.corePoolSize=16
############################################################
# Configuration for the expression data file task executor
# This is used for generating data file, thus medium-lived I/O intensive tasks
# Each task will typically consume a database connection, so this should be smaller than the ${gemma.db.maximumPoolSize}
gemma.expressionDataFileTasks.corePoolSize=4
gemma.expressionDataFileTasks.queueCapacity=10
############################################################
# Configuration for the background tasks executor
# This is used for long-lived tasks via the gemma.core.tasks API
gemma.backgroundTasks.numberOfThreads=20
############################################################
# CONFIGURATION USED ONLY IN TESTS
# Separate test database if desired
# The defaults will work out-of-the-box with the testdb declared in docker-compose.yml
gemma.testdb.host=localhost
gemma.testdb.port=3307
gemma.testdb.name=gemdtest
gemma.testdb.url=jdbc:mysql://${gemma.testdb.host}:${gemma.testdb.port}/${gemma.testdb.name}?useSSL=false
gemma.testdb.user=gemmatest
gemma.testdb.password=1234
gemma.testdb.maximumPoolSize=10
gemma.testdb.agent.userName=gemmaAgent
gemma.testdb.agent.password=XXXXXXXX
# Initialize the test database, this can be disabled to make integration tests faster
gemma.testdb.initialize=true
#the external database id to exclude by default in phenocarta
gemma.neurocarta.exluded_database_id=85
# Featured external databases in Gemma Web About page and Gemma REST main endpoint
gemma.externalDatabases.featured=hg38,mm39,rn7,gene,go
# Enable cache statistics on startup
gemma.cacheMonitor.enableStatistics=false
# URL to use for GemBrow
gemma.gemBrow.url=${gemma.hosturl}/browse
############################################################
# Python
# You will likely need to create a virtualenv for Gemma dependencies
python.exe=python
############################################################
# Static Asset Server
# Enable the static server for serving assets externally
gemma.staticAssetServer.enabled=false
# Base URL relative to which static resources are served
# In a development setting, you can serve assets continuously by running 'npm run serve' from the gemma-web module
# directory
gemma.staticAssetServer.baseUrl=http://localhost:8082
# Prefix from which resources are served, only used by the internal server
gemma.staticAssetServer.allowedDirs=/bundles/,/fonts/,/images/,/scripts/,/styles/
# Set to true to launch npm automatically
# Enable the internal static asset server
gemma.staticAssetServer.internal.enabled=false
gemma.staticAssetServer.internal.prefix=${gemma.project.dir}/gemma-web/src/main/webapp
gemma.staticAssetServer.internal.logFile=${gemma.log.dir}/gemma-static-asset-server.log