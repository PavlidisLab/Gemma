<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>gemma</artifactId>
		<groupId>gemma</groupId>
		<version>1.30.0-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<artifactId>gemma-web</artifactId>
	<packaging>war</packaging>
	<name>Gemma Web</name>
	<description>Gemma web application</description>
	<build>
		<finalName>Gemma</finalName>
		<testResources>
			<testResource>
				<targetPath>WEB-INF</targetPath>
				<directory>${project.basedir}/src/main/webapp/WEB-INF</directory>
			</testResource>
		</testResources>
		<plugins>
			<plugin>
				<groupId>com.github.klieber</groupId>
				<artifactId>phantomjs-maven-plugin</artifactId>
				<version>0.7</version>
				<executions>
					<execution>
						<phase>test-compile</phase>
						<goals>
							<goal>install</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<version>1.9.7</version>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.github.searls</groupId>
				<artifactId>jasmine-maven-plugin</artifactId>
				<version>2.0</version>
				<executions>
					<execution>
						<phase>integration-test</phase>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<jsSrcDir>src/main/webapp/scripts</jsSrcDir>
					<sourceIncludes>
						<!-- Order is observed. -->
						<include>lib/prototype.js</include>
						<include>lib/scriptaculous/scriptaculous.js</include>
						<include>lib/scriptaculous/effects.js</include>
						<include>lib/scriptaculous/**/*.js</include>
						<include>lib/ext/adapter/**/*.js</include>
						<include>lib/ext/ext-all-debug.js</include>
						<include>lib/ext/extensions/**/*.js</include>
						<include>lib/globals.js</include>
						<include>lib/excanvas.js</include>
						<include>lib/typeface.js</include>
						<include>lib/excanvas-text.js</include>
						<include>lib/faces/**/.js</include>
						<include>lib/rsvp.js</include>
						<include>lib/*.js</include>
						<include>api/ext/**/*.js</include>
						<include>api/valueObjectsInheritanceStructure.js</include>
						<include>api/userHelpMessages.js</include>
						<include>api/util/TutorialQtips.js</include>
						<include>api/util/*.js</include>
						<include>api/visualization/cytoscape/CytoscapeSettings.js</include>
						<include>api/visualization/cytoscape/CytoscapeDisplay.js</include>
						<include>api/visualization/cytoscape/*.js</include>
						<include>api/dwrServices.js</include>
						<include>api/**/*.js</include>
						<include>api/*.js</include>
					</sourceIncludes>
					<sourceExcludes>
						<!-- <exclude>api/dwrServices.js</exclude> -->
						<exclude>app/*.js</exclude>
					</sourceExcludes>
					<preloadSources>
						<source>lib/jquery-2.1.1.js</source>
						<source>helpers/FakeDWR.js</source>
						<source>helpers/jasmine-jquery.js</source>
						<source>helpers/globals.js</source>
					</preloadSources>
					<!-- instead of html unit -->
					<webDriverClassName>org.openqa.selenium.phantomjs.PhantomJSDriver</webDriverClassName>
					<webDriverCapabilities>
						<capability>
							<name>phantomjs.binary.path</name>
							<!--suppress MavenModelInspection -->
							<value>${phantomjs.binary}</value>
						</capability>
					</webDriverCapabilities>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.2</version>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>com.github.klieber</groupId>
										<artifactId>phantomjs-maven-plugin</artifactId>
										<versionRange>[0.3,)</versionRange>
										<goals>
											<goal>install</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore/>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>gemma</groupId>
			<artifactId>gemma-core</artifactId>
			<version>${project.version}</version>
		</dependency>
		<!-- This is used for tests -->
		<dependency>
			<groupId>gemma</groupId>
			<artifactId>gemma-core</artifactId>
			<version>${project.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>gemma</groupId>
			<artifactId>gemma-rest</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>

		<!-- Spring Security -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Spring extra modules -->
		<!-- latest for Spring 3 -->
		<dependency>
			<groupId>org.springframework.social</groupId>
			<artifactId>spring-social-core</artifactId>
			<version>1.0.3.RELEASE</version>
			<scope>runtime</scope>
		</dependency>
		<!-- latest for Spring 3 -->
		<dependency>
			<groupId>org.springframework.ws</groupId>
			<artifactId>spring-ws-core</artifactId>
			<version>2.1.4.RELEASE</version>
		</dependency>

		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-validator</groupId>
			<artifactId>commons-validator</artifactId>
			<version>1.7</version>
		</dependency>

		<!-- Scheduling -->
		<!-- This is the latest Quartz release compatible with Spring 3 -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.6</version>
		</dependency>

		<!-- RSS feeds (depends on spring-web version) -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome-fetcher</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- JSON -->
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20220924</version>
		</dependency>

		<!-- AJAX -->
		<dependency>
			<groupId>org.directwebremoting</groupId>
			<artifactId>dwr</artifactId>
			<version>2.0.11-RELEASE</version>
		</dependency>

		<!-- Templating -->
		<dependency>
			<groupId>opensymphony</groupId>
			<artifactId>sitemesh</artifactId>
			<version>2.4.2</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Static assets compression -->
		<dependency>
			<groupId>net.jawr</groupId>
			<artifactId>jawr-core</artifactId>
			<version>${jawr.version}</version>
		</dependency>
		<dependency>
			<groupId>net.jawr.extensions</groupId>
			<artifactId>jawr-dwr2.x-extension</artifactId>
			<version>${jawr.version}</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Tomcat (defined by production deployment constraints) -->
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-servlet-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.tomcat</groupId>
			<artifactId>tomcat-jsp-api</artifactId>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-web</artifactId>
		</dependency>

		<!-- JSTL -->
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-spec</artifactId>
			<version>1.2.5</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.taglibs</groupId>
			<artifactId>taglibs-standard-impl</artifactId>
			<version>1.2.5</version>
			<scope>runtime</scope>
		</dependency>
		<!-- optional dependency of taglibs-standard-impl that accelerates XML processing -->
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
			<version>2.7.2</version>
			<scope>runtime</scope>
		</dependency>

		<!-- Gemma Slack Bot -->
		<dependency>
			<groupId>com.slack.api</groupId>
			<artifactId>slack-api-client</artifactId>
			<version>${slack.version}</version>
		</dependency>
		<dependency>
			<groupId>com.slack.api</groupId>
			<artifactId>slack-api-model</artifactId>
			<version>${slack.version}</version>
		</dependency>
	</dependencies>
</project>
