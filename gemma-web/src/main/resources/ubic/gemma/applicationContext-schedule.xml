<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/task
            http://www.springframework.org/schema/task/spring-task.xsd"
       profile="web">

    <!-- author: keshav -->

    <task:annotation-driven/>
    <!-- Note: we cannot use @Scheduled and @Async because the security context is not available to the runnables they create. -->

    <!-- Quartz Configuration. The schedulerFactorBean is the main entry point. See also QuartzUtils for how this can be turned
        off. -->
    <bean id="schedulerFactoryBean" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref local="indexTrigger"/>
                <ref local="arrayDesignReportTrigger"/>
                <ref local="expressionExperimentReportTrigger"/>
                <ref local="whatsNewTrigger"/>
                <ref local="gene2CsUpdateTrigger"/>
                <ref local="batchInfoTrigger"/>
                <ref local="ee2cUpdateTrigger"/>
                <!-- <ref local="viewTrigger" /> -->
                <!--<ref local="monitorSpaceTrigger" /> -->
            </list>
        </property>
        <property name="autoStartup" value="${quartzOn}"/>
    </bean>

    <!-- Triggers -->
    <!-- Cron trigger fields are: Seconds 0-59 , - * / Minutes 0-59 , - * / Hours 0-23 , - * / Day-of-month 1-31 , - * ? / L
        W Month 1-12 or JAN-DEC , - * / Day-of-Week 1-7 or SUN-SAT , - * ? / L # Year (Optional) empty, 1970-2099 , - * / See http://www.opensymphony.com/quartz/api/org/quartz/CronExpression.html
        for details, http://www.opensymphony.com/quartz/api/org/quartz/CronTrigger.html for examples. If you want a schedule that
        fire frequently for testing, try <value>0 0/2 * ? * *</value>. -->
    <bean id="batchInfoTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="batchInfoDetail"/>
        <!-- every day at 00:30:00 -->
        <property name="cronExpression" value="0 30 0 * * ?"/>
    </bean>
    <bean id="indexTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="indexJobDetail"/>
        <!-- every saturday at 01:15:00 -->
        <property name="cronExpression" value="0 15 1 ? * SAT"/>
    </bean>
    <bean id="expressionExperimentReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="expressionExperimentReportJobDetail"/>
        <!-- every first-of-the-month at 00:15:00 -->
        <property name="cronExpression" value="0 15 0 1 * ?"/>
    </bean>
    <bean id="arrayDesignReportTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="arrayDesignReportJobDetail"/>
        <!-- every first-of-the-month at 01:30:00 -->
        <property name="cronExpression" value="0 30 1 1 * ?"/>
    </bean>
    <bean id="whatsNewTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="whatsNewJobDetail"/>
        <!-- every day at 00:15:00 -->
        <property name="cronExpression" value="0 15 0 * * ?"/>
    </bean>
    <bean id="gene2CsUpdateTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="gene2CsUpdateJobDetail"/>
        <!-- every day at 00:40:00 -->
        <property name="cronExpression" value="0 40 0 * * ?"/>
    </bean>
    <bean id="ee2cUpdateTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail">
            <bean class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
                <property name="targetObject" ref="tableMaintenanceUtil"/>
                <property name="targetMethod" value="updateExpressionExperiment2CharacteristicEntries"/>
                <property name="concurrent" value="false"/>
            </bean>
        </property>
        <!-- every 30 minutes during working hours (when the curators actively update annotations) -->
        <property name="cronExpression" value="0 0/30 9-17 ? * MON-FRI"/>
    </bean>

    <!-- TODO make this work in the space, disabling until then. <bean id="viewTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail"> <ref bean="viewJobDetail" /> </property> <property name="cronExpression"> <value>0 15 1 10 *
        ?</value> </property> </bean> -->
    <!--<bean id="monitorSpaceTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean"> -->
    <!--<property name="jobDetail"> -->
    <!--<ref bean="monitorSpaceJobDetail" /> -->
    <!--</property> -->
    <!--<property name="repeatInterval"> -->
    <!--<value>5000</value> -->
    <!--</property> -->

    <!--<property name="startDelay" value="12" /> &lt;!&ndash; wait before beginning &ndash;&gt; -->
    <!--</bean> -->


    <!-- Job details -->
    <bean id="batchInfoDetail" class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="expressionExperimentReportService"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="recalculateBatchInfo"/>
    </bean>
    <bean id="indexJobDetail" class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="indexService"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="indexAll"/>
    </bean>
    <bean id="arrayDesignReportJobDetail"
          class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="arrayDesignReportService"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="generateArrayDesignReport"/>
    </bean>
    <bean id="expressionExperimentReportJobDetail"
          class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="expressionExperimentReportService"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="generateSummaryObjects"/>
    </bean>
    <bean id="whatsNewJobDetail"
          class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="whatsNewService"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="generateWeeklyReport"/>
    </bean>

    <bean id="gene2CsUpdateJobDetail"
          class="ubic.gemma.web.scheduler.SecureMethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="tableMaintenanceUtil"/>
        <property name="concurrent" value="false"/>
        <property name="targetMethod" value="updateGene2CsEntries"/>
    </bean>

    <bean id="expressionExperimentReportService"
          class="ubic.gemma.core.analysis.report.ExpressionExperimentReportServiceImpl"/>
    <bean id="phenotypeAssociationManagerService"
          class="ubic.gemma.core.association.phenotype.PhenotypeAssociationManagerServiceImpl"/>
    <bean id="tableMaintenanceUtil" class="ubic.gemma.persistence.service.TableMaintenanceUtilImpl"/>
    <bean id="whatsNewService" class="ubic.gemma.core.analysis.report.WhatsNewServiceImpl"/>
    <bean id="arrayDesignReportService" class="ubic.gemma.core.analysis.report.ArrayDesignReportServiceImpl"/>
    <bean id="indexService" class="ubic.gemma.core.search.indexer.IndexServiceImpl"/>
</beans>