# This is the suggested development configuration for Gemma Web
# Note that this file must be placed under $CATALINA_BASE/lib if you are using Tomcat
# More information here: https://tomcat.apache.org/tomcat-8.5-doc/logging.html

#################################################################################################
# APPENDERS
#################################################################################################

# Basic appender to log to the console.
log4j.appender.stderr=org.apache.log4j.ConsoleAppender
log4j.appender.stderr.target=System.err
log4j.appender.stderr.layout=org.apache.log4j.PatternLayout
log4j.appender.stderr.layout.ConversionPattern=[Gemma %d] %p [%t] %C.%M(%L) | %m%n

# Special appender for task progress updates
log4j.appender.progressUpdate=ubic.gemma.core.job.executor.common.ProgressUpdateAppender

#####################################################################################################
# LOGGING LEVELS
#####################################################################################################

# root
log4j.rootLogger=INFO,stderr

# baseCode
log4j.logger.ubic.basecode=INFO
log4j.logger.ubic.basecode.ontology.model.PropertyFactory=ERROR
log4j.logger.ubic.basecode.ontology.providers=WARN

# Gemma
log4j.logger.ubic.gemma=INFO,progressUpdate
log4j.logger.ubic.gemma.core.ontology.providers=WARN

############# THIRD PARTY CLASSES #####################
# Control logging for other packages
log4j.logger.org=WARN
log4j.logger.net=WARN
log4j.logger.com=WARN

# suppress inspection "SpellCheckingInspection"
log4j.logger.com.opensymphony.oscache=WARN

# Spring
log4j.logger.org.springframework=WARN
log4j.logger.org.springframework.beans.GenericTypeAwarePropertyDescriptor=FATAL
log4j.logger.org.springframework.security.access.event.LoggerListener=INFO
log4j.logger.org.springframework.security.authentication.event.LoggerListener=ERROR

# DWR
# suppress inspection "SpellCheckingInspection"
log4j.logger.org.directwebremoting=WARN

# Apache Commons
log4j.logger.org.apache.commons=WARN

# Ehcache
log4j.logger.net.sf.ehcache=ERROR
#filter out "A soft-locked cache entry was removed already. Out of balance lock/unlock sequences"
log4j.logger.net.sf.ehcache.hibernate.strategy.AbstractReadWriteEhcacheAccessStrategy=FATAL

# Compass
log4j.logger.org.compass=WARN
# annoying message we can't fix from Compass.
log4j.logger.org.compass.gps.device.hibernate.indexer=DEBUG

# JavaSpaces
# suppress inspection "SpellCheckingInspection"
log4j.logger.ubic.gemma.grid.javaspaces=INFO

# Swagger codegen
# Enable this to debug Swagger annotations
#log4j.logger.io.swagger=DEBUG

# Hibernate
log4j.logger.org.hibernate=WARN
# To turn these on set them to "TRACE".
# To see Hibernate sql.
#log4j.logger.org.hibernate.SQL=TRACE
# Log all JDBC parameters (ie in queries '?'), also in results.
#log4j.logger.org.hibernate.type=TRACE
# Log all SQL DDL statements as they are executed
#log4j.logger.org.hibernate.tool.hbm2ddl=INFO
# Log the state of all entities (max 20 entities) associated with the session at flush time
#log4j.logger.org.hibernate.pretty=TRACE
# Log all second-level cache activity
#log4j.logger.org.hibernate.cache=TRACE
# Log transaction related activity
#log4j.logger.org.hibernate.transaction=TRACE
# Log all JDBC resource acquisition
#log4j.logger.org.hibernate.jdbc=DEBUG
# Log HQL and SQL ASTs during query parsing
#log4j.logger.org.hibernate.hql.ast.AST=WARN
# Log all JAAS authorization requests
#log4j.logger.org.hibernate.secure=INFO
# Log everything (a lot of information, but very useful for troubleshooting)
#log4j.logger.org.hibernate=TRACE
#log4j.logger.org.springframework.orm.hibernate3.HibernateTransactionManager=DEBUG
#log4j.logger.org.hibernate.jdbc.AbstractBatcher=DEBUG
# Extras for hibernate:
# Avoid warnings about expired objects.
log4j.logger.org.hibernate.cache.ReadWriteCache=ERROR
# Avoid warnings about collection fail-safe cleanup.
log4j.logger.org.hibernate.engine.loading.LoadContexts=ERROR