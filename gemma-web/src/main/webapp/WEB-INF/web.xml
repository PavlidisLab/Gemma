<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <display-name>Gemma</display-name>

    <!-- Define the CSS Theme, put in servlet context by StartupListener -->
    <context-param>
        <param-name>theme</param-name>
        <param-value>antisense</param-value>
    </context-param>

    <!-- Define the basename for a resource bundle for I18N -->
    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.localizationContext</param-name>
        <param-value>messages</param-value>
    </context-param>

    <!-- Fallback locale if no bundles found for browser's preferred locale -->
    <!-- Force a single locale using param-name 'javax.servlet.jsp.jstl.fmt.locale' -->
    <context-param>
        <param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
        <param-value>en</param-value>
    </context-param>

    <!-- Context Configuration locations for Spring XML files -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            classpath*:gemma/gsec/applicationContext-*.xml,classpath*:ubic/gemma/applicationContext-*.xml,classpath:ubic/gemma/dataSource.xml
        </param-value>
    </context-param>

    <!-- Filters.  -->

    <!-- Security. -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <!--  Filter that allows one to specify a character encoding for requests-->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>

    <!-- Page decoration -->
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
    </filter>

    <!-- CORS -->
    <filter>
        <filter-name>cors</filter-name>
        <filter-class>ubic.gemma.web.services.rest.servlet.CorsFilter</filter-class>
    </filter>

    <!-- Spring Security -->
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!-- enforce UTF-8 -->
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/j_spring_security_check</url-pattern>
        <servlet-name>gemma</servlet-name>
    </filter-mapping>

    <!-- All requests are decorated with sitemesh -->
    <filter-mapping>
        <filter-name>sitemesh</filter-name>
        <servlet-name>gemma</servlet-name>
    </filter-mapping>

    <filter-mapping>
        <filter-name>cors</filter-name>
        <servlet-name>gemma-rest</servlet-name>
    </filter-mapping>

    <listener>
        <listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
    </listener>
    <listener>
        <listener-class>ubic.gemma.web.listener.StartupListener</listener-class>
    </listener>
    <listener>
        <listener-class>ubic.gemma.web.listener.UserCounterListener</listener-class>
    </listener>
    <listener>
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
    </listener>

    <!-- Dispatch Servlet Configuration -->
    <servlet>
        <servlet-name>gemma</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- this is always after the JAWR servlets are loaded -->
        <load-on-startup>2</load-on-startup>
    </servlet>

    <!-- Defines the Spring-WS MessageDispatcherServlet -->
    <servlet>
        <servlet-name>gemma-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <!-- Transform the location attributes in WSDLs -->
            <param-name>transformWsdlLocations</param-name>
            <param-value>false</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>gemma-rest</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>io.swagger.v3.jaxrs2.integration.resources,ubic.gemma.web.services.rest</param-value>
        </init-param>
        <init-param>
            <!-- this is necessary because the file would otherwise be looked at under /WEB-INF/openapi-configuration.yaml -->
            <param-name>openApi.configuration.location</param-name>
            <param-value>/WEB-INF/classes/openapi-configuration.yaml</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>gemma-static-js</servlet-name>
        <servlet-class>net.jawr.web.servlet.JawrServlet</servlet-class>
        <init-param>
            <param-name>configLocation</param-name>
            <param-value>/jawr.properties</param-value>
        </init-param>
        <load-on-startup>0</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>gemma-static-binary</servlet-name>
        <servlet-class>net.jawr.web.servlet.JawrServlet</servlet-class>
        <init-param>
            <param-name>type</param-name>
            <param-value>binary</param-value>
        </init-param>
        <init-param>
            <param-name>configLocation</param-name>
            <param-value>/jawr.properties</param-value>
        </init-param>
        <!-- The Jawr Image servlet must start before the Jawr CSS Servlet -->
        <load-on-startup>0</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>gemma-static-css</servlet-name>
        <servlet-class>net.jawr.web.servlet.JawrServlet</servlet-class>
        <init-param>
            <param-name>configLocation</param-name>
            <param-value>/jawr.properties</param-value>
        </init-param>
        <init-param>
            <param-name>type</param-name>
            <param-value>css</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <servlet-name>gemma</servlet-name>
        <url-pattern>/</url-pattern>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gemma-ws</servlet-name>
        <url-pattern>/ws/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gemma-rest</servlet-name>
        <url-pattern>/rest/v2/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/resources/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gemma-static-js</servlet-name>
        <url-pattern>*.js</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gemma-static-css</servlet-name>
        <url-pattern>*.css</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>gemma-static-binary</servlet-name>
        <!-- images -->
        <url-pattern>*.png</url-pattern>
        <url-pattern>*.jpg</url-pattern>
        <url-pattern>*.gif</url-pattern>
        <url-pattern>*.svg</url-pattern>
        <url-pattern>*.ico</url-pattern>
        <!-- fonts -->
        <url-pattern>*.otf</url-pattern>
        <url-pattern>*.eot</url-pattern>
        <url-pattern>*.ttf</url-pattern>
        <url-pattern>*.woff</url-pattern>
        <url-pattern>*.woff2</url-pattern>
        <!-- flash animation -->
        <url-pattern>*.swf</url-pattern>
    </servlet-mapping>

    <!-- a few static resources to be delivered by Tomcat -->
    <servlet-mapping>
        <servlet-name>default</servlet-name>
        <url-pattern>/robots.txt</url-pattern>
        <url-pattern>/sitemap.xml</url-pattern>
    </servlet-mapping>

    <session-config>
        <session-timeout>60</session-timeout>
    </session-config>

    <error-page>
        <error-code>500</error-code>
        <location>/pages/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>502</error-code>
        <location>/pages/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>503</error-code>
        <location>/pages/error/500.jsp</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/pages/error/400.jsp</location>
    </error-page>
    <error-page>
        <error-code>403</error-code>
        <location>/pages/error/403.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/pages/error/404.jsp</location>
    </error-page>

    <!--  for web fonts -->
    <mime-mapping>
        <extension>eot</extension>
        <mime-type>application/vnd.ms-fontobject</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>otf</extension>
        <mime-type>font/opentype</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>ttf</extension>
        <mime-type>application/x-font-ttf</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>woff</extension>
        <mime-type>application/x-font-woff</mime-type>
    </mime-mapping>
    <mime-mapping>
        <extension>svg</extension>
        <mime-type>image/svg+xml</mime-type>
    </mime-mapping>
</web-app>