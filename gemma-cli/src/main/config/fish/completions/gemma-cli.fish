set gemma_all_subcommands 'adATcleanup addChangelogEntry addExternalDatabase addGEOData addMetadataFile addPlatformSequences addProtocol addTSVData affyAltsUpdate affyCollapse affyFromCel aggregateSingleCellData blackList blatPlatform coexpAnalyze complete corrMat deleteDiffEx deleteExperiments deletePlatformElements deleteProcessedData deleteProtocol deleteRawData deleteSingleCellData deleteSingleCellDataAggregate detachSequences detectQuantitationType diffExAnalyze downloadSingleCellData dumpForNIF fetchMeshTerms fillBatchInfo findDatasetPubs findObsoleteTerms fixOntologyTermLabels geneUpdate generateDataFile generateDatabaseUpdate genericPlatform getDataMatrix getDiffExAnalysis getRawDataMatrix getSingleCellDataMatrix getSingleCellMetadata importDesign listDataFileLocks listExternalDatabases listGEOData listProtocols listQuantitationTypes loadGenesFromFile loadSingleCellData loadTaxa lockDataFile makePlatformAnnotFiles makePrivate makeProcessedData makePublic mapPlatformToGenes mergePlatforms migrateFactorValues orderVectorsByDesign pca platformMapSummary platformRepeatScan platformSubsumptionTest printExperimentalDesign probeRename pubmedAssociateToExperiments pubmedLoad pubmedSearchAndSave refreshExperiment replaceData rnaseqBatchInfo rnaseqDataAdd runGeeq searchIndex seqCleanup splitExperiment switchExperimentPlatform transformSingleCellData ubic.gemma.apps.AffyDataFromCelCli ubic.gemma.apps.AffyProbeCollapseCli ubic.gemma.apps.ArrayDesignAlternativePopulateCli ubic.gemma.apps.ArrayDesignAnnotationFileCli ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli ubic.gemma.apps.ArrayDesignBioSequenceDetachCli ubic.gemma.apps.ArrayDesignBlatCli ubic.gemma.apps.ArrayDesignMapSummaryCli ubic.gemma.apps.ArrayDesignMergeCli ubic.gemma.apps.ArrayDesignProbeCleanupCLI ubic.gemma.apps.ArrayDesignProbeMapperCli ubic.gemma.apps.ArrayDesignProbeRenamerCli ubic.gemma.apps.ArrayDesignRepeatScanCli ubic.gemma.apps.ArrayDesignSequenceAssociationCli ubic.gemma.apps.ArrayDesignSubsumptionTesterCli ubic.gemma.apps.BatchEffectPopulationCli ubic.gemma.apps.BibRefUpdaterCli ubic.gemma.apps.BioSequenceCleanupCli ubic.gemma.apps.BlacklistCli ubic.gemma.apps.CellLevelMetadataWriterCli ubic.gemma.apps.CompleteCli ubic.gemma.apps.DatabaseViewGeneratorCLI ubic.gemma.apps.DeleteDiffExCli ubic.gemma.apps.DeleteExperimentsCli ubic.gemma.apps.DetectQuantitationTypeCli ubic.gemma.apps.DifferentialExpressionAnalysisCli ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli ubic.gemma.apps.ExperimentalDesignImportCli ubic.gemma.apps.ExperimentalDesignViewCli ubic.gemma.apps.ExperimentalDesignWriterCLI ubic.gemma.apps.ExpressionDataCorrMatCli ubic.gemma.apps.ExpressionDataMatrixWriterCLI ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli ubic.gemma.apps.ExpressionExperimentDataUpdaterCli ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli ubic.gemma.apps.ExpressionExperimentPrimaryPubCli ubic.gemma.apps.ExternalDatabaseAdderCli ubic.gemma.apps.ExternalDatabaseOverviewCli ubic.gemma.apps.ExternalDatabaseUpdaterCli ubic.gemma.apps.ExternalFileGeneLoaderCLI ubic.gemma.apps.FactorValueMigratorCLI ubic.gemma.apps.FindObsoleteTermsCli ubic.gemma.apps.FixOntologyTermLabelsCli ubic.gemma.apps.GeeqCli ubic.gemma.apps.GenerateDatabaseUpdateCli ubic.gemma.apps.GenericGenelistDesignGenerator ubic.gemma.apps.GeoGrabberCli ubic.gemma.apps.IndexGemmaCLI ubic.gemma.apps.LinkAnalysisCli ubic.gemma.apps.ListExpressionDataFIleLocksCli ubic.gemma.apps.ListQuantitationTypesCli ubic.gemma.apps.LoadExpressionDataCli ubic.gemma.apps.LoadSimpleExpressionDataCli ubic.gemma.apps.LockExpressionDataFileCli ubic.gemma.apps.MakeExperimentPrivateCli ubic.gemma.apps.MakeExperimentsPublicCli ubic.gemma.apps.MeshTermFetcherCli ubic.gemma.apps.MultifunctionalityCli ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI ubic.gemma.apps.NcbiGeneLoaderCLI ubic.gemma.apps.OrderVectorsByDesignCli ubic.gemma.apps.ProcessedDataComputeCLI ubic.gemma.apps.ProcessedDataDeleterCli ubic.gemma.apps.ProtocolAdderCli ubic.gemma.apps.ProtocolDeleterCli ubic.gemma.apps.ProtocolListCli ubic.gemma.apps.PubMedLoaderCli ubic.gemma.apps.PubMedSearcher ubic.gemma.apps.RNASeqBatchInfoCli ubic.gemma.apps.RNASeqDataAddCli ubic.gemma.apps.RawDataDeleterCli ubic.gemma.apps.RawExpressionDataWriterCli ubic.gemma.apps.RefreshExperimentCli ubic.gemma.apps.ReplaceDataCli ubic.gemma.apps.SVDCli ubic.gemma.apps.SingleCellDataAggregateDeleterCli ubic.gemma.apps.SingleCellDataAggregatorCli ubic.gemma.apps.SingleCellDataDeleterCli ubic.gemma.apps.SingleCellDataDownloaderCli ubic.gemma.apps.SingleCellDataLoaderCli ubic.gemma.apps.SingleCellDataTransformCli ubic.gemma.apps.SingleCellDataWriterCli ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli ubic.gemma.apps.SplitExperimentCli ubic.gemma.apps.TaxonLoaderCli ubic.gemma.apps.UnifiedOntologyUpdaterCli ubic.gemma.apps.UpdateEE2CCli ubic.gemma.apps.UpdateEe2AdCli ubic.gemma.apps.UpdateGene2CsCli ubic.gemma.apps.UpdatePubMedCli ubic.gemma.apps.VectorMergingCli updateEe2Ad updateEe2c updateExternalDatabase updateGEOData updateGOAnnots updateGene2Cs updateMultifunc updatePubMeds updateSingleCellSparsityMetrics updateUnifiedOntology vectorMerge viewChangelog viewExpDesigns'
complete -e gemma-cli
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -s h -l help -f --description 'Show help'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o ha -l help-all -f --description 'Show complete help with all available CLI commands'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -s c -l completion -f --description 'Generate a completion script'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o ce -l completion-executable -r -f --description 'Name of the executable to generate completion for (defaults to gemma-cli)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o cs -l completion-shell -r -a '(echo -e "bash\t\nfish\t" 2>/dev/null)' -f --description 'Indicate which shell to generate completion for. Only fish and bash are supported'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o cl -l complete-loggers -f --description 'List all available logger that can be used for -logger.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o cc -l complete-config -f --description 'List all available configuration properties'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o version -l version -f --description 'Show Gemma version'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o logger -l logger -r -a '(gemma-cli -cl 2>/dev/null)' -f --description 'Configure a specific logger verbosity (0=silent, 5=very verbose; default is custom, see log4j2.xml). You can also use the following: off, fatal, error, warn, info, debug, trace.\nFor example, '"'"'--logger ubic.gemma=5'"'"', '"'"'--logger org.hibernate.SQL=5'"'"' or '"'"'--logger org.hibernate.SQL=debug'"'"'. '
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -s v -l verbosity -r -a '(echo -e "off\t\nfatal\t\nerror\t\nwarn\t\ninfo\t\ndebug\t\ntrace\t\n0\toff\n1\tfatal\n2\terror\n3\twarn\n4\tinfo\n5\tdebug\n6\ttrace" 2>/dev/null)' -f --description 'Set verbosity level for all loggers (0=silent, 5=very verbose; default is custom, see log4j2.xml). You can also use the following: off, fatal, error, warn, info, debug, trace.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o testdb -l testdb -f --description 'Use the test database as described by gemma.testdb.* configuration'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -o profiling -l profiling -f --description 'Enable profiling'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli --description 'Add a record to the changelog for the given experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli' -o ce -l changelog-entry -r -f --description 'The changelog entry to add. If not supplied, a text editor will be prompted.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addChangelogEntry --description 'Add a record to the changelog for the given experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addChangelogEntry' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addChangelogEntry' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addChangelogEntry' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addChangelogEntry' -o ce -l changelog-entry -r -f --description 'The changelog entry to add. If not supplied, a text editor will be prompted.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.LoadExpressionDataCli --description 'Load data from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -s f -l file -r -f --description 'Optional path to file with list of experiment accessions to load'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -s e -l acc -r -f --description 'Optional comma-delimited list of accessions (GSE or GDS or GPL) to load'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -s y -l platforms -f --description 'Load platforms (array designs) only; implied if you supply GPL instead of GSE or GDS'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -s m -l match -f --description 'Try to match samples across platforms (e.g. multi-part microarray platforms)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o splitByPlatform -f --description 'Force data from each platform into a separate experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o force -l force -f --description 'Reload data set if it already exists in system'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o update -l update -f --description 'Update existing experiment in Gemma; overrides all other options except those choosing experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o nopost -f --description 'Suppress postprocessing steps'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o softfile -r -f --description 'Load directly from soft.gz file; use with single accession via -e'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o allowsuper -f --description 'Allow sub/super series to be loaded'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadExpressionDataCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addGEOData --description 'Load data from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -s f -l file -r -f --description 'Optional path to file with list of experiment accessions to load'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -s e -l acc -r -f --description 'Optional comma-delimited list of accessions (GSE or GDS or GPL) to load'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -s y -l platforms -f --description 'Load platforms (array designs) only; implied if you supply GPL instead of GSE or GDS'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -s m -l match -f --description 'Try to match samples across platforms (e.g. multi-part microarray platforms)'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o splitByPlatform -f --description 'Force data from each platform into a separate experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o force -l force -f --description 'Reload data set if it already exists in system'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o update -l update -f --description 'Update existing experiment in Gemma; overrides all other options except those choosing experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o nopost -f --description 'Suppress postprocessing steps'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o softfile -r -f --description 'Load directly from soft.gz file; use with single accession via -e'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o allowsuper -f --description 'Allow sub/super series to be loaded'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from addGEOData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli --description 'Add a metadata file to the given experiment and record an entry in the changelog file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli' -o fileType -l file-type -r -a '(echo -e "BASE_METADATA\t\nALIGNMENT_METADATA\t\nMULTIQC_REPORT\t\nMULTIQC_DATA\t\nMULTIQC_LOG\t\nADDITIONAL_PIPELINE_CONFIGURATIONS\t" 2>/dev/null)' -f --description 'Type of metadata file to be added. If left unset, a generic metadata file will be added. Possible values are: BASE_METADATA, ALIGNMENT_METADATA, MULTIQC_REPORT, MULTIQC_DATA, MULTIQC_LOG, ADDITIONAL_PIPELINE_CONFIGURATIONS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli' -o ce -l changelog-entry -r -f --description 'Changelog entry to be added. If not supplied, a text editor will be prompted.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addMetadataFile --description 'Add a metadata file to the given experiment and record an entry in the changelog file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addMetadataFile' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addMetadataFile' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addMetadataFile' -o fileType -l file-type -r -a '(echo -e "BASE_METADATA\t\nALIGNMENT_METADATA\t\nMULTIQC_REPORT\t\nMULTIQC_DATA\t\nMULTIQC_LOG\t\nADDITIONAL_PIPELINE_CONFIGURATIONS\t" 2>/dev/null)' -f --description 'Type of metadata file to be added. If left unset, a generic metadata file will be added. Possible values are: BASE_METADATA, ALIGNMENT_METADATA, MULTIQC_REPORT, MULTIQC_DATA, MULTIQC_LOG, ADDITIONAL_PIPELINE_CONFIGURATIONS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addMetadataFile' -o ce -l changelog-entry -r -f --description 'Changelog entry to be added. If not supplied, a text editor will be prompted.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addMetadataFile' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.LoadSimpleExpressionDataCli --description 'Load an experiment from a tab-delimited file instead of GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -s f -l file -r -F --description 'List of experiments to load with their basic metadata. It is a tabular file containing the following columns: name, short_name, description, array_design_short_name, data_file, species, qt_name, qt_description, qt_type, qt_scale, pubmed_id, source, array_design_name, technology_type, samples_metadata_file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -s d -l dir -r -F --description 'If supplied, resolve data files mentioned in the metadata file via -f/--file relative to that directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -o legacy -l legacy -f --description 'Load pre-1.32 metadata files lacking a header. The following columns are assumed: name, short_name, description, array_design_short_name, data_file, species, qt_name, qt_description, qt_type, qt_scale, pubmed_id, source, array_design_name, technology_type.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -o createImageClones -l create-image-clones -f --description 'When populating a platform from the data file, also create biological characteristics for the design elements.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LoadSimpleExpressionDataCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addTSVData --description 'Load an experiment from a tab-delimited file instead of GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -s f -l file -r -F --description 'List of experiments to load with their basic metadata. It is a tabular file containing the following columns: name, short_name, description, array_design_short_name, data_file, species, qt_name, qt_description, qt_type, qt_scale, pubmed_id, source, array_design_name, technology_type, samples_metadata_file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -s d -l dir -r -F --description 'If supplied, resolve data files mentioned in the metadata file via -f/--file relative to that directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -o legacy -l legacy -f --description 'Load pre-1.32 metadata files lacking a header. The following columns are assumed: name, short_name, description, array_design_short_name, data_file, species, qt_name, qt_description, qt_type, qt_scale, pubmed_id, source, array_design_name, technology_type.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -o createImageClones -l create-image-clones -f --description 'When populating a platform from the data file, also create biological characteristics for the design elements.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from addTSVData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.AffyDataFromCelCli --description 'Reanalyze Affymetrix data from CEL files, if available; affy-power-tools must be configured.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o aptFile -r -f --description 'File output from apt-probeset-summarize; use if you want to override usual GEO download behaviour; ensure you used the right official CDF/MPS configuration'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyDataFromCelCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a affyFromCel --description 'Reanalyze Affymetrix data from CEL files, if available; affy-power-tools must be configured.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o aptFile -r -f --description 'File output from apt-probeset-summarize; use if you want to override usual GEO download behaviour; ensure you used the right official CDF/MPS configuration'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyFromCel' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataAggregatorCli --description 'Aggregate single cell data into pseudo-bulks'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o cta -l cell-type-assignment -r -f --description 'Name of the cell type assignment to use (defaults to the preferred one). Incompatible with -clc.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o clc -l cell-level-characteristics -r -f --description 'Identifier of the cell-level characteristics to use. Incompatible with -cta.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o mask -l mask -r -f --description 'Identifier of the cell-level characteristics to use to mask. Defaults to auto-detecting the mask.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o noMask -l --no-mask -r -f --description 'Do not use a mask if one is auto-detected for aggregating single-cell data. Incompatible with -mask.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o factor -l factor -r -f --description 'Identifier of the factor to use (defaults to the cell type factor)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o mappingFile -l mapping-file -r -F --description 'File containing explicit mapping between cell-level characteristics and factor values\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o allowUnmappedCharacteristics -l allow-unmapped-characteristics -f --description 'Allow unmapped characteristics from the cell-level characteristics.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o allowUnmappedFactorValues -l allow-unmapped-factor-values -f --description 'Allow unmapped factor values from the experimental factor.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -s p -l make-preferred -f --description 'Make the resulting aggregated data the preferred raw data for the experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o adjustLibrarySizes -f --description 'Adjust library sizes for the resulting aggregated assays.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o includeMaskedCellsInLibrarySize -l include-masked-cells-in-library-size -f --description 'Include masked cells in the library size calculation. By default they are excluded as if they were simply filtered out.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o redo -l redo -f --description 'Redo the aggregation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o redoQt -l redo-quantitation-type -r -f --description 'Quantitation to re-aggregate, defaults to the preferred one. Requires the -redo flag. Incompatible with -redoDimension.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o redoDimension -l redo-dimension -r -f --description 'Dimension to re-aggregate, defaults to the one corresponding to -redoQt. Requires the -redo flag. Incompatible with -redoQt.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o writeCellTypeMapping -l print-mapping -f --description 'Print the cell type mapping to the standard output. No aggregation is performed or redone.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregatorCli' -o nopost -l no-post-processing -f --description 'Skip post-processing steps after aggregation.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a aggregateSingleCellData --description 'Aggregate single cell data into pseudo-bulks'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o cta -l cell-type-assignment -r -f --description 'Name of the cell type assignment to use (defaults to the preferred one). Incompatible with -clc.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o clc -l cell-level-characteristics -r -f --description 'Identifier of the cell-level characteristics to use. Incompatible with -cta.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o mask -l mask -r -f --description 'Identifier of the cell-level characteristics to use to mask. Defaults to auto-detecting the mask.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o noMask -l --no-mask -r -f --description 'Do not use a mask if one is auto-detected for aggregating single-cell data. Incompatible with -mask.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o factor -l factor -r -f --description 'Identifier of the factor to use (defaults to the cell type factor)'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o mappingFile -l mapping-file -r -F --description 'File containing explicit mapping between cell-level characteristics and factor values\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o allowUnmappedCharacteristics -l allow-unmapped-characteristics -f --description 'Allow unmapped characteristics from the cell-level characteristics.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o allowUnmappedFactorValues -l allow-unmapped-factor-values -f --description 'Allow unmapped factor values from the experimental factor.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -s p -l make-preferred -f --description 'Make the resulting aggregated data the preferred raw data for the experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o adjustLibrarySizes -f --description 'Adjust library sizes for the resulting aggregated assays.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o includeMaskedCellsInLibrarySize -l include-masked-cells-in-library-size -f --description 'Include masked cells in the library size calculation. By default they are excluded as if they were simply filtered out.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o redo -l redo -f --description 'Redo the aggregation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o redoQt -l redo-quantitation-type -r -f --description 'Quantitation to re-aggregate, defaults to the preferred one. Requires the -redo flag. Incompatible with -redoDimension.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o redoDimension -l redo-dimension -r -f --description 'Dimension to re-aggregate, defaults to the one corresponding to -redoQt. Requires the -redo flag. Incompatible with -redoQt.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o writeCellTypeMapping -l print-mapping -f --description 'Print the cell type mapping to the standard output. No aggregation is performed or redone.'
complete -c gemma-cli -n '__fish_seen_subcommand_from aggregateSingleCellData' -o nopost -l no-post-processing -f --description 'Skip post-processing steps after aggregation.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.LinkAnalysisCli --description 'Analyze expression data sets for coexpressed genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s t -r -f --description 'Taxon species name e.g. '"'"'mouse'"'"''
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s n -f --description 'Update the node degree for taxon given by -t option. All other options ignored.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o init -f --description 'Initialize links for taxon given by -t option, based on old data. All other options ignored.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s c -l cdfcut -r -f --description 'The tolerance threshold for coefficient value'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s k -l cachecut -r -f --description 'The threshold for coefficient cache'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s w -l fwe -r -f --description 'The setting for family wise error control'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s m -l missingcut -r -f --description 'Fraction of data points that must be present in a profile to be retained , default=0.3'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s l -l lowcut -r -f --description 'Fraction of expression vectors to reject based on low values, default=0.2'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o lv -l lowvarcut -r -f --description 'Fraction of expression vectors to reject based on low variance (or coefficient of variation), default=0.05'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o dv -l distinctValCut -r -f --description 'Fraction of values which must be distinct (NaN counts as one value), default=0.5'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s a -l abs -f --description 'Use the absolute value of the correlation (rarely used)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o nonegcorr -f --description 'Omit negative correlated probes in link selection'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -s d -l nodb -f --description 'Don'"'"'t save the results in the database (i.e., testing)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o dataFile -r -F --description 'Provide expression data from a tab-delimited text file, rather than from the database. Implies '"'"'nodb'"'"' and must also provide '"'"'array'"'"' and '"'"'t'"'"' option'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o array -r -f --description 'Provide the short name of the array design used. Only needed if you are using the '"'"'dataFile'"'"' option'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o text -f --description 'Output links as text. If multiple experiments are analyzed (e.g. using -f option) results for each are put in a separate file in the current directory with the format {shortname}-links.txt. Otherwise output is to STDOUT'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o metric -r -f --description 'Similarity metric {pearson|spearman}, default is pearson'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o noimages -f --description 'Suppress the generation of correlation matrix images'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o normalizemethod -r -f --description 'Normalization method to apply to the data matrix first: SVD, BALANCE, SPELL or omit this option for none (default=none)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o logtransform -f --description 'Log-transform the data prior to analysis, if it is not already transformed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o subset -r -f --description 'Only a random subset of total coexpression links will be written to output with approximate size given as the argument; recommended if thresholds are loose to avoid memory problems or gigantic files.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o choosecut -r -f --description 'Choose correlation threshold {fwe|cdfCut} to be used independently to select best links, default is none'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o probeDegreeLim -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o noqc -f --description 'Skip strict QC for outliers, batch effects and correlation distribution'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o delete -f --description 'Delete analyses for selected experiments, instead of doing analysis; supersedes all other options'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LinkAnalysisCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a coexpAnalyze --description 'Analyze expression data sets for coexpressed genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s t -r -f --description 'Taxon species name e.g. '"'"'mouse'"'"''
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s n -f --description 'Update the node degree for taxon given by -t option. All other options ignored.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o init -f --description 'Initialize links for taxon given by -t option, based on old data. All other options ignored.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s c -l cdfcut -r -f --description 'The tolerance threshold for coefficient value'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s k -l cachecut -r -f --description 'The threshold for coefficient cache'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s w -l fwe -r -f --description 'The setting for family wise error control'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s m -l missingcut -r -f --description 'Fraction of data points that must be present in a profile to be retained , default=0.3'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s l -l lowcut -r -f --description 'Fraction of expression vectors to reject based on low values, default=0.2'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o lv -l lowvarcut -r -f --description 'Fraction of expression vectors to reject based on low variance (or coefficient of variation), default=0.05'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o dv -l distinctValCut -r -f --description 'Fraction of values which must be distinct (NaN counts as one value), default=0.5'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s a -l abs -f --description 'Use the absolute value of the correlation (rarely used)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o nonegcorr -f --description 'Omit negative correlated probes in link selection'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -s d -l nodb -f --description 'Don'"'"'t save the results in the database (i.e., testing)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o dataFile -r -F --description 'Provide expression data from a tab-delimited text file, rather than from the database. Implies '"'"'nodb'"'"' and must also provide '"'"'array'"'"' and '"'"'t'"'"' option'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o array -r -f --description 'Provide the short name of the array design used. Only needed if you are using the '"'"'dataFile'"'"' option'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o text -f --description 'Output links as text. If multiple experiments are analyzed (e.g. using -f option) results for each are put in a separate file in the current directory with the format {shortname}-links.txt. Otherwise output is to STDOUT'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o metric -r -f --description 'Similarity metric {pearson|spearman}, default is pearson'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o noimages -f --description 'Suppress the generation of correlation matrix images'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o normalizemethod -r -f --description 'Normalization method to apply to the data matrix first: SVD, BALANCE, SPELL or omit this option for none (default=none)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o logtransform -f --description 'Log-transform the data prior to analysis, if it is not already transformed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o subset -r -f --description 'Only a random subset of total coexpression links will be written to output with approximate size given as the argument; recommended if thresholds are loose to avoid memory problems or gigantic files.'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o choosecut -r -f --description 'Choose correlation threshold {fwe|cdfCut} to be used independently to select best links, default is none'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o probeDegreeLim -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o noqc -f --description 'Skip strict QC for outliers, batch effects and correlation distribution'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o delete -f --description 'Delete analyses for selected experiments, instead of doing analysis; supersedes all other options'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from coexpAnalyze' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionDataCorrMatCli --description 'Create or update sample correlation matrices for expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataCorrMatCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a corrMat --description 'Create or update sample correlation matrices for expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from corrMat' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DeleteDiffExCli --description 'Delete differential expression analyses for experiment(s) from the system'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteDiffExCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteDiffEx --description 'Delete differential expression analyses for experiment(s) from the system'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteDiffEx' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DeleteExperimentsCli --description 'Delete experiments or platforms from the system'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DeleteExperimentsCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Delete platform(s) instead; you must delete associated experiments first; other options are ignored.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteExperiments --description 'Delete experiments or platforms from the system'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteExperiments' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Delete platform(s) instead; you must delete associated experiments first; other options are ignored.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ProcessedDataDeleterCli --description 'Delete processed expression data'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataDeleterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteProcessedData --description 'Delete processed expression data'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProcessedData' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.RawDataDeleterCli --description 'Delete raw expression data'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawDataDeleterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteRawData --description 'Delete raw expression data'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteRawData' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataDeleterCli --description 'Delete single cell data and any related data files'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o deleteCta -l delete-cell-type-assignment -r -f --description 'Delete a cell type assignment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDeleterCli' -o deleteClc -l delete-cell-level-characteristics -r -f --description 'Delete cell-level characteristics'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteSingleCellData --description 'Delete single cell data and any related data files'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o deleteCta -l delete-cell-type-assignment -r -f --description 'Delete a cell type assignment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellData' -o deleteClc -l delete-cell-level-characteristics -r -f --description 'Delete cell-level characteristics'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataAggregateDeleterCli --description 'Delete a single-cell data aggregate'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregateDeleterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregateDeleterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregateDeleterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataAggregateDeleterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteSingleCellDataAggregate --description 'Delete a single-cell data aggregate'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellDataAggregate' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellDataAggregate' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellDataAggregate' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteSingleCellDataAggregate' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DetectQuantitationTypeCli --description 'Detect quantitation type from data'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DetectQuantitationTypeCli' -o qtName -l quantitation-type-name -r -f --description 'Name of the quantitation type to process.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a detectQuantitationType --description 'Detect quantitation type from data'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from detectQuantitationType' -o qtName -l quantitation-type-name -r -f --description 'Name of the quantitation type to process.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DifferentialExpressionAnalysisCli --description 'Analyze expression data sets for differentially expressed genes.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o factors -l factors -r -f --description 'ID numbers, categories or names of the factor(s) to use, comma-delimited, with spaces replaced by underscores'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o subset -l subset -r -f --description 'ID number, category or name of the factor to use for subsetting the analysis; must also use with -factors. If the experiment already has subsets for the factor, those will be reused.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o type -l type -r -a '(echo -e "GENERICLM\tgeneric linear model without interaction\nOSTTEST\tone-sample t-test\nOWA\tone-way ANOVA\nTTEST\ttwo-sample t-test\nTWO_WAY_ANOVA_WITH_INTERACTION\ttwo-way ANOVA with interaction\nTWO_WAY_ANOVA_NO_INTERACTION\ttwo-way ANOVA without interaction" 2>/dev/null)' -f --description 'Type of analysis to perform. If omitted, the system will try to guess based on the experimental design. Possible values are: GENERICLM, OSTTEST, OWA, TTEST, TWO_WAY_ANOVA_WITH_INTERACTION, TWO_WAY_ANOVA_NO_INTERACTION.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o usebatch -l use-batch-factor -f --description 'If a '"'"'batch'"'"' factor is available, use it. Otherwise, batch information can/will be ignored in the analysis.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o nodb -l no-db -f --description 'Output files only to your gemma.appdata.home (unless you also set -nofiles) instead of persisting to the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o ignoreFailingSubsets -l ignore-failing-subsets -f --description 'Ignore failing subsets and continue processing other subsets.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o redo -l redo -f --description 'If using automatic analysis try to base analysis on previous analysis'"'"'s choice of statistical model. Will re-run all analyses for the experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o delete -l delete -f --description 'Instead of running the analysis on the given experiments, remove the old analyses. Use with care!'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o nobayes -l no-bayes -f --description 'Do not apply empirical-Bayes moderated statistics. Default is to use eBayes.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o nofiles -l no-files -f --description 'Don'"'"'t create archive files after analysis. Default is to make them. This is incompatible with -nodb.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisCli' -o outputDir -l output-dir -r -F --description 'Directory to write output files to. If not specified, it will default to the current directory. This requires -nodb to be set.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a diffExAnalyze --description 'Analyze expression data sets for differentially expressed genes.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o factors -l factors -r -f --description 'ID numbers, categories or names of the factor(s) to use, comma-delimited, with spaces replaced by underscores'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o subset -l subset -r -f --description 'ID number, category or name of the factor to use for subsetting the analysis; must also use with -factors. If the experiment already has subsets for the factor, those will be reused.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o type -l type -r -a '(echo -e "GENERICLM\tgeneric linear model without interaction\nOSTTEST\tone-sample t-test\nOWA\tone-way ANOVA\nTTEST\ttwo-sample t-test\nTWO_WAY_ANOVA_WITH_INTERACTION\ttwo-way ANOVA with interaction\nTWO_WAY_ANOVA_NO_INTERACTION\ttwo-way ANOVA without interaction" 2>/dev/null)' -f --description 'Type of analysis to perform. If omitted, the system will try to guess based on the experimental design. Possible values are: GENERICLM, OSTTEST, OWA, TTEST, TWO_WAY_ANOVA_WITH_INTERACTION, TWO_WAY_ANOVA_NO_INTERACTION.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o usebatch -l use-batch-factor -f --description 'If a '"'"'batch'"'"' factor is available, use it. Otherwise, batch information can/will be ignored in the analysis.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o nodb -l no-db -f --description 'Output files only to your gemma.appdata.home (unless you also set -nofiles) instead of persisting to the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o ignoreFailingSubsets -l ignore-failing-subsets -f --description 'Ignore failing subsets and continue processing other subsets.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o redo -l redo -f --description 'If using automatic analysis try to base analysis on previous analysis'"'"'s choice of statistical model. Will re-run all analyses for the experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o delete -l delete -f --description 'Instead of running the analysis on the given experiments, remove the old analyses. Use with care!'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o nobayes -l no-bayes -f --description 'Do not apply empirical-Bayes moderated statistics. Default is to use eBayes.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o nofiles -l no-files -f --description 'Don'"'"'t create archive files after analysis. Default is to make them. This is incompatible with -nodb.'
complete -c gemma-cli -n '__fish_seen_subcommand_from diffExAnalyze' -o outputDir -l output-dir -r -F --description 'Directory to write output files to. If not specified, it will default to the current directory. This requires -nodb to be set.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.BatchEffectPopulationCli --description 'Populate the batch information for experiments (if possible)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BatchEffectPopulationCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a fillBatchInfo --description 'Populate the batch information for experiments (if possible)'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from fillBatchInfo' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.UpdatePubMedCli --description 'Identify experiments that have no publication in Gemma and try to fill it in.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdatePubMedCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdatePubMedCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdatePubMedCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdatePubMedCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdatePubMedCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a findDatasetPubs --description 'Identify experiments that have no publication in Gemma and try to fill it in.'
complete -c gemma-cli -n '__fish_seen_subcommand_from findDatasetPubs' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from findDatasetPubs' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from findDatasetPubs' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from findDatasetPubs' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from findDatasetPubs' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli --description 'Generate analysis text files (diff expression). This is deprecated, use getDiffExAnalysis instead.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli' -s w -l forceWrite -f --description 'Overwrites existing files if this option is set'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a generateDataFile --description 'Generate analysis text files (diff expression). This is deprecated, use getDiffExAnalysis instead.'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDataFile' -s w -l forceWrite -f --description 'Overwrites existing files if this option is set'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionDataMatrixWriterCLI --description 'Write processed data matrix to a file; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s o -l output-file -r -F --description 'Write processed data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -s d -l output-dir -r -F --description 'Write processed data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o standardLocation -l standard-location -f --description 'Write processed data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o stdout -l stdout -f --description 'Write processed data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o samples -l samples -r -f --description 'List of sample identifiers to slice.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o filter -f --description 'Filter expression matrix under default parameters'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use for the output. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionDataMatrixWriterCLI' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a getDataMatrix --description 'Write processed data matrix to a file; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s o -l output-file -r -F --description 'Write processed data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -s d -l output-dir -r -F --description 'Write processed data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o standardLocation -l standard-location -f --description 'Write processed data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o stdout -l stdout -f --description 'Write processed data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o samples -l samples -r -f --description 'List of sample identifiers to slice.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o filter -f --description 'Filter expression matrix under default parameters'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use for the output. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDataMatrix' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli --description 'Write differential expression data files to the standard location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s o -l output-file -r -F --description 'Write differential expression data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s d -l output-dir -r -F --description 'Write differential expression data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o standardLocation -l standard-location -f --description 'Write differential expression data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o stdout -l stdout -f --description 'Write differential expression data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -s a -l analysis -r -f --description 'Identifier for an analysis.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a getDiffExAnalysis --description 'Write differential expression data files to the standard location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s o -l output-file -r -F --description 'Write differential expression data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s d -l output-dir -r -F --description 'Write differential expression data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o standardLocation -l standard-location -f --description 'Write differential expression data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o stdout -l stdout -f --description 'Write differential expression data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -s a -l analysis -r -f --description 'Identifier for an analysis.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getDiffExAnalysis' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.RawExpressionDataWriterCli --description 'Write raw data matrix to a; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s o -l output-file -r -F --description 'Write raw data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -s d -l output-dir -r -F --description 'Write raw data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o standardLocation -l standard-location -f --description 'Write raw data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o stdout -l stdout -f --description 'Write raw data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o samples -l samples -r -f --description 'List of sample identifiers to slice. This is incompatible with -standardLocation/--standard-location.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use for the data. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RawExpressionDataWriterCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a getRawDataMatrix --description 'Write raw data matrix to a; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s o -l output-file -r -F --description 'Write raw data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -s d -l output-dir -r -F --description 'Write raw data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o standardLocation -l standard-location -f --description 'Write raw data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o stdout -l stdout -f --description 'Write raw data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o samples -l samples -r -f --description 'List of sample identifiers to slice. This is incompatible with -standardLocation/--standard-location.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use for the data. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getRawDataMatrix' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataWriterCli --description 'Write single-cell data matrix to a file; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o format -l format -r -a '(echo -e "TABULAR\t\nCELL_BROWSER\t\nMEX\t\nCELL_IDS\t" 2>/dev/null)' -f --description 'Format to write the matrix for (defaults to tabular). Possible values are: TABULAR, CELL_BROWSER, MEX, CELL_IDS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use when generating data to disk. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o useBioAssayIds -l use-bioassay-ids -f --description 'Use BioAssay IDs instead of their names (only for CELL_BROWSER output).'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw column names instead of R-friendly ones (only for CELL_BROWSER output).'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o useEnsemblIds -l use-ensembl-ids -f --description 'Use Ensembl IDs instead of official gene symbols (only for MEX output). This is incompatible with -standardLocation/--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o noStreaming -l no-streaming -f --description 'Use in-memory storage instead of streaming for retrieving and writing vectors.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o fetchSize -l fetch-size -r -f --description 'Fetch size to use when retrieving vectors, incompatible with -noStreaming/--no-streaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o noCursorFetch -l no-cursor-fetch -f --description 'Disable cursor fetching on the database server and produce results immediately. This is incompatible with -noStreaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s o -l output-file -r -F --description 'Write single-cell expression data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -s d -l output-dir -r -F --description 'Write single-cell expression data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o standardLocation -l standard-location -f --description 'Write single-cell expression data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o stdout -l stdout -f --description 'Write single-cell expression data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o samples -l samples -r -f --description 'List of sample identifiers to slice. This is incompatible with -standardLocation/--standard-location.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateByAssay -l aggregate-by-assay -f --description 'Aggregate by assay. This is incompatible with -format, -useEnsemblIds and -standardLocation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateByPreferredCta -l aggregate-by-preferred-cell-type-assignment -f --description 'Aggregate by the preferred cell type assignment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateByCta -l aggregate-by-cell-type-assignment -r -f --description 'Cell type assignment to aggregate by. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateByClc -l aggregate-by-cell-level-characteristics -r -f --description 'Cell-level characteristics to aggregate by. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateMethod -l aggregate-method -r -a '(echo -e "SUM\t\nMEAN\t\nMEDIAN\t\nVARIANCE\t\nSTANDARD_DEVIATION\t\nMAX\t\nMIN\t\nCOUNT\t\nCOUNT_FAST\t" 2>/dev/null)' -f --description 'Method to use to aggregate single-cell data. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation. Possible values are: SUM, MEAN, MEDIAN, VARIANCE, STANDARD_DEVIATION, MAX, MIN, COUNT, COUNT_FAST.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o aggregateUnknownCharacteristics -l aggregate-unknown-characteristics -f --description 'Aggregate unknown cell types or characteristics. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataWriterCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a getSingleCellDataMatrix --description 'Write single-cell data matrix to a file; gene information is included if available.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o format -l format -r -a '(echo -e "TABULAR\t\nCELL_BROWSER\t\nMEX\t\nCELL_IDS\t" 2>/dev/null)' -f --description 'Format to write the matrix for (defaults to tabular). Possible values are: TABULAR, CELL_BROWSER, MEX, CELL_IDS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o scaleType -l scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'Scale type to use when generating data to disk. This is incompatible with -standardLocation/--standard-location. Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o useBioAssayIds -l use-bioassay-ids -f --description 'Use BioAssay IDs instead of their names (only for CELL_BROWSER output).'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw column names instead of R-friendly ones (only for CELL_BROWSER output).'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o useEnsemblIds -l use-ensembl-ids -f --description 'Use Ensembl IDs instead of official gene symbols (only for MEX output). This is incompatible with -standardLocation/--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o noStreaming -l no-streaming -f --description 'Use in-memory storage instead of streaming for retrieving and writing vectors.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o fetchSize -l fetch-size -r -f --description 'Fetch size to use when retrieving vectors, incompatible with -noStreaming/--no-streaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o noCursorFetch -l no-cursor-fetch -f --description 'Disable cursor fetching on the database server and produce results immediately. This is incompatible with -noStreaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s o -l output-file -r -F --description 'Write single-cell expression data to the given output file.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -s d -l output-dir -r -F --description 'Write single-cell expression data inside the given directory.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o standardLocation -l standard-location -f --description 'Write single-cell expression data to the standard location under ${gemma.appdata.home}/dataFiles. This is the default if no other destination is selected.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o stdout -l stdout -f --description 'Write single-cell expression data to standard output. This option is incompatible with -outputFile, -outputDir and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o samples -l samples -r -f --description 'List of sample identifiers to slice. This is incompatible with -standardLocation/--standard-location.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateByAssay -l aggregate-by-assay -f --description 'Aggregate by assay. This is incompatible with -format, -useEnsemblIds and -standardLocation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateByPreferredCta -l aggregate-by-preferred-cell-type-assignment -f --description 'Aggregate by the preferred cell type assignment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateByCta -l aggregate-by-cell-type-assignment -r -f --description 'Cell type assignment to aggregate by. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateByClc -l aggregate-by-cell-level-characteristics -r -f --description 'Cell-level characteristics to aggregate by. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.\nThis option is not available when processing more than one experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateMethod -l aggregate-method -r -a '(echo -e "SUM\t\nMEAN\t\nMEDIAN\t\nVARIANCE\t\nSTANDARD_DEVIATION\t\nMAX\t\nMIN\t\nCOUNT\t\nCOUNT_FAST\t" 2>/dev/null)' -f --description 'Method to use to aggregate single-cell data. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation. Possible values are: SUM, MEAN, MEDIAN, VARIANCE, STANDARD_DEVIATION, MAX, MIN, COUNT, COUNT_FAST.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o aggregateUnknownCharacteristics -l aggregate-unknown-characteristics -f --description 'Aggregate unknown cell types or characteristics. Requires -aggregateByAssay to be set. This is incompatible with -format, -useEnsemblIds and -standardLocation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellDataMatrix' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.CellLevelMetadataWriterCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -o useBioAssayIds -l use-bioassay-ids -f --description 'Use BioAssay IDs instead of their names.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CellLevelMetadataWriterCli' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw names for the columns, otherwise R-friendly names are used.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a getSingleCellMetadata
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to the preferred one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -o useBioAssayIds -l use-bioassay-ids -f --description 'Use BioAssay IDs instead of their names.'
complete -c gemma-cli -n '__fish_seen_subcommand_from getSingleCellMetadata' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw names for the columns, otherwise R-friendly names are used.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExperimentalDesignImportCli --description 'Import an experimental design'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignImportCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignImportCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignImportCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignImportCli' -s f -l designFile -r -F --description 'Experimental design description file'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a importDesign --description 'Import an experimental design'
complete -c gemma-cli -n '__fish_seen_subcommand_from importDesign' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from importDesign' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from importDesign' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from importDesign' -s f -l designFile -r -F --description 'Experimental design description file'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ListQuantitationTypesCli --description 'List the available quantitation types for an experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListQuantitationTypesCli' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a listQuantitationTypes --description 'List the available quantitation types for an experiment.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from listQuantitationTypes' -o qt -l quantitation-type -r -f --description 'Identifier of the quantitation type to use (defaults to all of them)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataLoaderCli --description 'Load single-cell data from either AnnData or 10x MEX format.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o loadCta -l load-cell-type-assignment -f --description 'Only load cell type assignment. Use -qtName to specify which set of vectors this is applicable to.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o loadClc -l load-cell-level-characteristics -f --description 'Only load cell-level characteristics. Use -qtName to specify which set of vectors this is applicable to.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o loadSequencingMetadata -l load-sequencing-metadata -f --description 'Load sequencing metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o dataType -l data-type -r -a '(echo -e "ANNDATA\t\nSEURAT_DISK\t\nLOOM\t\nMEX\t\nNULL\t" 2>/dev/null)' -f --description 'Data type to import. Possible values are: ANNDATA, SEURAT_DISK, LOOM, MEX, NULL.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s p -l data-path -r -F --description 'Load single-cell data from the given path instead of looking up the download directory. For AnnData and Seurat Disk, it is a file. For MEX it is a directory. Requires the -dataType,--data-type option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -s a -l platform -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Target platform (must already exist in the system)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o qtName -l quantitation-type-name -r -f --description 'Quantitation type to import (optional, use if more than one is present in data)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o qtNewName -l quantitation-type-new-name -r -f --description 'New name to use for the imported quantitation type (optional, defaults to the data)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o qtNewType -l quantitation-type-new-type -r -a '(echo -e "PRESENTABSENT\t\nFAILED\t\nAMOUNT\t\nCONFIDENCEINDICATOR\t\nCORRELATION\t\nCOUNT\t\nCOORDINATE\t\nZSCORE\t\nOTHER\t" 2>/dev/null)' -f --description 'New type to use for the imported quantitation type (optional, defaults to the data). Possible values are: PRESENTABSENT, FAILED, AMOUNT, CONFIDENCEINDICATOR, CORRELATION, COUNT, COORDINATE, ZSCORE, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o qtNewScaleType -l quantitation-type-new-scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'New scale type to use for the imported quantitation type (optional, defaults to the data). Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o preferredQt -l preferred-quantitation-type -f --description 'Make the quantitation type the preferred one.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o preferSinglePrecision -l prefer-single-precision -f --description 'Prefer single precision for storage, even if the data is available with double precision. This reduces the size of vectors and thus the storage requirement.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o replace -l replace -f --description 'Replace an existing quantitation type.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ignoreSamplesLackingData -l ignore-samples-lacking-data -f --description 'Ignore samples that lack data. Those samples will not be included in the single-cell dimension.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o renamingFile -l renaming-file -r -F --description 'File containing sample a renaming scheme. The format is a two-column TSV with the first column containing author-provided sample names and the second column suitable assay identifiers (i.e. name, GEO accessions).'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ctaFile -l cell-type-assignment-file -r -F --description 'Path to a cell type assignment file. If missing, cell type importing will be delegated to the loader implementation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ctaName -l cell-type-assignment-name -r -f --description 'Name to use for the cell type assignment. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ctaDescription -l cell-type-assignment-description -r -f --description 'Description to use for the cell type assignment. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ctaProtocol -l cell-type-assignment-protocol -r -a '(gemma-cli complete protocol 2>/dev/null)' -f --description 'An identifier for a protocol describing the cell type assignment. This require the -ctaFile,--cell-type-assignment-file option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o replaceCta -l replace-cell-type-assignment -f --description 'Replace an existing cell type assignment with the same name. The -ctaFile,--cell-type-assignment-file and -ctaName,--cell-type-assignment-name options must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o preferredCta -l preferred-cell-type-assignment -f --description 'Make the cell type assignment the preferred one. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o clcFile -l cell-level-characteristics-file -r -F --description 'Path to a file containing additional cell-level characteristics to import.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o clcName -l cell-level-characteristics-name -r -f --description 'Name to use for the CLC. If the file contains more than one CLC, multiple names can be provided using '"'"','"'"' as a delimiter.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o replaceClc -l replace-cell-level-characteristics -f --description 'Replace existing cell-level characteristics with the same names. The -clcFile,--cell-level-characteristics-file and -clcName,--cell-level-characteristics-name options must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o inferSamplesFromCellIdsOverlap -l infer-samples-from-cell-ids-overlap -f --description 'Infer sample names from cell IDs overlap.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o ignoreUnmatchedCellIds -l ignore-unmatched-cell-ids -f --description 'Ignore unmatched cell IDs when loading cell type assignments and other cell-level characteristics.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o sequencingReadLength -l sequencing-read-length -r -f --description 'Read length to use for the imported sequencing metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o sequencingIsPaired -l sequencing-is-paired -f --description 'Indicate that the sequencing data is paired. This option is incompatible with -sequencingIsSingleEnd,--sequencing-is-single-end. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o sequencingIsSingleEnd -l sequencing-is-single-end -f --description 'Indicate that the sequencing data is single-end. This option is incompatible with -sequencingIsPaired,--sequencing-is-paired. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o sequencingMetadataFile -l sequencing-metadata-file -r -F --description 'Path to a file containing sequencing metadata to import. These values will override defaults set by -sequencingReadLength,--sequencing-read-length and -sequencingIsPaired,--sequencing-is-paired.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataSampleFactorName -l anndata-sample-factor-name -r -f --description 'Name of the factor used for the sample name.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataCellTypeFactorName -l anndata-cell-type-factor-name -r -f --description 'Name of the factor used for the cell type, incompatible with -ctaFile,--cell-type-assignment-file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataIgnoreCellTypeFactor -l anndata-ignore-cell-type-factor -f --description 'Do not attempt to load a cell type factor. Incompatible with -annDataCellTypeFactorName,--anndata-cell-type-factor-name.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataUnknownCellTypeIndicator -l anndata-unknown-cell-type-indicator -r -f --description 'Indicator used for missing cell type. Defaults to using the standard -1 categorical code.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataUseRawX -l anndata-use-raw-x -f --description 'Use raw.X This option is incompatible with -annDataUseX,--anndata-use-x. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataUseX -l anndata-use-x -f --description 'Use X. This option is incompatible with -annDataUseRawX,--anndata-use-raw-x. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataTranspose -l anndata-transpose -f --description 'Transpose the data matrix. This option is incompatible with -annDataNoTranspose,--anndata-no-transpose. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o annDataNoTranspose -l anndata-no-transpose -f --description 'Do not transpose the data matrix. This option is incompatible with -annDataTranspose,--anndata-transpose. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o mexDiscardEmptyCells -l mex-discard-empty-cells -f --description 'Discard empty cells when loading MEX data. This option is incompatible with -mexKeepEmptyCells,--mex-keep-empty-cells. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o mexKeepEmptyCells -l mex-keep-empty-cells -f --description 'Keep empty cells when loading MEX data. This option is incompatible with -mexDiscardEmptyCells,--mex-discard-empty-cells. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o mexAllowMappingDesignElementsToGeneSymbols -l mex-allow-mapping-design-elements-to-gene-symbols -f --description 'Allow mapping probe names to gene symbols when loading MEX data (i.e. the second column in features.tsv.gz).'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o mexUseDoublePrecision -l mex-use-double-precision -f --description 'Use double precision (i.e. double and long) for storing vectors'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o noStreaming -l no-streaming -f --description 'Use in-memory storage instead of streaming for retrieving and writing vectors.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o fetchSize -l fetch-size -r -f --description 'Fetch size to use when retrieving vectors, incompatible with -noStreaming,--no-streaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataLoaderCli' -o noCursorFetch -l no-cursor-fetch -f --description 'Disable cursor fetching on the database server and produce results immediately. This is incompatible with -noStreaming,--no-streaming.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a loadSingleCellData --description 'Load single-cell data from either AnnData or 10x MEX format.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o loadCta -l load-cell-type-assignment -f --description 'Only load cell type assignment. Use -qtName to specify which set of vectors this is applicable to.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o loadClc -l load-cell-level-characteristics -f --description 'Only load cell-level characteristics. Use -qtName to specify which set of vectors this is applicable to.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o loadSequencingMetadata -l load-sequencing-metadata -f --description 'Load sequencing metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o dataType -l data-type -r -a '(echo -e "ANNDATA\t\nSEURAT_DISK\t\nLOOM\t\nMEX\t\nNULL\t" 2>/dev/null)' -f --description 'Data type to import. Possible values are: ANNDATA, SEURAT_DISK, LOOM, MEX, NULL.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s p -l data-path -r -F --description 'Load single-cell data from the given path instead of looking up the download directory. For AnnData and Seurat Disk, it is a file. For MEX it is a directory. Requires the -dataType,--data-type option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -s a -l platform -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Target platform (must already exist in the system)'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o qtName -l quantitation-type-name -r -f --description 'Quantitation type to import (optional, use if more than one is present in data)'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o qtNewName -l quantitation-type-new-name -r -f --description 'New name to use for the imported quantitation type (optional, defaults to the data)'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o qtNewType -l quantitation-type-new-type -r -a '(echo -e "PRESENTABSENT\t\nFAILED\t\nAMOUNT\t\nCONFIDENCEINDICATOR\t\nCORRELATION\t\nCOUNT\t\nCOORDINATE\t\nZSCORE\t\nOTHER\t" 2>/dev/null)' -f --description 'New type to use for the imported quantitation type (optional, defaults to the data). Possible values are: PRESENTABSENT, FAILED, AMOUNT, CONFIDENCEINDICATOR, CORRELATION, COUNT, COORDINATE, ZSCORE, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o qtNewScaleType -l quantitation-type-new-scale-type -r -a '(echo -e "LINEAR\tLinear\nLN\tLn\nLOG2\tLog 2\nLOG10\tLog 10\nLOG1P\tLn (1 + X)\nLOGBASEUNKNOWN\tLog-transformed, but base is unknown\nFOLDCHANGE\tFold-change\nUNSCALED\tUnscaled\nPERCENT1\tPercentage between 0 and 1\nPERCENT\tPercentage between 0 and 100\nCOUNT\tCount\nOTHER\tOther" 2>/dev/null)' -f --description 'New scale type to use for the imported quantitation type (optional, defaults to the data). Possible values are: LINEAR, LN, LOG2, LOG10, LOG1P, LOGBASEUNKNOWN, FOLDCHANGE, UNSCALED, PERCENT1, PERCENT, COUNT, OTHER.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o preferredQt -l preferred-quantitation-type -f --description 'Make the quantitation type the preferred one.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o preferSinglePrecision -l prefer-single-precision -f --description 'Prefer single precision for storage, even if the data is available with double precision. This reduces the size of vectors and thus the storage requirement.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o replace -l replace -f --description 'Replace an existing quantitation type.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ignoreSamplesLackingData -l ignore-samples-lacking-data -f --description 'Ignore samples that lack data. Those samples will not be included in the single-cell dimension.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o renamingFile -l renaming-file -r -F --description 'File containing sample a renaming scheme. The format is a two-column TSV with the first column containing author-provided sample names and the second column suitable assay identifiers (i.e. name, GEO accessions).'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ctaFile -l cell-type-assignment-file -r -F --description 'Path to a cell type assignment file. If missing, cell type importing will be delegated to the loader implementation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ctaName -l cell-type-assignment-name -r -f --description 'Name to use for the cell type assignment. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ctaDescription -l cell-type-assignment-description -r -f --description 'Description to use for the cell type assignment. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ctaProtocol -l cell-type-assignment-protocol -r -a '(gemma-cli complete protocol 2>/dev/null)' -f --description 'An identifier for a protocol describing the cell type assignment. This require the -ctaFile,--cell-type-assignment-file option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o replaceCta -l replace-cell-type-assignment -f --description 'Replace an existing cell type assignment with the same name. The -ctaFile,--cell-type-assignment-file and -ctaName,--cell-type-assignment-name options must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o preferredCta -l preferred-cell-type-assignment -f --description 'Make the cell type assignment the preferred one. The -ctaFile,--cell-type-assignment-file option must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o clcFile -l cell-level-characteristics-file -r -F --description 'Path to a file containing additional cell-level characteristics to import.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o clcName -l cell-level-characteristics-name -r -f --description 'Name to use for the CLC. If the file contains more than one CLC, multiple names can be provided using '"'"','"'"' as a delimiter.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o replaceClc -l replace-cell-level-characteristics -f --description 'Replace existing cell-level characteristics with the same names. The -clcFile,--cell-level-characteristics-file and -clcName,--cell-level-characteristics-name options must be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o inferSamplesFromCellIdsOverlap -l infer-samples-from-cell-ids-overlap -f --description 'Infer sample names from cell IDs overlap.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o ignoreUnmatchedCellIds -l ignore-unmatched-cell-ids -f --description 'Ignore unmatched cell IDs when loading cell type assignments and other cell-level characteristics.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o sequencingReadLength -l sequencing-read-length -r -f --description 'Read length to use for the imported sequencing metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o sequencingIsPaired -l sequencing-is-paired -f --description 'Indicate that the sequencing data is paired. This option is incompatible with -sequencingIsSingleEnd,--sequencing-is-single-end. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o sequencingIsSingleEnd -l sequencing-is-single-end -f --description 'Indicate that the sequencing data is single-end. This option is incompatible with -sequencingIsPaired,--sequencing-is-paired. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o sequencingMetadataFile -l sequencing-metadata-file -r -F --description 'Path to a file containing sequencing metadata to import. These values will override defaults set by -sequencingReadLength,--sequencing-read-length and -sequencingIsPaired,--sequencing-is-paired.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataSampleFactorName -l anndata-sample-factor-name -r -f --description 'Name of the factor used for the sample name.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataCellTypeFactorName -l anndata-cell-type-factor-name -r -f --description 'Name of the factor used for the cell type, incompatible with -ctaFile,--cell-type-assignment-file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataIgnoreCellTypeFactor -l anndata-ignore-cell-type-factor -f --description 'Do not attempt to load a cell type factor. Incompatible with -annDataCellTypeFactorName,--anndata-cell-type-factor-name.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataUnknownCellTypeIndicator -l anndata-unknown-cell-type-indicator -r -f --description 'Indicator used for missing cell type. Defaults to using the standard -1 categorical code.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataUseRawX -l anndata-use-raw-x -f --description 'Use raw.X This option is incompatible with -annDataUseX,--anndata-use-x. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataUseX -l anndata-use-x -f --description 'Use X. This option is incompatible with -annDataUseRawX,--anndata-use-raw-x. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataTranspose -l anndata-transpose -f --description 'Transpose the data matrix. This option is incompatible with -annDataNoTranspose,--anndata-no-transpose. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o annDataNoTranspose -l anndata-no-transpose -f --description 'Do not transpose the data matrix. This option is incompatible with -annDataTranspose,--anndata-transpose. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o mexDiscardEmptyCells -l mex-discard-empty-cells -f --description 'Discard empty cells when loading MEX data. This option is incompatible with -mexKeepEmptyCells,--mex-keep-empty-cells. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o mexKeepEmptyCells -l mex-keep-empty-cells -f --description 'Keep empty cells when loading MEX data. This option is incompatible with -mexDiscardEmptyCells,--mex-discard-empty-cells. Default is to auto-detect.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o mexAllowMappingDesignElementsToGeneSymbols -l mex-allow-mapping-design-elements-to-gene-symbols -f --description 'Allow mapping probe names to gene symbols when loading MEX data (i.e. the second column in features.tsv.gz).'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o mexUseDoublePrecision -l mex-use-double-precision -f --description 'Use double precision (i.e. double and long) for storing vectors'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o noStreaming -l no-streaming -f --description 'Use in-memory storage instead of streaming for retrieving and writing vectors.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o fetchSize -l fetch-size -r -f --description 'Fetch size to use when retrieving vectors, incompatible with -noStreaming,--no-streaming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadSingleCellData' -o noCursorFetch -l no-cursor-fetch -f --description 'Disable cursor fetching on the database server and produce results immediately. This is incompatible with -noStreaming,--no-streaming.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.LockExpressionDataFileCli --description 'Acquire a lock on an experiment data or metadata file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LockExpressionDataFileCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LockExpressionDataFileCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LockExpressionDataFileCli' -o metadata -l metadata -f --description 'Lock a metadata file'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LockExpressionDataFileCli' -o exclusive -l exclusive -f --description 'Acquire an exclusive lock (for writing)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.LockExpressionDataFileCli' -o timeout -l timeout -r -f --description 'Timeout in milliseconds to acquire the lock'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a lockDataFile --description 'Acquire a lock on an experiment data or metadata file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from lockDataFile' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from lockDataFile' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from lockDataFile' -o metadata -l metadata -f --description 'Lock a metadata file'
complete -c gemma-cli -n '__fish_seen_subcommand_from lockDataFile' -o exclusive -l exclusive -f --description 'Acquire an exclusive lock (for writing)'
complete -c gemma-cli -n '__fish_seen_subcommand_from lockDataFile' -o timeout -l timeout -r -f --description 'Timeout in milliseconds to acquire the lock'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.MakeExperimentPrivateCli --description 'Make experiments private'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentPrivateCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a makePrivate --description 'Make experiments private'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePrivate' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ProcessedDataComputeCLI --description 'Performs preprocessing. Optionally can do only selected processing steps including batch correction, rank computation and diagnostic computation'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o diagupdate -f --description 'Only update the diagnostics without recomputing data (PCA, M-V, sample correlation, GEEQ; may be combined with other options)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o rankupdate -f --description 'Only update the expression intensity rank information (may be combined with other options)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProcessedDataComputeCLI' -o ignoreqm -f --description 'Ignore mismatch between raw quantitations and that inferred from data'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a makeProcessedData --description 'Performs preprocessing. Optionally can do only selected processing steps including batch correction, rank computation and diagnostic computation'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o diagupdate -f --description 'Only update the diagnostics without recomputing data (PCA, M-V, sample correlation, GEEQ; may be combined with other options)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o rankupdate -f --description 'Only update the expression intensity rank information (may be combined with other options)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makeProcessedData' -o ignoreqm -f --description 'Ignore mismatch between raw quantitations and that inferred from data'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.MakeExperimentsPublicCli --description 'Make experiments public'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MakeExperimentsPublicCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a makePublic --description 'Make experiments public'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePublic' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.OrderVectorsByDesignCli --description 'Experimental: reorder the vectors by experimental design, to save computation later.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.OrderVectorsByDesignCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a orderVectorsByDesign --description 'Experimental: reorder the vectors by experimental design, to save computation later.'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from orderVectorsByDesign' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SVDCli --description 'Run PCA (using SVD) on data sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SVDCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a pca --description 'Run PCA (using SVD) on data sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from pca' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExperimentalDesignWriterCLI --description 'Prints experimental design to a file in a R-friendly format'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o standardLocation -l standard-location -f --description 'Write the experimental design to the standard location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -s o -l outFilePrefix -r -f --description 'File prefix for saving the output (short name will be appended). This option is incompatible with -standardLocation,--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw names for the columns, otherwise R-friendly names are used. This option is incompatible with -standardLocation,--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignWriterCLI' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a printExperimentalDesign --description 'Prints experimental design to a file in a R-friendly format'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o standardLocation -l standard-location -f --description 'Write the experimental design to the standard location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -s o -l outFilePrefix -r -f --description 'File prefix for saving the output (short name will be appended). This option is incompatible with -standardLocation,--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o useRawColumnNames -l use-raw-column-names -f --description 'Use raw names for the columns, otherwise R-friendly names are used. This option is incompatible with -standardLocation,--standard-location.'
complete -c gemma-cli -n '__fish_seen_subcommand_from printExperimentalDesign' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentPrimaryPubCli --description 'Set or update the primary publication for experiments by fetching from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o pubmedIDFile -r -f --description 'A text file which contains the list of pubmed IDs associated with each experiment ID. If the pubmed ID is not found, it will try to use the existing pubmed ID associated with the experiment. Each row has two columns: pubmedId and experiment shortName, e.g. 22438826<TAB>GSE27715'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPrimaryPubCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a pubmedAssociateToExperiments --description 'Set or update the primary publication for experiments by fetching from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o pubmedIDFile -r -f --description 'A text file which contains the list of pubmed IDs associated with each experiment ID. If the pubmed ID is not found, it will try to use the existing pubmed ID associated with the experiment. Each row has two columns: pubmedId and experiment shortName, e.g. 22438826<TAB>GSE27715'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedAssociateToExperiments' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.RefreshExperimentCli --description 'Refresh the cache for experiments on the Gemma Website'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s v -l refreshVectors -f --description 'Refresh cache of raw and processed data vectors'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -s r -l refreshReports -f --description 'Refresh cache of experiment reports (i.e. batch information, diff ex. analyses, etc.)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RefreshExperimentCli' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a refreshExperiment --description 'Refresh the cache for experiments on the Gemma Website'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s v -l refreshVectors -f --description 'Refresh cache of raw and processed data vectors'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -s r -l refreshReports -f --description 'Refresh cache of experiment reports (i.e. batch information, diff ex. analyses, etc.)'
complete -c gemma-cli -n '__fish_seen_subcommand_from refreshExperiment' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ReplaceDataCli --description 'Replace expression data for non-Affymetrix and non-RNA-seq data sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ReplaceDataCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ReplaceDataCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ReplaceDataCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ReplaceDataCli' -o file -r -f --description 'Path to file with tab-delimited data, first column = probe ids, first row = sample IDs (e.g. GEO GSM#)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ReplaceDataCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a replaceData --description 'Replace expression data for non-Affymetrix and non-RNA-seq data sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from replaceData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from replaceData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from replaceData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from replaceData' -o file -r -f --description 'Path to file with tab-delimited data, first column = probe ids, first row = sample IDs (e.g. GEO GSM#)'
complete -c gemma-cli -n '__fish_seen_subcommand_from replaceData' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.RNASeqBatchInfoCli --description 'Load RNASeq batch information; header files expected to be in structure like ${gemma.fastq.headers.dir}/GSExxx/GSMxxx/SRRxxx.fastq.header'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqBatchInfoCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a rnaseqBatchInfo --description 'Load RNASeq batch information; header files expected to be in structure like ${gemma.fastq.headers.dir}/GSExxx/GSMxxx/SRRxxx.fastq.header'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqBatchInfo' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.RNASeqDataAddCli --description 'Add expression quantification to an RNA-seq experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o rpkm -r -f --description 'File with RPKM data'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o count -r -f --description 'File with count data'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o allowMissing -f --description 'Set this if your data files don'"'"'t have information for all samples.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -s a -l array -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Target platform (must already exist in the system)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o rlen -r -f --description 'Information on read length given as a string like '"'"'100:paired'"'"', '"'"'36:unpaired'"'"' or simply '"'"'36'"'"' if pairedness is unknown'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o log2cpm -f --description 'Just compute log2cpm from the existing stored count data (backfill); batchmode OK, no other options needed'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.RNASeqDataAddCli' -o multiqc -r -f --description 'File containing a MultiQC report'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a rnaseqDataAdd --description 'Add expression quantification to an RNA-seq experiment'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o rpkm -r -f --description 'File with RPKM data'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o count -r -f --description 'File with count data'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o allowMissing -f --description 'Set this if your data files don'"'"'t have information for all samples.'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -s a -l array -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Target platform (must already exist in the system)'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o rlen -r -f --description 'Information on read length given as a string like '"'"'100:paired'"'"', '"'"'36:unpaired'"'"' or simply '"'"'36'"'"' if pairedness is unknown'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o log2cpm -f --description 'Just compute log2cpm from the existing stored count data (backfill); batchmode OK, no other options needed'
complete -c gemma-cli -n '__fish_seen_subcommand_from rnaseqDataAdd' -o multiqc -r -f --description 'File containing a MultiQC report'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.GeeqCli --description 'Generate or update GEEQ scores'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeeqCli' -s m -l mode -r -f --description 'If specified, switches the scoring mode. By default the mode is set to '"'"'all'"'"'\n Possible values are:\n all - runs all scoring\n batch- recalculates batch related scores - info, confound and batch effect\n reps - recalculates score for replicates\n pub - recalculates score for publication'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a runGeeq --description 'Generate or update GEEQ scores'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n '__fish_seen_subcommand_from runGeeq' -s m -l mode -r -f --description 'If specified, switches the scoring mode. By default the mode is set to '"'"'all'"'"'\n Possible values are:\n all - runs all scoring\n batch- recalculates batch related scores - info, confound and batch effect\n reps - recalculates score for replicates\n pub - recalculates score for publication'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SplitExperimentCli --description 'Split an experiment into parts based on an experimental factor'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SplitExperimentCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SplitExperimentCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SplitExperimentCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SplitExperimentCli' -o factor -r -f --description 'ID numbers, categories or names of the factor to use, with spaces replaced by underscores (must not be '"'"'batch'"'"')'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a splitExperiment --description 'Split an experiment into parts based on an experimental factor'
complete -c gemma-cli -n '__fish_seen_subcommand_from splitExperiment' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from splitExperiment' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from splitExperiment' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from splitExperiment' -o factor -r -f --description 'ID numbers, categories or names of the factor to use, with spaces replaced by underscores (must not be '"'"'batch'"'"')'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli --description 'Switch an experiment to a different array design (usually a merged one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Array design short name to be switched to - no need to specify if the platforms used by the EE are merged'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a switchExperimentPlatform --description 'Switch an experiment to a different array design (usually a merged one)'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Array design short name to be switched to - no need to specify if the platforms used by the EE are merged'
complete -c gemma-cli -n '__fish_seen_subcommand_from switchExperimentPlatform' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataTransformCli --description 'Transform single-cell data in various ways'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataTransformCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataTransformCli' -o python -l python -r -f --description 'Override the Python executable to use (defaults to null)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a transformSingleCellData --description 'Transform single-cell data in various ways'
complete -c gemma-cli -n '__fish_seen_subcommand_from transformSingleCellData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from transformSingleCellData' -o python -l python -r -f --description 'Override the Python executable to use (defaults to null)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.UpdateEe2AdCli --description 'Update the EXPRESSION_EXPERIMENT2ARRAY_DESIGN table.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEe2AdCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEe2AdCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEe2AdCli' -s s -l since -r -f --description 'Only update platforms from experiments updated since the given date'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateEe2Ad --description 'Update the EXPRESSION_EXPERIMENT2ARRAY_DESIGN table.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2Ad' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2Ad' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2Ad' -s s -l since -r -f --description 'Only update platforms from experiments updated since the given date'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.UpdateEE2CCli --description 'Update the EXPRESSION_EXPERIMENT2CHARACTERISTIC table'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEE2CCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEE2CCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEE2CCli' -o truncate -l truncate -f --description 'Truncate the table before updating it'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateEE2CCli' -s s -l since -r -f --description 'Only update characteristics from experiments updated since the given date'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateEe2c --description 'Update the EXPRESSION_EXPERIMENT2CHARACTERISTIC table'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2c' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2c' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2c' -o truncate -l truncate -f --description 'Truncate the table before updating it'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateEe2c' -s s -l since -r -f --description 'Only update characteristics from experiments updated since the given date'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentDataUpdaterCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o updateExperimentTags -l update-experiment-tags -f --description 'Update experiment tags'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o updateSampleCharacteristics -l update-sample-characteristics -f --description 'Update sample characteristics'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentDataUpdaterCli' -o updatePublications -l update-publications -f --description 'Update publications'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateGEOData
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o updateExperimentTags -l update-experiment-tags -f --description 'Update experiment tags'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o updateSampleCharacteristics -l update-sample-characteristics -f --description 'Update sample characteristics'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGEOData' -o updatePublications -l update-publications -f --description 'Update publications'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli --description 'Update sparsity metrics for single cell datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateSingleCellSparsityMetrics --description 'Update sparsity metrics for single cell datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateSingleCellSparsityMetrics' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.VectorMergingCli --description 'For experiments that used multiple array designs, merge the expression profiles'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.VectorMergingCli' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a vectorMerge --description 'For experiments that used multiple array designs, merge the expression profiles'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from vectorMerge' -o force -l force -f --description 'Ignore other reasons for skipping entities (e.g., troubled experiments) and overwrite existing data (see documentation for this tool to see exact behavior if not clear)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli --description 'View changelogs for the given experiment'"'"'s metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a viewChangelog --description 'View changelogs for the given experiment'"'"'s metadata.'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s e -l experiment -r -a '(gemma-cli complete dataset 2>/dev/null)' -f --description 'Dataset identifier. Most tools recognize comma-delimited values given on the command line, and if this option is omitted (and none other provided), the tool will be applied to all expression experiments.'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -o all -f --description 'Process all expression experiments'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s f -l eeListfile -r -F --description 'File with list of short names or IDs of expression experiments (one per line; use instead of '"'"'-e'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -o eeset -l experiment-set -r -a '(gemma-cli complete eeset 2>/dev/null)' -f --description 'Name of expression experiment set to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s q -l expressionQuery -r -f --description 'Use a query string for defining which expression experiments to use'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the expression experiments and genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -s x -l excludeEEFile -r -F --description 'File containing list of expression experiments to exclude'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewChangelog' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a adATcleanup
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from adATcleanup' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignSequenceAssociationCli --description 'Attach sequences to array design, from a file or fetching from BLAST database.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s f -l file -r -f --description 'Path to file (FASTA for cDNA or three-column format for OLIGO). If the FASTA file doesn'"'"'t have probe identifiers included, provide identifiers via the -i option.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s i -l ids -r -f --description 'Path to file (two columns with probe ids and sequence accessions); can use in combination with -file'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s y -l type -r -f --description 'AFFY_TARGET\nAFFY_PROBE\nEST\nmRNA\nREFSEQ\nBAC\nWHOLE_GENOME\nWHOLE_CHROMOSOME\nDNA\nOTHER\nORF\nAFFY_COLLAPSED\nOLIGO\nDUMMY'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s s -l sequence -r -f --description 'A single accession to update'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -o force -l force -f --description 'Force overwriting of existing sequences; If biosequences are encountered that already have sequences filled in, they will be overwritten; default is to leave them.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSequenceAssociationCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human) for sequences (only required if array design is '"'"'naive'"'"')'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addPlatformSequences --description 'Attach sequences to array design, from a file or fetching from BLAST database.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s f -l file -r -f --description 'Path to file (FASTA for cDNA or three-column format for OLIGO). If the FASTA file doesn'"'"'t have probe identifiers included, provide identifiers via the -i option.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s i -l ids -r -f --description 'Path to file (two columns with probe ids and sequence accessions); can use in combination with -file'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s y -l type -r -f --description 'AFFY_TARGET\nAFFY_PROBE\nEST\nmRNA\nREFSEQ\nBAC\nWHOLE_GENOME\nWHOLE_CHROMOSOME\nDNA\nOTHER\nORF\nAFFY_COLLAPSED\nOLIGO\nDUMMY'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s s -l sequence -r -f --description 'A single accession to update'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -o force -l force -f --description 'Force overwriting of existing sequences; If biosequences are encountered that already have sequences filled in, they will be overwritten; default is to leave them.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addPlatformSequences' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human) for sequences (only required if array design is '"'"'naive'"'"')'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.AffyProbeCollapseCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.AffyProbeCollapseCli' -o affyProbeFile -r -f --description 'Affymetrix probe file to use as input'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a affyCollapse
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyCollapse' -o affyProbeFile -r -f --description 'Affymetrix probe file to use as input'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignBlatCli --description 'Run BLAT on the sequences for a platform; the results are persisted in the DB.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -o sensitive -f --description 'Run on more sensitive server, if available'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human); if platform name not given (analysis will be restricted to sequences on that platform for taxon given), blat will be run for all ArrayDesigns from that taxon (overrides -a and -b)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s s -l scoreThresh -r -f --description 'Threshold (0-1.0) for acceptance of BLAT alignments [Default = 0.7]'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBlatCli' -s b -l blatfile -r -f --description 'Blat result file in PSL format (if supplied, BLAT will not be run; will not work with settings that indicate multiple platforms to run); -t option overrides'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a blatPlatform --description 'Run BLAT on the sequences for a platform; the results are persisted in the DB.'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -o sensitive -f --description 'Run on more sensitive server, if available'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human); if platform name not given (analysis will be restricted to sequences on that platform for taxon given), blat will be run for all ArrayDesigns from that taxon (overrides -a and -b)'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s s -l scoreThresh -r -f --description 'Threshold (0-1.0) for acceptance of BLAT alignments [Default = 0.7]'
complete -c gemma-cli -n '__fish_seen_subcommand_from blatPlatform' -s b -l blatfile -r -f --description 'Blat result file in PSL format (if supplied, BLAT will not be run; will not work with settings that indicate multiple platforms to run); -t option overrides'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignProbeCleanupCLI
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -s f -l file -r -f --description 'File (tabbed) with element ids in the first column'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeCleanupCLI' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deletePlatformElements
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -s f -l file -r -f --description 'File (tabbed) with element ids in the first column'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from deletePlatformElements' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignBioSequenceDetachCli --description 'Remove all associations that a platform has with sequences, for cases where imported data had wrong associations. Also can be used to delete sequences associated with a platform (use very carefully as sequences can be shared by platforms)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignBioSequenceDetachCli' -o delete -f --description 'Delete sequences instead of detaching them - use with care'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a detachSequences --description 'Remove all associations that a platform has with sequences, for cases where imported data had wrong associations. Also can be used to delete sequences associated with a platform (use very carefully as sequences can be shared by platforms)'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from detachSequences' -o delete -f --description 'Delete sequences instead of detaching them - use with care'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.GenericGenelistDesignGenerator --description 'Update a '"'"'platform'"'"' based on a list of NCBI IDs'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -s a -l array -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Platform short name (existing or new to add)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -s f -l geneListFile -r -f --description 'File with list of NCBI IDs of genes to add to platform (one per line)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenericGenelistDesignGenerator' -o nodb -f --description 'Dry run: Do not update the database nor delete any flat files'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a genericPlatform --description 'Update a '"'"'platform'"'"' based on a list of NCBI IDs'
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon of the genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -s a -l array -r -a '(gemma-cli complete platform generic 2>/dev/null)' -f --description 'Platform short name (existing or new to add)'
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -s f -l geneListFile -r -f --description 'File with list of NCBI IDs of genes to add to platform (one per line)'
complete -c gemma-cli -n '__fish_seen_subcommand_from genericPlatform' -o nodb -f --description 'Dry run: Do not update the database nor delete any flat files'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignAnnotationFileCli --description 'Generate annotation files for platforms.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s l -r -f --description 'Use specified file for batch generating annotation files.   File is a list of shortNames (one per line); Overrides -a,-t,-f options '
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s b -l batch -f --description 'Generates annotation files for all eligible Array Designs  Overrides other selection methods but can be combined with '"'"'--taxon'"'"' '
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon short name e.g. '"'"'mouse'"'"' (use with --genefile, or alone to process all known genes for the taxon, or with --batch to process all arrays for the taxon.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -o nogo -l nogo -f --description 'Skip GO annotations'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAnnotationFileCli' -s k -l dontDeleteOtherFiles -f --description 'Keep other files associatedwith the platform such as data set flat files and DEA results. Use this option if the annotations haven'"'"'t changed; default is to delete them'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a makePlatformAnnotFiles --description 'Generate annotation files for platforms.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s l -r -f --description 'Use specified file for batch generating annotation files.   File is a list of shortNames (one per line); Overrides -a,-t,-f options '
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s b -l batch -f --description 'Generates annotation files for all eligible Array Designs  Overrides other selection methods but can be combined with '"'"'--taxon'"'"' '
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon short name e.g. '"'"'mouse'"'"' (use with --genefile, or alone to process all known genes for the taxon, or with --batch to process all arrays for the taxon.'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -o nogo -l nogo -f --description 'Skip GO annotations'
complete -c gemma-cli -n '__fish_seen_subcommand_from makePlatformAnnotFiles' -s k -l dontDeleteOtherFiles -f --description 'Keep other files associatedwith the platform such as data set flat files and DEA results. Use this option if the annotations haven'"'"'t changed; default is to delete them'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignProbeMapperCli --description 'Process the BLAT results for an array design to map them onto genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s i -l identityThreshold -r -f --description 'Sequence identity threshold, default = 0.8'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s s -l scoreThreshold -r -f --description 'Blat score threshold, default = 0.75'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s o -l overlapThreshold -r -f --description 'Minimum fraction of probe overlap with exons, default = 0.05'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o usePred -f --description 'Allow mapping to predicted genes (overrides Acembly, Ensembl and Nscan; default=false)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o config -r -f --description 'String describing which tracks to search, for example '"'"'rkenmias'"'"' for all, '"'"'rm'"'"' to limit search to Refseq with mRNA evidence. If this option is not set, all will be used except as listed below and in combination with the '"'"'usePred'"'"' option:\n r - search refseq track for genes (best to leave on)\nk - search knownGene track for genes (best to leave on, but track may be missing for some organisms)\ni - search miRNA track for genes (Default = false)\ne - search EST track for transcripts (Default=false)\nm - search mRNA track for transcripts (Default=false)\nn - search Ensembl track for predicted genes (Default=false) \n'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o mirna -f --description 'Only seek miRNAs; this is the same as '"'"'-config i; overrides -config.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human); if using '"'"'-import'"'"', this taxon will be assumed; otherwise analysis will be run for all platforms from that taxon; overrides -a.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o force -f --description 'Run no matter what'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o import -r -f --description 'Import annotations from a file rather than our own analysis. You must provide the taxon option. File format: 2 columns with column 1= probe name in Gemma, column 2=sequence name (not required, and not used for direct gene-based annotation) column 3 = gene symbol (will be matched to that in Gemma)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o ncbi -f --description 'If set, it is assumed the direct annotation file is NCBI gene ids, not gene symbols (only valid with -import)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o source -r -f --description 'Source database name (GEO etc); required if using -import'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o nodb -f --description 'Don'"'"'t save the results to the database, print to stdout instead (not with -import)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeMapperCli' -o probes -r -f --description 'Comma-delimited list of probe names to process (for testing); implies -nodb'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a mapPlatformToGenes --description 'Process the BLAT results for an array design to map them onto genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s i -l identityThreshold -r -f --description 'Sequence identity threshold, default = 0.8'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s s -l scoreThreshold -r -f --description 'Blat score threshold, default = 0.75'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s o -l overlapThreshold -r -f --description 'Minimum fraction of probe overlap with exons, default = 0.05'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o usePred -f --description 'Allow mapping to predicted genes (overrides Acembly, Ensembl and Nscan; default=false)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o config -r -f --description 'String describing which tracks to search, for example '"'"'rkenmias'"'"' for all, '"'"'rm'"'"' to limit search to Refseq with mRNA evidence. If this option is not set, all will be used except as listed below and in combination with the '"'"'usePred'"'"' option:\n r - search refseq track for genes (best to leave on)\nk - search knownGene track for genes (best to leave on, but track may be missing for some organisms)\ni - search miRNA track for genes (Default = false)\ne - search EST track for transcripts (Default=false)\nm - search mRNA track for transcripts (Default=false)\nn - search Ensembl track for predicted genes (Default=false) \n'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o mirna -f --description 'Only seek miRNAs; this is the same as '"'"'-config i; overrides -config.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon identifier (e.g., human); if using '"'"'-import'"'"', this taxon will be assumed; otherwise analysis will be run for all platforms from that taxon; overrides -a.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o force -f --description 'Run no matter what'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o import -r -f --description 'Import annotations from a file rather than our own analysis. You must provide the taxon option. File format: 2 columns with column 1= probe name in Gemma, column 2=sequence name (not required, and not used for direct gene-based annotation) column 3 = gene symbol (will be matched to that in Gemma)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o ncbi -f --description 'If set, it is assumed the direct annotation file is NCBI gene ids, not gene symbols (only valid with -import)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o source -r -f --description 'Source database name (GEO etc); required if using -import'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o nodb -f --description 'Don'"'"'t save the results to the database, print to stdout instead (not with -import)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mapPlatformToGenes' -o probes -r -f --description 'Comma-delimited list of probe names to process (for testing); implies -nodb'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignMergeCli --description 'Make a new array design that combines the reporters from others.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s o -l other -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Short name(s) of arrays to merge with the one given to the -a option, preferably subsumed by it, comma-delimited. If the platform given with -a is already a merged design, these will be added to it if the -add option is givenThe designs cannot be ones already merged into another design, but they can be mergees.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s n -l name -r -f --description 'Name for new platform, if the given platform is not already a merged design'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -s s -l shortname -r -f --description 'Short name for new platform, if the given platform is not already a merged design'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMergeCli' -o add -f --description 'If the given platform is already a merged design, add the -o designs to it. Recommended unless there is a specific reason to create a new design.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a mergePlatforms --description 'Make a new array design that combines the reporters from others.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s o -l other -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Short name(s) of arrays to merge with the one given to the -a option, preferably subsumed by it, comma-delimited. If the platform given with -a is already a merged design, these will be added to it if the -add option is givenThe designs cannot be ones already merged into another design, but they can be mergees.'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s n -l name -r -f --description 'Name for new platform, if the given platform is not already a merged design'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -s s -l shortname -r -f --description 'Short name for new platform, if the given platform is not already a merged design'
complete -c gemma-cli -n '__fish_seen_subcommand_from mergePlatforms' -o add -f --description 'If the given platform is already a merged design, add the -o designs to it. Recommended unless there is a specific reason to create a new design.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignRepeatScanCli --description 'Run RepeatMasker on sequences for an Array design'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -s f -l file -r -F --description 'RepeatScan file to use as input'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignRepeatScanCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a platformRepeatScan --description 'Run RepeatMasker on sequences for an Array design'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -s f -l file -r -F --description 'RepeatScan file to use as input'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformRepeatScan' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignSubsumptionTesterCli --description 'Test microarray designs to see if one subsumes other(s) (in terms of probe sequences), and if so update their information'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -s o -l other -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Short name(s) of platforms to compare to the first one, comma-delimited'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignSubsumptionTesterCli' -o all -f --description 'Test all platforms listed against all (not just to the first one)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a platformSubsumptionTest --description 'Test microarray designs to see if one subsumes other(s) (in terms of probe sequences), and if so update their information'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -s o -l other -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Short name(s) of platforms to compare to the first one, comma-delimited'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformSubsumptionTest' -o all -f --description 'Test all platforms listed against all (not just to the first one)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignProbeRenamerCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -s f -l file -r -f --description 'Two-column file with old and new identifiers (additional columns ignored)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignProbeRenamerCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a probeRename
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -s f -l file -r -f --description 'Two-column file with old and new identifiers (additional columns ignored)'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from probeRename' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.BioSequenceCleanupCli --description 'Examines biosequences for array designs in the database and removes duplicates.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -o dryrun -f --description 'Set to run without any database modifications'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BioSequenceCleanupCli' -s b -l file -f --description 'File with list of biosequence ids to check; default: check all on provided platforms'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a seqCleanup --description 'Examines biosequences for array designs in the database and removes duplicates.'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -o dryrun -f --description 'Set to run without any database modifications'
complete -c gemma-cli -n '__fish_seen_subcommand_from seqCleanup' -s b -l file -f --description 'File with list of biosequence ids to check; default: check all on provided platforms'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.DatabaseViewGeneratorCLI --description 'Generate views of the database in flat files'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -s d -l dataset -f --description 'Will generate a zip file containing a summary of all accessible datasets in gemma'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -s t -l tissue -f --description 'Will generate a zip file containing a summary of all the tissues in accessible datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -s x -l diffexpression -f --description 'Will generate a zip file containing a summary of all the differential expressed genes in accessible datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.DatabaseViewGeneratorCLI' -s l -l limit -r -f --description 'will impose a limit on how many datasets to process'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a dumpForNIF --description 'Generate views of the database in flat files'
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -s d -l dataset -f --description 'Will generate a zip file containing a summary of all accessible datasets in gemma'
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -s t -l tissue -f --description 'Will generate a zip file containing a summary of all the tissues in accessible datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -s x -l diffexpression -f --description 'Will generate a zip file containing a summary of all the differential expressed genes in accessible datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from dumpForNIF' -s l -l limit -r -f --description 'will impose a limit on how many datasets to process'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.GeoGrabberCli --description 'Grab information on GEO data sets not yet in the system, working backwards in time'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o output -l output -r -F --description 'File path for output (defaults to standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -s y -f --description 'Fetch a list of all platforms instead of experiments (-startdate, -date, -startat and -gselimit are ignored)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -s e -l acc -r -f --description 'A comma-delimited list of accessions to retrieve from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -s f -l file -r -F --description 'A file containing accessions to retrieve from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o platformLimit -r -f --description 'Limit to selected platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o startdate -r -f --description 'Attempt to '"'"'fast-rewind'"'"' to the given date in format yyyy-MM-dd or yyyy.MM.dd and continue retrieving from there'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o date -r -f --description 'A release date to stop the search in format yyyy-MM-dd or yyyy.MM.dd (e.g. 2010.01.12). Records on that date will not be processed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o startat -r -f --description 'Attempt to '"'"'fast-rewind'"'"' to the given GSE ID and continue retrieving from there '
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o gselimit -r -f --description 'A GSE at which to stop the search. Record with the GSE ID will not be processed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o raw -f --description 'Display raw, unfiltered results from GEO. Datasets that are blacklisted or already in Gemma will be included in the output.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GeoGrabberCli' -o chunkSize -l chunk-size -r -f --description 'Chunk size to use when retrieving GEO records (defaults to 100)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a listGEOData --description 'Grab information on GEO data sets not yet in the system, working backwards in time'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o output -l output -r -F --description 'File path for output (defaults to standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -s y -f --description 'Fetch a list of all platforms instead of experiments (-startdate, -date, -startat and -gselimit are ignored)'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -s e -l acc -r -f --description 'A comma-delimited list of accessions to retrieve from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -s f -l file -r -F --description 'A file containing accessions to retrieve from GEO'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o platformLimit -r -f --description 'Limit to selected platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o startdate -r -f --description 'Attempt to '"'"'fast-rewind'"'"' to the given date in format yyyy-MM-dd or yyyy.MM.dd and continue retrieving from there'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o date -r -f --description 'A release date to stop the search in format yyyy-MM-dd or yyyy.MM.dd (e.g. 2010.01.12). Records on that date will not be processed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o startat -r -f --description 'Attempt to '"'"'fast-rewind'"'"' to the given GSE ID and continue retrieving from there '
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o gselimit -r -f --description 'A GSE at which to stop the search. Record with the GSE ID will not be processed.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o raw -f --description 'Display raw, unfiltered results from GEO. Datasets that are blacklisted or already in Gemma will be included in the output.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listGEOData' -o chunkSize -l chunk-size -r -f --description 'Chunk size to use when retrieving GEO records (defaults to 100)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignMapSummaryCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignMapSummaryCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a platformMapSummary
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -s a -l array -r -a '(gemma-cli complete platform 2>/dev/null)' -f --description 'Platform ID, short name or name; or comma-delimited list of these'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -s f -l adListFile -r -f --description 'File with list of short names or IDs of platforms (one per line; use instead of '"'"'-a'"'"')'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -o mdate -r -f --description 'Constrain to run only on entities with analyses older than the given date. For example, to run only on entities that have not been analyzed in the last 10 days, use '"'"'-10d'"'"'. If there is no record of when the analysis was last run, it will be run.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -o auto -f --description 'Attempt to process entities that need processing based on workflow criteria.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from platformMapSummary' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExperimentalDesignViewCli --description 'Dump a view of experimental design(s)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignViewCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExperimentalDesignViewCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a viewExpDesigns --description 'Dump a view of experimental design(s)'
complete -c gemma-cli -n '__fish_seen_subcommand_from viewExpDesigns' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from viewExpDesigns' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ArrayDesignAlternativePopulateCli --description 'Populate the '"'"'alternative'"'"' information for Affymetrix platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAlternativePopulateCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ArrayDesignAlternativePopulateCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a affyAltsUpdate --description 'Populate the '"'"'alternative'"'"' information for Affymetrix platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from affyAltsUpdate' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from affyAltsUpdate' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.BlacklistCli --description 'Add GEO entities (series or platforms) to the blacklist'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -o accession -l accession -r -f --description 'Accession of the entity to blacklist'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -o reason -r -f --description 'Reason for blacklist, please use standard language'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -o file -r -f --description 'Tab-delimited file with blacklist. Format: first column is GEO accession; second column is reason for blacklist; incompatible with --accession and --reasonadditional columns: name, description of entity; lines starting with '"'"'#'"'"' are ignored'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -o undo -f --description 'Remove items from blacklist instead of adding. File can contain just one column of IDs, or you can provide -accession'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -o pp -f --description 'Special: proactively blacklist GEO datasets for blacklisted platforms (cannot be combined with other options except -a)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BlacklistCli' -s a -r -f --description 'A comma-delimited of GPL IDs to check. Combine with -pp, not relevant to any other option'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a blackList --description 'Add GEO entities (series or platforms) to the blacklist'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -o accession -l accession -r -f --description 'Accession of the entity to blacklist'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -o reason -r -f --description 'Reason for blacklist, please use standard language'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -o file -r -f --description 'Tab-delimited file with blacklist. Format: first column is GEO accession; second column is reason for blacklist; incompatible with --accession and --reasonadditional columns: name, description of entity; lines starting with '"'"'#'"'"' are ignored'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -o undo -f --description 'Remove items from blacklist instead of adding. File can contain just one column of IDs, or you can provide -accession'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -o pp -f --description 'Special: proactively blacklist GEO datasets for blacklisted platforms (cannot be combined with other options except -a)'
complete -c gemma-cli -n '__fish_seen_subcommand_from blackList' -s a -r -f --description 'A comma-delimited of GPL IDs to check. Combine with -pp, not relevant to any other option'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.FindObsoleteTermsCli --description 'Check for characteristics using obsolete terms as values (excluding GO), prints to sdout'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FindObsoleteTermsCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FindObsoleteTermsCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a findObsoleteTerms --description 'Check for characteristics using obsolete terms as values (excluding GO), prints to sdout'
complete -c gemma-cli -n '__fish_seen_subcommand_from findObsoleteTerms' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from findObsoleteTerms' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.FixOntologyTermLabelsCli --description 'Check and correct characteristics & statements using the wrong label for an ontology term'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FixOntologyTermLabelsCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FixOntologyTermLabelsCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FixOntologyTermLabelsCli' -s d -l dryRun -f --description 'Dry run, do not update the database [default: false]'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a fixOntologyTermLabels --description 'Check and correct characteristics & statements using the wrong label for an ontology term'
complete -c gemma-cli -n '__fish_seen_subcommand_from fixOntologyTermLabels' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from fixOntologyTermLabels' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from fixOntologyTermLabels' -s d -l dryRun -f --description 'Dry run, do not update the database [default: false]'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.BibRefUpdaterCli --description 'Refresh stored information on publications'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BibRefUpdaterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BibRefUpdaterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.BibRefUpdaterCli' -o pmids -r -f --description 'Pubmed ids, comma-delimited; default is to do all in DB'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updatePubMeds --description 'Refresh stored information on publications'
complete -c gemma-cli -n '__fish_seen_subcommand_from updatePubMeds' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updatePubMeds' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updatePubMeds' -o pmids -r -f --description 'Pubmed ids, comma-delimited; default is to do all in DB'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExternalDatabaseAdderCli --description 'Add a new external database.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseAdderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseAdderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseAdderCli' -s n -l name -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseAdderCli' -s t -l type -r -f
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addExternalDatabase --description 'Add a new external database.'
complete -c gemma-cli -n '__fish_seen_subcommand_from addExternalDatabase' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addExternalDatabase' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addExternalDatabase' -s n -l name -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addExternalDatabase' -s t -l type -r -f
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.NcbiGeneLoaderCLI --description 'Load/update gene information from NCBI'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -s f -l file -r -f --description 'Optional path to the gene_info and gene2accession files'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -o taxon -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Specific taxon for which to update genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -o nodownload -f --description 'Set to suppress NCBI file download'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NcbiGeneLoaderCLI' -o restart -r -f --description 'Enter the NCBI ID of the gene you want to start on (implies -nodownload, and assumes you have the right -taxon option, if any)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a geneUpdate --description 'Load/update gene information from NCBI'
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -s f -l file -r -f --description 'Optional path to the gene_info and gene2accession files'
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -o taxon -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Specific taxon for which to update genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -o nodownload -f --description 'Set to suppress NCBI file download'
complete -c gemma-cli -n '__fish_seen_subcommand_from geneUpdate' -o restart -r -f --description 'Enter the NCBI ID of the gene you want to start on (implies -nodownload, and assumes you have the right -taxon option, if any)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.GenerateDatabaseUpdateCli --description 'Generate SQL statements to update the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenerateDatabaseUpdateCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenerateDatabaseUpdateCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenerateDatabaseUpdateCli' -s c -l create -f --description 'Generate a creation script'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenerateDatabaseUpdateCli' -o vendor -l vendor -r -f --description 'Vendor to use to generate SQL statements (either mysql or h2, defaults to mysql)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.GenerateDatabaseUpdateCli' -s o -l output-file -r -F --description 'File destination for the update script (defaults to stdout)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a generateDatabaseUpdate --description 'Generate SQL statements to update the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDatabaseUpdate' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDatabaseUpdate' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDatabaseUpdate' -s c -l create -f --description 'Generate a creation script'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDatabaseUpdate' -o vendor -l vendor -r -f --description 'Vendor to use to generate SQL statements (either mysql or h2, defaults to mysql)'
complete -c gemma-cli -n '__fish_seen_subcommand_from generateDatabaseUpdate' -s o -l output-file -r -F --description 'File destination for the update script (defaults to stdout)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExternalFileGeneLoaderCLI --description 'loading genes from a non-NCBI files; only used for species like salmon'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalFileGeneLoaderCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalFileGeneLoaderCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalFileGeneLoaderCLI' -s f -r -f --description 'Tab delimited format containing gene symbol, gene name, uniprot id in that order'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalFileGeneLoaderCLI' -s t -r -f --description 'Taxon common name e.g. '"'"'salmonoid'"'"'; does not have to be a species '
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a loadGenesFromFile --description 'loading genes from a non-NCBI files; only used for species like salmon'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadGenesFromFile' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from loadGenesFromFile' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadGenesFromFile' -s f -r -f --description 'Tab delimited format containing gene symbol, gene name, uniprot id in that order'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadGenesFromFile' -s t -r -f --description 'Taxon common name e.g. '"'"'salmonoid'"'"'; does not have to be a species '
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.IndexGemmaCLI --description 'Create or update the searchable indexes for a Gemma production system'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s g -f --description 'Index genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s e -f --description 'Index datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s a -f --description 'Index platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s b -f --description 'Index bibliographic references'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s s -f --description 'Index probes'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s q -f --description 'Index sequences'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s x -f --description 'Index datasets groups'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -s y -f --description 'Index gene sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.IndexGemmaCLI' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a searchIndex --description 'Create or update the searchable indexes for a Gemma production system'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s g -f --description 'Index genes'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s e -f --description 'Index datasets'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s a -f --description 'Index platforms'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s b -f --description 'Index bibliographic references'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s s -f --description 'Index probes'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s q -f --description 'Index sequences'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s x -f --description 'Index datasets groups'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -s y -f --description 'Index gene sets'
complete -c gemma-cli -n '__fish_seen_subcommand_from searchIndex' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExternalDatabaseUpdaterCli --description 'Update an external database and optionally perform a release.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -s n -l name -r -f --description 'External database name'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -s d -l description -r -f --description 'Update the description'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o parentDatabase -l parent-database -r -f --description 'Update the parent database either by ID or name'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o release -l release -f --description 'Update the release details'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o releaseVersion -l release-version -r -f --description 'Release version (optional)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o releaseUrl -l release-url -r -f --description 'Release URL (optional)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o releaseNote -l release-note -r -f --description 'Note to include in the audit event related to the new release'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseUpdaterCli' -o lastUpdated -l last-updated -r -f --description 'Moment the release was performed if known, otherwise the current time will be used'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateExternalDatabase --description 'Update an external database and optionally perform a release.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -s n -l name -r -f --description 'External database name'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -s d -l description -r -f --description 'Update the description'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o parentDatabase -l parent-database -r -f --description 'Update the parent database either by ID or name'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o release -l release -f --description 'Update the release details'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o releaseVersion -l release-version -r -f --description 'Release version (optional)'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o releaseUrl -l release-url -r -f --description 'Release URL (optional)'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o releaseNote -l release-note -r -f --description 'Note to include in the audit event related to the new release'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateExternalDatabase' -o lastUpdated -l last-updated -r -f --description 'Moment the release was performed if known, otherwise the current time will be used'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI --description 'Update GO annotations'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI' -s f -l file -r -f --description 'Optional location of the gene2go.gz file'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateGOAnnots --description 'Update GO annotations'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGOAnnots' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGOAnnots' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGOAnnots' -s f -l file -r -f --description 'Optional location of the gene2go.gz file'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.MultifunctionalityCli --description 'Update or create gene multifunctionality metrics'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MultifunctionalityCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MultifunctionalityCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MultifunctionalityCli' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon to process'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateMultifunc --description 'Update or create gene multifunctionality metrics'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateMultifunc' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateMultifunc' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateMultifunc' -s t -l taxon -r -a '(gemma-cli complete taxon 2>/dev/null)' -f --description 'Taxon to process'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ProtocolAdderCli --description 'Add a new protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolAdderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolAdderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolAdderCli' -o name -l name -r -f --description 'Name for the protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolAdderCli' -o description -l description -r -f --description 'Description for the protocol'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a addProtocol --description 'Add a new protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from addProtocol' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from addProtocol' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from addProtocol' -o name -l name -r -f --description 'Name for the protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from addProtocol' -o description -l description -r -f --description 'Description for the protocol'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.CompleteCli
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.CompleteCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a complete
complete -c gemma-cli -n '__fish_seen_subcommand_from complete' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ProtocolDeleterCli --description 'Delete a protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolDeleterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolDeleterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolDeleterCli' -o protocol -l protocol -r -f --description 'Protocol ID or name.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a deleteProtocol --description 'Delete a protocol'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProtocol' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProtocol' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from deleteProtocol' -o protocol -l protocol -r -f --description 'Protocol ID or name.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.SingleCellDataDownloaderCli --description 'Download single cell data from GEO.\nFor the moment, only GEO series accessions are supported.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -s f -l file -r -F --description 'File containing accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -s e -l acc -r -f --description 'Comma-delimited list of accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -s s -l summary-output-file -r -F --description 'File to write the summary output to. This is used to keep track of progress and resume download with -r/--resume.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -s r -l resume -f --description 'Resume download from a previous invocation of this command. Requires -s/--summary-output-file to be set and refer to an existing file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o resumeIgnoreUnknownDatasets -l resume-ignore-unknown-datasets -f --description 'Ignore unknown datasets when resuming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o retry -l retry -r -f --description 'Retry problematic datasets. Possible values are: '"'"'UNSUPPORTED'"'"', '"'"'UNKNOWN'"'"' or '"'"'FAILED'"'"', or any combination delimited by '"'"','"'"'. Requires -r/--resume option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o retryCount -l retry-count -r -f --description 'Number of times to retry a download operation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o skipDownload -l skip-download -f --description 'Skip download of single-cell data.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o fetchThreads -l fetch-threads -r -f --description 'Number of threads to use for downloading files. Default is 4. Use -threads/--threads for processing series in parallel.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o sampleAccessions -l sample-accessions -r -f --description 'Comma-delimited list of sample accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o dataType -l data-type -r -f --description 'Data type. Possible values are: ANNDATA, SEURAT_DISK, LOOM, MEX, NULL. Only works if a single accession is passed to -e/--acc.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o supplementaryFile -l supplementary-file -r -f --description 'Supplementary file to download. Only works if a single accession is passed to -e/--acc and -dataType is specified.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o mexBarcodesFile -l mex-barcodes-file -r -f --description 'Suffix to use to detect MEX barcodes file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o mexFeaturesFile -l mex-features-file -r -f --description 'Suffix to use to detect MEX features file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o mexMatrixFile -l mex-matrix-file -r -f --description 'Suffix to use to detect MEX matrix file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.SingleCellDataDownloaderCli' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a downloadSingleCellData --description 'Download single cell data from GEO.\nFor the moment, only GEO series accessions are supported.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -s f -l file -r -F --description 'File containing accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -s e -l acc -r -f --description 'Comma-delimited list of accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -s s -l summary-output-file -r -F --description 'File to write the summary output to. This is used to keep track of progress and resume download with -r/--resume.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -s r -l resume -f --description 'Resume download from a previous invocation of this command. Requires -s/--summary-output-file to be set and refer to an existing file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o resumeIgnoreUnknownDatasets -l resume-ignore-unknown-datasets -f --description 'Ignore unknown datasets when resuming.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o retry -l retry -r -f --description 'Retry problematic datasets. Possible values are: '"'"'UNSUPPORTED'"'"', '"'"'UNKNOWN'"'"' or '"'"'FAILED'"'"', or any combination delimited by '"'"','"'"'. Requires -r/--resume option to be set.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o retryCount -l retry-count -r -f --description 'Number of times to retry a download operation.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o skipDownload -l skip-download -f --description 'Skip download of single-cell data.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o fetchThreads -l fetch-threads -r -f --description 'Number of threads to use for downloading files. Default is 4. Use -threads/--threads for processing series in parallel.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o sampleAccessions -l sample-accessions -r -f --description 'Comma-delimited list of sample accessions to download.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o dataType -l data-type -r -f --description 'Data type. Possible values are: ANNDATA, SEURAT_DISK, LOOM, MEX, NULL. Only works if a single accession is passed to -e/--acc.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o supplementaryFile -l supplementary-file -r -f --description 'Supplementary file to download. Only works if a single accession is passed to -e/--acc and -dataType is specified.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o mexBarcodesFile -l mex-barcodes-file -r -f --description 'Suffix to use to detect MEX barcodes file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o mexFeaturesFile -l mex-features-file -r -f --description 'Suffix to use to detect MEX features file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o mexMatrixFile -l mex-matrix-file -r -f --description 'Suffix to use to detect MEX matrix file. Only works if -dataType/--data-type is set to MEX.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n '__fish_seen_subcommand_from downloadSingleCellData' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.MeshTermFetcherCli --description 'Gets MESH headings for a set of pubmed ids'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MeshTermFetcherCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MeshTermFetcherCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MeshTermFetcherCli' -s f -l file -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.MeshTermFetcherCli' -s m -f --description 'Use major subjects only'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a fetchMeshTerms --description 'Gets MESH headings for a set of pubmed ids'
complete -c gemma-cli -n '__fish_seen_subcommand_from fetchMeshTerms' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from fetchMeshTerms' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from fetchMeshTerms' -s f -l file -r -f
complete -c gemma-cli -n '__fish_seen_subcommand_from fetchMeshTerms' -s m -f --description 'Use major subjects only'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ListExpressionDataFIleLocksCli --description 'List all locks over data and metadata files.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListExpressionDataFIleLocksCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ListExpressionDataFIleLocksCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a listDataFileLocks --description 'List all locks over data and metadata files.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listDataFileLocks' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from listDataFileLocks' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ExternalDatabaseOverviewCli --description 'Print an overview of all external databases used by Gemma'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseOverviewCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseOverviewCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseOverviewCli' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseOverviewCli' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ExternalDatabaseOverviewCli' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a listExternalDatabases --description 'Print an overview of all external databases used by Gemma'
complete -c gemma-cli -n '__fish_seen_subcommand_from listExternalDatabases' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from listExternalDatabases' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from listExternalDatabases' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from listExternalDatabases' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from listExternalDatabases' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.ProtocolListCli --description 'List all available protocols'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolListCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.ProtocolListCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a listProtocols --description 'List all available protocols'
complete -c gemma-cli -n '__fish_seen_subcommand_from listProtocols' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from listProtocols' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.TaxonLoaderCli --description 'Populate taxon tables'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.TaxonLoaderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.TaxonLoaderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a loadTaxa --description 'Populate taxon tables'
complete -c gemma-cli -n '__fish_seen_subcommand_from loadTaxa' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from loadTaxa' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.FactorValueMigratorCLI --description 'Perform the migration of old-style characteristics to statements'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o migrationFile -r -F --description 'File containing factor value migrations'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o migrateRemainingCharacteristics -f --description 'Migrate remaining characteristics of factor values that were mentioned in the migration file. The affected factor values will be marked as needs attention.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o migrateRemainingFactorValues -f --description 'Migrate remaining factor values that weren'"'"'t mentioned in the migration file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o migrateNonTrivialCases -f --description 'Migrate non-trivial cases (i.e. 2 or more old-style characteristics) to subject-only statements. The affected factor values will be marked as needs attention.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o noop -f --description 'Only validate migrations; no statements will be saved'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.FactorValueMigratorCLI' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a migrateFactorValues --description 'Perform the migration of old-style characteristics to statements'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o migrationFile -r -F --description 'File containing factor value migrations'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o migrateRemainingCharacteristics -f --description 'Migrate remaining characteristics of factor values that were mentioned in the migration file. The affected factor values will be marked as needs attention.'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o migrateRemainingFactorValues -f --description 'Migrate remaining factor values that weren'"'"'t mentioned in the migration file.'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o migrateNonTrivialCases -f --description 'Migrate non-trivial cases (i.e. 2 or more old-style characteristics) to subject-only statements. The affected factor values will be marked as needs attention.'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o noop -f --description 'Only validate migrations; no statements will be saved'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o batchFormat -l batch-format -r -a '(echo -e "TEXT\t\nTSV\t\nLOG\t\nSUPPRESS\t" 2>/dev/null)' -f --description 'Format to use to the batch summary (default to TEXT or TSV if a file is specified via -batchOutputFile). Possible values are: TEXT, TSV, LOG, SUPPRESS.'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o batchOutputFile -l batch-output-file -r -F --description 'Output file to use for the batch summary (default is standard output)'
complete -c gemma-cli -n '__fish_seen_subcommand_from migrateFactorValues' -o batchReportFrequency -l batch-report-frequency -r -f --description 'Frequency at which to report batch task progress in seconds (default is every 30 seconds)'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.PubMedLoaderCli --description 'Loads PubMed records into the database from XML files'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.PubMedLoaderCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.PubMedLoaderCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.PubMedLoaderCli' -s d -l dir -r -f --description 'Directory of PubMed XML files to load'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a pubmedLoad --description 'Loads PubMed records into the database from XML files'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedLoad' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedLoad' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedLoad' -s d -l dir -r -f --description 'Directory of PubMed XML files to load'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.PubMedSearcher --description 'perform pubmed searches from a list of terms, and persist the results in the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.PubMedSearcher' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.PubMedSearcher' -s d -l persist -f --description 'Persist the results. Otherwise just search.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a pubmedSearchAndSave --description 'perform pubmed searches from a list of terms, and persist the results in the database'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedSearchAndSave' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from pubmedSearchAndSave' -s d -l persist -f --description 'Persist the results. Otherwise just search.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.UpdateGene2CsCli --description 'Update the GENE2CS table.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateGene2CsCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateGene2CsCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UpdateGene2CsCli' -s f -l force -f --description 'Force update of the GENE2CS table, even if no platforms have been updated since the last update.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateGene2Cs --description 'Update the GENE2CS table.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGene2Cs' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGene2Cs' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateGene2Cs' -s f -l force -f --description 'Force update of the GENE2CS table, even if no platforms have been updated since the last update.'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a ubic.gemma.apps.UnifiedOntologyUpdaterCli --description 'Update or initialize the unified ontology'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -o sourcesDir -l sources-dir -r -F --description 'Destination where ontology source files are downloaded. Default is null.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -o destDir -l dest-dir -r -F --description 'Destination where to generate the TDB dataset. Default is null.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -o skipDownload -l skip-download -f --description 'Skip download of ontology files'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -o force -l force -f --description 'Force download of ontology files, even if they are up-to-date.'
complete -c gemma-cli -n '__fish_seen_subcommand_from ubic.gemma.apps.UnifiedOntologyUpdaterCli' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
complete -c gemma-cli -n "not __fish_seen_subcommand_from $gemma_all_subcommands" -f -a updateUnifiedOntology --description 'Update or initialize the unified ontology'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -f
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -s h -l help -f --description 'Print this message'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -o sourcesDir -l sources-dir -r -F --description 'Destination where ontology source files are downloaded. Default is null.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -o destDir -l dest-dir -r -F --description 'Destination where to generate the TDB dataset. Default is null.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -o skipDownload -l skip-download -f --description 'Skip download of ontology files'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -o force -l force -f --description 'Force download of ontology files, even if they are up-to-date.'
complete -c gemma-cli -n '__fish_seen_subcommand_from updateUnifiedOntology' -o threads -l threads -r -f --description 'Number of threads to use for parallel processing'
set -e gemma_all_subcommands
