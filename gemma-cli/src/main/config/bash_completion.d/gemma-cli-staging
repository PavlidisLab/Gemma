function __gemma_cli_staging_complete() {
    COMPREPLY=()
    words="${COMP_WORDS[*]}"
    current_option="${COMP_WORDS[$COMP_CWORD-1]}"
    if ! [[ " $words " =~ ' '(adATcleanup|addChangelogEntry|addExternalDatabase|addGEOData|addMetadataFile|addPlatformSequences|addProtocol|addTSVData|affyAltsUpdate|affyCollapse|affyFromCel|aggregateSingleCellData|blackList|blatPlatform|coexpAnalyze|complete|corrMat|deleteDiffEx|deleteExperiments|deletePlatformElements|deleteProcessedData|deleteProtocol|deleteRawData|deleteSingleCellData|deleteSingleCellDataAggregate|detachSequences|detectQuantitationType|diffExAnalyze|downloadSingleCellData|dumpForNIF|fetchMeshTerms|fillBatchInfo|findDatasetPubs|findObsoleteTerms|fixOntologyTermLabels|geneUpdate|generateDataFile|generateDatabaseUpdate|genericPlatform|getDataMatrix|getDiffExAnalysis|getRawDataMatrix|getSingleCellDataMatrix|getSingleCellMetadata|importDesign|listDataFileLocks|listExternalDatabases|listGEOData|listProtocols|listQuantitationTypes|loadGenesFromFile|loadSingleCellData|loadTaxa|lockDataFile|makePlatformAnnotFiles|makePrivate|makeProcessedData|makePublic|mapPlatformToGenes|mergePlatforms|migrateFactorValues|orderVectorsByDesign|pca|platformMapSummary|platformRepeatScan|platformSubsumptionTest|printExperimentalDesign|probeRename|pubmedAssociateToExperiments|pubmedLoad|pubmedSearchAndSave|refreshExperiment|replaceData|rnaseqBatchInfo|rnaseqDataAdd|runGeeq|searchIndex|seqCleanup|splitExperiment|switchExperimentPlatform|transformSingleCellData|ubic.gemma.apps.AffyDataFromCelCli|ubic.gemma.apps.AffyProbeCollapseCli|ubic.gemma.apps.ArrayDesignAlternativePopulateCli|ubic.gemma.apps.ArrayDesignAnnotationFileCli|ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli|ubic.gemma.apps.ArrayDesignBioSequenceDetachCli|ubic.gemma.apps.ArrayDesignBlatCli|ubic.gemma.apps.ArrayDesignMapSummaryCli|ubic.gemma.apps.ArrayDesignMergeCli|ubic.gemma.apps.ArrayDesignProbeCleanupCLI|ubic.gemma.apps.ArrayDesignProbeMapperCli|ubic.gemma.apps.ArrayDesignProbeRenamerCli|ubic.gemma.apps.ArrayDesignRepeatScanCli|ubic.gemma.apps.ArrayDesignSequenceAssociationCli|ubic.gemma.apps.ArrayDesignSubsumptionTesterCli|ubic.gemma.apps.BatchEffectPopulationCli|ubic.gemma.apps.BibRefUpdaterCli|ubic.gemma.apps.BioSequenceCleanupCli|ubic.gemma.apps.BlacklistCli|ubic.gemma.apps.CellLevelMetadataWriterCli|ubic.gemma.apps.CompleteCli|ubic.gemma.apps.DatabaseViewGeneratorCLI|ubic.gemma.apps.DeleteDiffExCli|ubic.gemma.apps.DeleteExperimentsCli|ubic.gemma.apps.DetectQuantitationTypeCli|ubic.gemma.apps.DifferentialExpressionAnalysisCli|ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli|ubic.gemma.apps.ExperimentalDesignImportCli|ubic.gemma.apps.ExperimentalDesignViewCli|ubic.gemma.apps.ExperimentalDesignWriterCLI|ubic.gemma.apps.ExpressionDataCorrMatCli|ubic.gemma.apps.ExpressionDataMatrixWriterCLI|ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli|ubic.gemma.apps.ExpressionExperimentDataUpdaterCli|ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli|ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli|ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli|ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli|ubic.gemma.apps.ExpressionExperimentPrimaryPubCli|ubic.gemma.apps.ExternalDatabaseAdderCli|ubic.gemma.apps.ExternalDatabaseOverviewCli|ubic.gemma.apps.ExternalDatabaseUpdaterCli|ubic.gemma.apps.ExternalFileGeneLoaderCLI|ubic.gemma.apps.FactorValueMigratorCLI|ubic.gemma.apps.FindObsoleteTermsCli|ubic.gemma.apps.FixOntologyTermLabelsCli|ubic.gemma.apps.GeeqCli|ubic.gemma.apps.GenerateDatabaseUpdateCli|ubic.gemma.apps.GenericGenelistDesignGenerator|ubic.gemma.apps.GeoGrabberCli|ubic.gemma.apps.IndexGemmaCLI|ubic.gemma.apps.LinkAnalysisCli|ubic.gemma.apps.ListExpressionDataFIleLocksCli|ubic.gemma.apps.ListQuantitationTypesCli|ubic.gemma.apps.LoadExpressionDataCli|ubic.gemma.apps.LoadSimpleExpressionDataCli|ubic.gemma.apps.LockExpressionDataFileCli|ubic.gemma.apps.MakeExperimentPrivateCli|ubic.gemma.apps.MakeExperimentsPublicCli|ubic.gemma.apps.MeshTermFetcherCli|ubic.gemma.apps.MultifunctionalityCli|ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI|ubic.gemma.apps.NcbiGeneLoaderCLI|ubic.gemma.apps.OrderVectorsByDesignCli|ubic.gemma.apps.ProcessedDataComputeCLI|ubic.gemma.apps.ProcessedDataDeleterCli|ubic.gemma.apps.ProtocolAdderCli|ubic.gemma.apps.ProtocolDeleterCli|ubic.gemma.apps.ProtocolListCli|ubic.gemma.apps.PubMedLoaderCli|ubic.gemma.apps.PubMedSearcher|ubic.gemma.apps.RNASeqBatchInfoCli|ubic.gemma.apps.RNASeqDataAddCli|ubic.gemma.apps.RawDataDeleterCli|ubic.gemma.apps.RawExpressionDataWriterCli|ubic.gemma.apps.RefreshExperimentCli|ubic.gemma.apps.ReplaceDataCli|ubic.gemma.apps.SVDCli|ubic.gemma.apps.SingleCellDataAggregateDeleterCli|ubic.gemma.apps.SingleCellDataAggregatorCli|ubic.gemma.apps.SingleCellDataDeleterCli|ubic.gemma.apps.SingleCellDataDownloaderCli|ubic.gemma.apps.SingleCellDataLoaderCli|ubic.gemma.apps.SingleCellDataTransformCli|ubic.gemma.apps.SingleCellDataWriterCli|ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli|ubic.gemma.apps.SplitExperimentCli|ubic.gemma.apps.TaxonLoaderCli|ubic.gemma.apps.UnifiedOntologyUpdaterCli|ubic.gemma.apps.UpdateEE2CCli|ubic.gemma.apps.UpdateEe2AdCli|ubic.gemma.apps.UpdateGene2CsCli|ubic.gemma.apps.UpdatePubMedCli|ubic.gemma.apps.VectorMergingCli|updateEe2Ad|updateEe2c|updateExternalDatabase|updateGEOData|updateGOAnnots|updateGene2Cs|updateMultifunc|updatePubMeds|updateSingleCellSparsityMetrics|updateUnifiedOntology|vectorMerge|viewChangelog|viewExpDesigns)' ' ]]; then
        if ! [[ "$current_option" =~ (--completion-executable|--completion-shell|--logger|--verbosity|-ce|-cs|-logger|-v) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--complete-config --complete-loggers --completion --completion-executable --completion-shell --help --help-all --logger --profiling --testdb --verbosity --version -c -cc -ce -cl -cs -h -ha -logger -profiling -testdb -v -version" -- "$2")
        fi
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "adATcleanup addChangelogEntry addExternalDatabase addGEOData addMetadataFile addPlatformSequences addProtocol addTSVData affyAltsUpdate affyCollapse affyFromCel aggregateSingleCellData blackList blatPlatform coexpAnalyze complete corrMat deleteDiffEx deleteExperiments deletePlatformElements deleteProcessedData deleteProtocol deleteRawData deleteSingleCellData deleteSingleCellDataAggregate detachSequences detectQuantitationType diffExAnalyze downloadSingleCellData dumpForNIF fetchMeshTerms fillBatchInfo findDatasetPubs findObsoleteTerms fixOntologyTermLabels geneUpdate generateDataFile generateDatabaseUpdate genericPlatform getDataMatrix getDiffExAnalysis getRawDataMatrix getSingleCellDataMatrix getSingleCellMetadata importDesign listDataFileLocks listExternalDatabases listGEOData listProtocols listQuantitationTypes loadGenesFromFile loadSingleCellData loadTaxa lockDataFile makePlatformAnnotFiles makePrivate makeProcessedData makePublic mapPlatformToGenes mergePlatforms migrateFactorValues orderVectorsByDesign pca platformMapSummary platformRepeatScan platformSubsumptionTest printExperimentalDesign probeRename pubmedAssociateToExperiments pubmedLoad pubmedSearchAndSave refreshExperiment replaceData rnaseqBatchInfo rnaseqDataAdd runGeeq searchIndex seqCleanup splitExperiment switchExperimentPlatform transformSingleCellData ubic.gemma.apps.AffyDataFromCelCli ubic.gemma.apps.AffyProbeCollapseCli ubic.gemma.apps.ArrayDesignAlternativePopulateCli ubic.gemma.apps.ArrayDesignAnnotationFileCli ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli ubic.gemma.apps.ArrayDesignBioSequenceDetachCli ubic.gemma.apps.ArrayDesignBlatCli ubic.gemma.apps.ArrayDesignMapSummaryCli ubic.gemma.apps.ArrayDesignMergeCli ubic.gemma.apps.ArrayDesignProbeCleanupCLI ubic.gemma.apps.ArrayDesignProbeMapperCli ubic.gemma.apps.ArrayDesignProbeRenamerCli ubic.gemma.apps.ArrayDesignRepeatScanCli ubic.gemma.apps.ArrayDesignSequenceAssociationCli ubic.gemma.apps.ArrayDesignSubsumptionTesterCli ubic.gemma.apps.BatchEffectPopulationCli ubic.gemma.apps.BibRefUpdaterCli ubic.gemma.apps.BioSequenceCleanupCli ubic.gemma.apps.BlacklistCli ubic.gemma.apps.CellLevelMetadataWriterCli ubic.gemma.apps.CompleteCli ubic.gemma.apps.DatabaseViewGeneratorCLI ubic.gemma.apps.DeleteDiffExCli ubic.gemma.apps.DeleteExperimentsCli ubic.gemma.apps.DetectQuantitationTypeCli ubic.gemma.apps.DifferentialExpressionAnalysisCli ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli ubic.gemma.apps.ExperimentalDesignImportCli ubic.gemma.apps.ExperimentalDesignViewCli ubic.gemma.apps.ExperimentalDesignWriterCLI ubic.gemma.apps.ExpressionDataCorrMatCli ubic.gemma.apps.ExpressionDataMatrixWriterCLI ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli ubic.gemma.apps.ExpressionExperimentDataUpdaterCli ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli ubic.gemma.apps.ExpressionExperimentPrimaryPubCli ubic.gemma.apps.ExternalDatabaseAdderCli ubic.gemma.apps.ExternalDatabaseOverviewCli ubic.gemma.apps.ExternalDatabaseUpdaterCli ubic.gemma.apps.ExternalFileGeneLoaderCLI ubic.gemma.apps.FactorValueMigratorCLI ubic.gemma.apps.FindObsoleteTermsCli ubic.gemma.apps.FixOntologyTermLabelsCli ubic.gemma.apps.GeeqCli ubic.gemma.apps.GenerateDatabaseUpdateCli ubic.gemma.apps.GenericGenelistDesignGenerator ubic.gemma.apps.GeoGrabberCli ubic.gemma.apps.IndexGemmaCLI ubic.gemma.apps.LinkAnalysisCli ubic.gemma.apps.ListExpressionDataFIleLocksCli ubic.gemma.apps.ListQuantitationTypesCli ubic.gemma.apps.LoadExpressionDataCli ubic.gemma.apps.LoadSimpleExpressionDataCli ubic.gemma.apps.LockExpressionDataFileCli ubic.gemma.apps.MakeExperimentPrivateCli ubic.gemma.apps.MakeExperimentsPublicCli ubic.gemma.apps.MeshTermFetcherCli ubic.gemma.apps.MultifunctionalityCli ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI ubic.gemma.apps.NcbiGeneLoaderCLI ubic.gemma.apps.OrderVectorsByDesignCli ubic.gemma.apps.ProcessedDataComputeCLI ubic.gemma.apps.ProcessedDataDeleterCli ubic.gemma.apps.ProtocolAdderCli ubic.gemma.apps.ProtocolDeleterCli ubic.gemma.apps.ProtocolListCli ubic.gemma.apps.PubMedLoaderCli ubic.gemma.apps.PubMedSearcher ubic.gemma.apps.RNASeqBatchInfoCli ubic.gemma.apps.RNASeqDataAddCli ubic.gemma.apps.RawDataDeleterCli ubic.gemma.apps.RawExpressionDataWriterCli ubic.gemma.apps.RefreshExperimentCli ubic.gemma.apps.ReplaceDataCli ubic.gemma.apps.SVDCli ubic.gemma.apps.SingleCellDataAggregateDeleterCli ubic.gemma.apps.SingleCellDataAggregatorCli ubic.gemma.apps.SingleCellDataDeleterCli ubic.gemma.apps.SingleCellDataDownloaderCli ubic.gemma.apps.SingleCellDataLoaderCli ubic.gemma.apps.SingleCellDataTransformCli ubic.gemma.apps.SingleCellDataWriterCli ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli ubic.gemma.apps.SplitExperimentCli ubic.gemma.apps.TaxonLoaderCli ubic.gemma.apps.UnifiedOntologyUpdaterCli ubic.gemma.apps.UpdateEE2CCli ubic.gemma.apps.UpdateEe2AdCli ubic.gemma.apps.UpdateGene2CsCli ubic.gemma.apps.UpdatePubMedCli ubic.gemma.apps.VectorMergingCli updateEe2Ad updateEe2c updateExternalDatabase updateGEOData updateGOAnnots updateGene2Cs updateMultifunc updatePubMeds updateSingleCellSparsityMetrics updateUnifiedOntology vectorMerge viewChangelog viewExpDesigns" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentMetadataChangelogEntryAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --help -ce -e -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addChangelogEntry ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --help -ce -e -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.LoadExpressionDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--batch-format|--batch-output-file|--batch-report-frequency|--file|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --batch-format --batch-output-file --batch-report-frequency --file --force --help --match --platforms --update -allowsuper -batchFormat -batchOutputFile -batchReportFrequency -e -f -force -h -m -nopost -softfile -splitByPlatform -update -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addGEOData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--batch-format|--batch-output-file|--batch-report-frequency|--file|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --batch-format --batch-output-file --batch-report-frequency --file --force --help --match --platforms --update -allowsuper -batchFormat -batchOutputFile -batchReportFrequency -e -f -force -h -m -nopost -softfile -splitByPlatform -update -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentMetadataFileAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|--file-type|-ce|-e|-fileType) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --file-type --force --help -ce -e -fileType -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addMetadataFile ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|--file-type|-ce|-e|-fileType) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --file-type --force --help -ce -e -fileType -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.LoadSimpleExpressionDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--dir|--file|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --create-image-clones --dir --file --help --legacy -batchFormat -batchOutputFile -batchReportFrequency -createImageClones -d -f -h -legacy" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--dir|--file|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addTSVData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--dir|--file|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --create-image-clones --dir --file --help --legacy -batchFormat -batchOutputFile -batchReportFrequency -createImageClones -d -f -h -legacy" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--dir|--file|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.AffyDataFromCelCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-aptFile|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -aptFile -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' affyFromCel ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-aptFile|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -aptFile -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataAggregatorCli ' ]]; then
        if ! [[ "$current_option" =~ (----no-mask|--batch-format|--batch-output-file|--batch-report-frequency|--cell-level-characteristics|--cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--factor|--mapping-file|--mask|--quantitation-type|--redo-dimension|--redo-quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-clc|-cta|-e|-eeset|-f|-factor|-mappingFile|-mask|-noMask|-q|-qt|-redoDimension|-redoQt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "----no-mask --allow-unmapped-characteristics --allow-unmapped-factor-values --batch-format --batch-output-file --batch-report-frequency --cell-level-characteristics --cell-type-assignment --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --factor --help --include-masked-cells-in-library-size --make-preferred --mapping-file --mask --no-post-processing --print-mapping --quantitation-type --redo --redo-dimension --redo-quantitation-type --taxon -adjustLibrarySizes -all -allowUnmappedCharacteristics -allowUnmappedFactorValues -batchFormat -batchOutputFile -batchReportFrequency -clc -cta -e -eeset -f -factor -h -includeMaskedCellsInLibrarySize -mappingFile -mask -noMask -nopost -p -q -qt -redo -redoDimension -redoQt -t -writeCellTypeMapping -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--mapping-file|-batchOutputFile|-f|-mappingFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' aggregateSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (----no-mask|--batch-format|--batch-output-file|--batch-report-frequency|--cell-level-characteristics|--cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--factor|--mapping-file|--mask|--quantitation-type|--redo-dimension|--redo-quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-clc|-cta|-e|-eeset|-f|-factor|-mappingFile|-mask|-noMask|-q|-qt|-redoDimension|-redoQt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "----no-mask --allow-unmapped-characteristics --allow-unmapped-factor-values --batch-format --batch-output-file --batch-report-frequency --cell-level-characteristics --cell-type-assignment --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --factor --help --include-masked-cells-in-library-size --make-preferred --mapping-file --mask --no-post-processing --print-mapping --quantitation-type --redo --redo-dimension --redo-quantitation-type --taxon -adjustLibrarySizes -all -allowUnmappedCharacteristics -allowUnmappedFactorValues -batchFormat -batchOutputFile -batchReportFrequency -clc -cta -e -eeset -f -factor -h -includeMaskedCellsInLibrarySize -mappingFile -mask -noMask -nopost -p -q -qt -redo -redoDimension -redoQt -t -writeCellTypeMapping -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--mapping-file|-batchOutputFile|-f|-mappingFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.LinkAnalysisCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--cachecut|--cdfcut|--distinctValCut|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fwe|--lowcut|--lowvarcut|--missingcut|-array|-batchFormat|-batchOutputFile|-batchReportFrequency|-c|-choosecut|-dataFile|-dv|-e|-eeset|-f|-k|-l|-lv|-m|-mdate|-metric|-normalizemethod|-probeDegreeLim|-q|-subset|-t|-w|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--abs --batch-format --batch-output-file --batch-report-frequency --cachecut --cdfcut --distinctValCut --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --fwe --help --lowcut --lowvarcut --missingcut --nodb -a -all -array -auto -batchFormat -batchOutputFile -batchReportFrequency -c -choosecut -d -dataFile -delete -dv -e -eeset -f -force -h -init -k -l -logtransform -lv -m -mdate -metric -n -noimages -nonegcorr -noqc -normalizemethod -probeDegreeLim -q -subset -t -text -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-dataFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' coexpAnalyze ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--cachecut|--cdfcut|--distinctValCut|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fwe|--lowcut|--lowvarcut|--missingcut|-array|-batchFormat|-batchOutputFile|-batchReportFrequency|-c|-choosecut|-dataFile|-dv|-e|-eeset|-f|-k|-l|-lv|-m|-mdate|-metric|-normalizemethod|-probeDegreeLim|-q|-subset|-t|-w|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--abs --batch-format --batch-output-file --batch-report-frequency --cachecut --cdfcut --distinctValCut --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --fwe --help --lowcut --lowvarcut --missingcut --nodb -a -all -array -auto -batchFormat -batchOutputFile -batchReportFrequency -c -choosecut -d -dataFile -delete -dv -e -eeset -f -force -h -init -k -l -logtransform -lv -m -mdate -metric -n -noimages -nonegcorr -noqc -normalizemethod -probeDegreeLim -q -subset -t -text -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-dataFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionDataCorrMatCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' corrMat ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DeleteDiffExCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteDiffEx ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DeleteExperimentsCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteExperiments ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ProcessedDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteProcessedData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.RawDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteRawData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--delete-cell-level-characteristics|--delete-cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-deleteClc|-deleteCta|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --delete-cell-level-characteristics --delete-cell-type-assignment --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -deleteClc -deleteCta -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--delete-cell-level-characteristics|--delete-cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-deleteClc|-deleteCta|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --delete-cell-level-characteristics --delete-cell-type-assignment --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -deleteClc -deleteCta -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataAggregateDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--quantitation-type|-e|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help --quantitation-type -e -h -qt" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteSingleCellDataAggregate ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--quantitation-type|-e|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help --quantitation-type -e -h -qt" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DetectQuantitationTypeCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' detectQuantitationType ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DifferentialExpressionAnalysisCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--factors|--output-dir|--subset|--taxon|--type|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-factors|-mdate|-outputDir|-q|-subset|-t|-type|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --delete --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --factors --force --help --ignore-failing-subsets --no-bayes --no-db --no-files --output-dir --redo --subset --taxon --type --use-batch-factor -all -auto -batchFormat -batchOutputFile -batchReportFrequency -delete -e -eeset -f -factors -force -h -ignoreFailingSubsets -mdate -nobayes -nodb -nofiles -outputDir -q -redo -subset -t -type -usebatch -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|-batchOutputFile|-f|-outputDir|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' diffExAnalyze ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--factors|--output-dir|--subset|--taxon|--type|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-factors|-mdate|-outputDir|-q|-subset|-t|-type|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --delete --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --factors --force --help --ignore-failing-subsets --no-bayes --no-db --no-files --output-dir --redo --subset --taxon --type --use-batch-factor -all -auto -batchFormat -batchOutputFile -batchReportFrequency -delete -e -eeset -f -factors -force -h -ignoreFailingSubsets -mdate -nobayes -nodb -nofiles -outputDir -q -redo -subset -t -type -usebatch -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|-batchOutputFile|-f|-outputDir|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.BatchEffectPopulationCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' fillBatchInfo ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.UpdatePubMedCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' findDatasetPubs ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentDataFileGeneratorCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --forceWrite --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' generateDataFile ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --forceWrite --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionDataMatrixWriterCLI ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--samples|--scale-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --only-include-bioassays --output-dir --output-file --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -filter -force -h -o -onlyIncludeBioAssays -q -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--samples|--scale-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --only-include-bioassays --output-dir --output-file --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -filter -force -h -o -onlyIncludeBioAssays -q -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DifferentialExpressionAnalysisWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--analysis|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--analysis --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --output-dir --output-file --standard-location --stdout --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -force -h -o -q -standardLocation -stdout -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getDiffExAnalysis ' ]]; then
        if ! [[ "$current_option" =~ (--analysis|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--analysis --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --output-dir --output-file --standard-location --stdout --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -force -h -o -q -standardLocation -stdout -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.RawExpressionDataWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--quantitation-type|--samples|--scale-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-qt|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --only-include-bioassays --output-dir --output-file --quantitation-type --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -force -h -o -onlyIncludeBioAssays -q -qt -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getRawDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--output-dir|--output-file|--quantitation-type|--samples|--scale-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-o|-q|-qt|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --only-include-bioassays --output-dir --output-file --quantitation-type --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -force -h -o -onlyIncludeBioAssays -q -qt -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--aggregate-by-cell-level-characteristics|--aggregate-by-cell-type-assignment|--aggregate-method|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fetch-size|--format|--output-dir|--output-file|--quantitation-type|--samples|--scale-type|--taxon|-aggregateByClc|-aggregateByCta|-aggregateMethod|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-fetchSize|-format|-o|-q|-qt|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--aggregate-by-assay --aggregate-by-cell-level-characteristics --aggregate-by-cell-type-assignment --aggregate-by-preferred-cell-type-assignment --aggregate-method --aggregate-unknown-characteristics --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --fetch-size --force --format --help --no-auto-flush --no-cursor-fetch --no-streaming --output-dir --output-file --quantitation-type --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-ensembl-ids --use-raw-column-names -aggregateByAssay -aggregateByClc -aggregateByCta -aggregateByPreferredCta -aggregateMethod -aggregateUnknownCharacteristics -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -fetchSize -force -format -h -noAutoFlush -noCursorFetch -noStreaming -o -q -qt -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useEnsemblIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getSingleCellDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--aggregate-by-cell-level-characteristics|--aggregate-by-cell-type-assignment|--aggregate-method|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fetch-size|--format|--output-dir|--output-file|--quantitation-type|--samples|--scale-type|--taxon|-aggregateByClc|-aggregateByCta|-aggregateMethod|-batchFormat|-batchOutputFile|-batchReportFrequency|-d|-e|-eeset|-f|-fetchSize|-format|-o|-q|-qt|-samples|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--aggregate-by-assay --aggregate-by-cell-level-characteristics --aggregate-by-cell-type-assignment --aggregate-by-preferred-cell-type-assignment --aggregate-method --aggregate-unknown-characteristics --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --fetch-size --force --format --help --no-auto-flush --no-cursor-fetch --no-streaming --output-dir --output-file --quantitation-type --samples --scale-type --standard-location --stdout --taxon --use-bioassay-ids --use-ensembl-ids --use-raw-column-names -aggregateByAssay -aggregateByClc -aggregateByCta -aggregateByPreferredCta -aggregateMethod -aggregateUnknownCharacteristics -all -batchFormat -batchOutputFile -batchReportFrequency -d -e -eeset -f -fetchSize -force -format -h -noAutoFlush -noCursorFetch -noStreaming -o -q -qt -samples -scaleType -standardLocation -stdout -t -useBioAssayIds -useEnsemblIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|--output-dir|--output-file|-batchOutputFile|-d|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.CellLevelMetadataWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--output-dir|--output-file|--quantitation-type|-d|-e|-o|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help --output-dir --output-file --quantitation-type --stdout --use-bioassay-ids --use-raw-column-names -d -e -force -h -o -qt -stdout -useBioAssayIds -useRawColumnNames" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-dir|--output-file|-d|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getSingleCellMetadata ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--output-dir|--output-file|--quantitation-type|-d|-e|-o|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help --output-dir --output-file --quantitation-type --stdout --use-bioassay-ids --use-raw-column-names -d -e -force -h -o -qt -stdout -useBioAssayIds -useRawColumnNames" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-dir|--output-file|-d|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExperimentalDesignImportCli ' ]]; then
        if ! [[ "$current_option" =~ (--designFile|--experiment|-e|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--designFile --experiment --help -e -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--designFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' importDesign ' ]]; then
        if ! [[ "$current_option" =~ (--designFile|--experiment|-e|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--designFile --experiment --help -e -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--designFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ListQuantitationTypesCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listQuantitationTypes ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --quantitation-type --taxon -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataLoaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--anndata-cell-type-factor-name|--anndata-sample-factor-name|--anndata-unknown-cell-type-indicator|--batch-format|--batch-output-file|--batch-report-frequency|--cell-level-characteristics-file|--cell-level-characteristics-name|--cell-type-assignment-description|--cell-type-assignment-file|--cell-type-assignment-name|--cell-type-assignment-protocol|--data-path|--data-type|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fetch-size|--platform|--quantitation-type-name|--quantitation-type-new-name|--quantitation-type-new-scale-type|--quantitation-type-new-type|--renaming-file|--sequencing-metadata-file|--sequencing-read-length|--taxon|-a|-annDataCellTypeFactorName|-annDataSampleFactorName|-annDataUnknownCellTypeIndicator|-batchFormat|-batchOutputFile|-batchReportFrequency|-clcFile|-clcName|-ctaDescription|-ctaFile|-ctaName|-ctaProtocol|-dataType|-e|-eeset|-f|-fetchSize|-p|-q|-qtName|-qtNewName|-qtNewScaleType|-qtNewType|-renamingFile|-sequencingMetadataFile|-sequencingReadLength|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--anndata-cell-type-factor-name --anndata-ignore-cell-type-factor --anndata-no-transpose --anndata-sample-factor-name --anndata-transpose --anndata-unknown-cell-type-indicator --anndata-use-raw-x --anndata-use-x --batch-format --batch-output-file --batch-report-frequency --cell-level-characteristics-file --cell-level-characteristics-name --cell-type-assignment-description --cell-type-assignment-file --cell-type-assignment-name --cell-type-assignment-protocol --data-path --data-type --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --fetch-size --help --ignore-samples-lacking-data --ignore-unmatched-cell-ids --infer-samples-from-cell-ids-overlap --load-cell-level-characteristics --load-cell-type-assignment --load-sequencing-metadata --mex-allow-mapping-design-elements-to-gene-symbols --mex-discard-empty-cells --mex-keep-empty-cells --mex-use-double-precision --no-cursor-fetch --no-streaming --platform --prefer-single-precision --preferred-cell-type-assignment --preferred-quantitation-type --quantitation-type-name --quantitation-type-new-name --quantitation-type-new-scale-type --quantitation-type-new-type --renaming-file --replace --replace-cell-level-characteristics --replace-cell-type-assignment --sequencing-is-paired --sequencing-is-single-end --sequencing-metadata-file --sequencing-read-length --taxon -a -all -annDataCellTypeFactorName -annDataIgnoreCellTypeFactor -annDataNoTranspose -annDataSampleFactorName -annDataTranspose -annDataUnknownCellTypeIndicator -annDataUseRawX -annDataUseX -batchFormat -batchOutputFile -batchReportFrequency -clcFile -clcName -ctaDescription -ctaFile -ctaName -ctaProtocol -dataType -e -eeset -f -fetchSize -h -ignoreSamplesLackingData -ignoreUnmatchedCellIds -inferSamplesFromCellIdsOverlap -loadClc -loadCta -loadSequencingMetadata -mexAllowMappingDesignElementsToGeneSymbols -mexDiscardEmptyCells -mexKeepEmptyCells -mexUseDoublePrecision -noCursorFetch -noStreaming -p -preferSinglePrecision -preferredCta -preferredQt -q -qtName -qtNewName -qtNewScaleType -qtNewType -renamingFile -replace -replaceClc -replaceCta -sequencingIsPaired -sequencingIsSingleEnd -sequencingMetadataFile -sequencingReadLength -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--cell-level-characteristics-file|--cell-type-assignment-file|--data-path|--eeListfile|--excludeEEFile|--renaming-file|--sequencing-metadata-file|-batchOutputFile|-clcFile|-ctaFile|-f|-p|-renamingFile|-sequencingMetadataFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' loadSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--anndata-cell-type-factor-name|--anndata-sample-factor-name|--anndata-unknown-cell-type-indicator|--batch-format|--batch-output-file|--batch-report-frequency|--cell-level-characteristics-file|--cell-level-characteristics-name|--cell-type-assignment-description|--cell-type-assignment-file|--cell-type-assignment-name|--cell-type-assignment-protocol|--data-path|--data-type|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--fetch-size|--platform|--quantitation-type-name|--quantitation-type-new-name|--quantitation-type-new-scale-type|--quantitation-type-new-type|--renaming-file|--sequencing-metadata-file|--sequencing-read-length|--taxon|-a|-annDataCellTypeFactorName|-annDataSampleFactorName|-annDataUnknownCellTypeIndicator|-batchFormat|-batchOutputFile|-batchReportFrequency|-clcFile|-clcName|-ctaDescription|-ctaFile|-ctaName|-ctaProtocol|-dataType|-e|-eeset|-f|-fetchSize|-p|-q|-qtName|-qtNewName|-qtNewScaleType|-qtNewType|-renamingFile|-sequencingMetadataFile|-sequencingReadLength|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--anndata-cell-type-factor-name --anndata-ignore-cell-type-factor --anndata-no-transpose --anndata-sample-factor-name --anndata-transpose --anndata-unknown-cell-type-indicator --anndata-use-raw-x --anndata-use-x --batch-format --batch-output-file --batch-report-frequency --cell-level-characteristics-file --cell-level-characteristics-name --cell-type-assignment-description --cell-type-assignment-file --cell-type-assignment-name --cell-type-assignment-protocol --data-path --data-type --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --fetch-size --help --ignore-samples-lacking-data --ignore-unmatched-cell-ids --infer-samples-from-cell-ids-overlap --load-cell-level-characteristics --load-cell-type-assignment --load-sequencing-metadata --mex-allow-mapping-design-elements-to-gene-symbols --mex-discard-empty-cells --mex-keep-empty-cells --mex-use-double-precision --no-cursor-fetch --no-streaming --platform --prefer-single-precision --preferred-cell-type-assignment --preferred-quantitation-type --quantitation-type-name --quantitation-type-new-name --quantitation-type-new-scale-type --quantitation-type-new-type --renaming-file --replace --replace-cell-level-characteristics --replace-cell-type-assignment --sequencing-is-paired --sequencing-is-single-end --sequencing-metadata-file --sequencing-read-length --taxon -a -all -annDataCellTypeFactorName -annDataIgnoreCellTypeFactor -annDataNoTranspose -annDataSampleFactorName -annDataTranspose -annDataUnknownCellTypeIndicator -annDataUseRawX -annDataUseX -batchFormat -batchOutputFile -batchReportFrequency -clcFile -clcName -ctaDescription -ctaFile -ctaName -ctaProtocol -dataType -e -eeset -f -fetchSize -h -ignoreSamplesLackingData -ignoreUnmatchedCellIds -inferSamplesFromCellIdsOverlap -loadClc -loadCta -loadSequencingMetadata -mexAllowMappingDesignElementsToGeneSymbols -mexDiscardEmptyCells -mexKeepEmptyCells -mexUseDoublePrecision -noCursorFetch -noStreaming -p -preferSinglePrecision -preferredCta -preferredQt -q -qtName -qtNewName -qtNewScaleType -qtNewType -renamingFile -replace -replaceClc -replaceCta -sequencingIsPaired -sequencingIsSingleEnd -sequencingMetadataFile -sequencingReadLength -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--cell-level-characteristics-file|--cell-type-assignment-file|--data-path|--eeListfile|--excludeEEFile|--renaming-file|--sequencing-metadata-file|-batchOutputFile|-clcFile|-ctaFile|-f|-p|-renamingFile|-sequencingMetadataFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.LockExpressionDataFileCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--timeout|-e|-timeout) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--exclusive --experiment --help --metadata --timeout -e -exclusive -h -metadata -timeout" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' lockDataFile ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--timeout|-e|-timeout) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--exclusive --experiment --help --metadata --timeout -e -exclusive -h -metadata -timeout" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.MakeExperimentPrivateCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePrivate ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ProcessedDataComputeCLI ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -diagupdate -e -eeset -f -force -h -ignoreqm -mdate -q -rankupdate -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makeProcessedData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -diagupdate -e -eeset -f -force -h -ignoreqm -mdate -q -rankupdate -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.MakeExperimentsPublicCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePublic ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.OrderVectorsByDesignCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' orderVectorsByDesign ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SVDCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pca ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExperimentalDesignWriterCLI ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--outFilePrefix|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --outFilePrefix --separate-sample-from-assay-identifiers --standard-location --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -o -q -separateSampleFromAssayIdentifiers -standardLocation -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' printExperimentalDesign ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--outFilePrefix|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --outFilePrefix --separate-sample-from-assay-identifiers --standard-location --taxon --use-bioassay-ids --use-raw-column-names -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -o -q -separateSampleFromAssayIdentifiers -standardLocation -t -useBioAssayIds -useRawColumnNames -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentPrimaryPubCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-pubmedIDFile|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -pubmedIDFile -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pubmedAssociateToExperiments ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-pubmedIDFile|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -pubmedIDFile -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.RefreshExperimentCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|--threads|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-threads|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --refreshReports --refreshVectors --taxon --threads -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -r -t -threads -v -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' refreshExperiment ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|--threads|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-threads|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --refreshReports --refreshVectors --taxon --threads -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -r -t -threads -v -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ReplaceDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help -e -file -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' replaceData ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help -e -file -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.RNASeqBatchInfoCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' rnaseqBatchInfo ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.RNASeqDataAddCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-count|-e|-eeset|-f|-multiqc|-q|-rlen|-rpkm|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -a -all -allowMissing -batchFormat -batchOutputFile -batchReportFrequency -count -e -eeset -f -h -log2cpm -multiqc -q -rlen -rpkm -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' rnaseqDataAdd ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-count|-e|-eeset|-f|-multiqc|-q|-rlen|-rpkm|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -a -all -allowMissing -batchFormat -batchOutputFile -batchReportFrequency -count -e -eeset -f -h -log2cpm -multiqc -q -rlen -rpkm -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.GeeqCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--mode|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-m|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --mode --taxon -all -auto -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -m -mdate -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' runGeeq ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--mode|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-m|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --mode --taxon -all -auto -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -m -mdate -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SplitExperimentCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-factor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help -e -factor -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' splitExperiment ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-factor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help -e -factor -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentPlatformSwitchCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' switchExperimentPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -a -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataTransformCli ' ]]; then
        if ! [[ "$current_option" =~ (--python|-python) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --python -h -python" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' transformSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--python|-python) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --python -h -python" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.UpdateEe2AdCli ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since -h -s" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateEe2Ad ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since -h -s" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.UpdateEE2CCli ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since --truncate -h -s -truncate" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateEe2c ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since --truncate -h -s -truncate" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentDataUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon --update-experiment-tags --update-publications --update-sample-characteristics -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -updateExperimentTags -updatePublications -updateSampleCharacteristics -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateGEOData ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon --update-experiment-tags --update-publications --update-sample-characteristics -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -updateExperimentTags -updatePublications -updateSampleCharacteristics -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellSparsityMetricsUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateSingleCellSparsityMetrics ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.VectorMergingCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' vectorMerge ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExpressionExperimentMetadataChangelogViewerCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' viewChangelog ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|--eeListfile|--excludeEEFile|--experiment|--experiment-set|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-batchReportFrequency|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --eeListfile --excludeEEFile --experiment --experiment-set --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -batchReportFrequency -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignAuditTrailCleanupCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' adATcleanup ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignSequenceAssociationCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|--ids|--sequence|--taxon|--type|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-i|-mdate|-s|-t|-y) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --force --help --ids --sequence --taxon --type -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -force -h -i -mdate -s -t -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addPlatformSequences ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|--ids|--sequence|--taxon|--type|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-i|-mdate|-s|-t|-y) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --force --help --ids --sequence --taxon --type -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -force -h -i -mdate -s -t -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.AffyProbeCollapseCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-affyProbeFile|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -affyProbeFile -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' affyCollapse ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-affyProbeFile|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -affyProbeFile -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignBlatCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--blatfile|--scoreThresh|--taxon|-a|-b|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-s|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --blatfile --help --scoreThresh --taxon -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -s -sensitive -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' blatPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--blatfile|--scoreThresh|--taxon|-a|-b|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-s|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --blatfile --help --scoreThresh --taxon -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -s -sensitive -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignProbeCleanupCLI ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deletePlatformElements ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignBioSequenceDetachCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -delete -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' detachSequences ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -delete -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.GenericGenelistDesignGenerator ' ]]; then
        if ! [[ "$current_option" =~ (--array|--geneListFile|--taxon|-a|-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --geneListFile --help --taxon -a -f -h -nodb -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' genericPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--array|--geneListFile|--taxon|-a|-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --geneListFile --help --taxon -a -f -h -nodb -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignAnnotationFileCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-l|-mdate|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch --batch-format --batch-output-file --batch-report-frequency --dontDeleteOtherFiles --help --nogo --taxon -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -f -h -k -l -mdate -nogo -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePlatformAnnotFiles ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-l|-mdate|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch --batch-format --batch-output-file --batch-report-frequency --dontDeleteOtherFiles --help --nogo --taxon -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -f -h -k -l -mdate -nogo -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignProbeMapperCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--identityThreshold|--overlapThreshold|--scoreThreshold|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-config|-f|-i|-import|-mdate|-o|-probes|-s|-source|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --identityThreshold --overlapThreshold --scoreThreshold --taxon -a -auto -batchFormat -batchOutputFile -batchReportFrequency -config -f -force -h -i -import -mdate -mirna -ncbi -nodb -o -probes -s -source -t -usePred" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' mapPlatformToGenes ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--identityThreshold|--overlapThreshold|--scoreThreshold|--taxon|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-config|-f|-i|-import|-mdate|-o|-probes|-s|-source|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --identityThreshold --overlapThreshold --scoreThreshold --taxon -a -auto -batchFormat -batchOutputFile -batchReportFrequency -config -f -force -h -i -import -mdate -mirna -ncbi -nodb -o -probes -s -source -t -usePred" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignMergeCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--name|--other|--shortname|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-n|-o|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --name --other --shortname -a -add -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -n -o -s" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' mergePlatforms ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--name|--other|--shortname|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-n|-o|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --name --other --shortname -a -add -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -n -o -s" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignRepeatScanCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformRepeatScan ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignSubsumptionTesterCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--other|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --other -a -all -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -o" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformSubsumptionTest ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|--other|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help --other -a -all -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate -o" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignProbeRenamerCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' probeRename ' ]]; then
        if ! [[ "$current_option" =~ (--array|--batch-format|--batch-output-file|--batch-report-frequency|--file|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.BioSequenceCleanupCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -dryrun -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' seqCleanup ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --file --help -a -auto -b -batchFormat -batchOutputFile -batchReportFrequency -dryrun -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.DatabaseViewGeneratorCLI ' ]]; then
        if ! [[ "$current_option" =~ (--limit|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dataset --diffexpression --help --limit --tissue -d -h -l -t -x" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' dumpForNIF ' ]]; then
        if ! [[ "$current_option" =~ (--limit|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dataset --diffexpression --help --limit --tissue -d -h -l -t -x" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.GeoGrabberCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--allowed-taxa|--chunk-size|--file|--output|--series-types|-allowedTaxa|-chunkSize|-date|-e|-f|-gselimit|-output|-platformLimit|-seriesTypes|-startat|-startdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --allowed-taxa --chunk-size --file --help --output --series-types -allowedTaxa -chunkSize -date -e -f -gselimit -h -output -platformLimit -raw -seriesTypes -startat -startdate -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--output|-f|-output) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listGEOData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--allowed-taxa|--chunk-size|--file|--output|--series-types|-allowedTaxa|-chunkSize|-date|-e|-f|-gselimit|-output|-platformLimit|-seriesTypes|-startat|-startdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --allowed-taxa --chunk-size --file --help --output --series-types -allowedTaxa -chunkSize -date -e -f -gselimit -h -output -platformLimit -raw -seriesTypes -startat -startdate -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--output|-f|-output) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignMapSummaryCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformMapSummary ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--batch-format|--batch-output-file|--batch-report-frequency|-a|-batchFormat|-batchOutputFile|-batchReportFrequency|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch-format --batch-output-file --batch-report-frequency --help -a -auto -batchFormat -batchOutputFile -batchReportFrequency -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExperimentalDesignViewCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' viewExpDesigns ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ArrayDesignAlternativePopulateCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' affyAltsUpdate ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.BlacklistCli ' ]]; then
        if ! [[ "$current_option" =~ (--accession|-a|-accession|-file|-reason) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--accession --help -a -accession -file -h -pp -reason -undo" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' blackList ' ]]; then
        if ! [[ "$current_option" =~ (--accession|-a|-accession|-file|-reason) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--accession --help -a -accession -file -h -pp -reason -undo" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.FindObsoleteTermsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' findObsoleteTerms ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.FixOntologyTermLabelsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dryRun --help -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' fixOntologyTermLabels ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dryRun --help -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.BibRefUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (-pmids) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h -pmids" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updatePubMeds ' ]]; then
        if ! [[ "$current_option" =~ (-pmids) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h -pmids" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExternalDatabaseAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--description|--name|--type|-d|-n|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --name --type -d -h -n -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addExternalDatabase ' ]]; then
        if ! [[ "$current_option" =~ (--description|--name|--type|-d|-n|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --name --type -d -h -n -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.NcbiGeneLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (--file|--taxon|-f|-restart|-taxon) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help --taxon -f -h -nodownload -restart -taxon" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' geneUpdate ' ]]; then
        if ! [[ "$current_option" =~ (--file|--taxon|-f|-restart|-taxon) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help --taxon -f -h -nodownload -restart -taxon" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.GenerateDatabaseUpdateCli ' ]]; then
        if ! [[ "$current_option" =~ (--output-file|--vendor|-o|-vendor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--create --help --output-file --vendor -c -h -o -vendor" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-file|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' generateDatabaseUpdate ' ]]; then
        if ! [[ "$current_option" =~ (--output-file|--vendor|-o|-vendor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--create --help --output-file --vendor -c -h -o -vendor" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-file|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExternalFileGeneLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -f -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' loadGenesFromFile ' ]]; then
        if ! [[ "$current_option" =~ (-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -f -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.IndexGemmaCLI ' ]]; then
        if ! [[ "$current_option" =~ (--threads|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --threads -a -b -e -g -h -q -s -threads -x -y" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' searchIndex ' ]]; then
        if ! [[ "$current_option" =~ (--threads|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --threads -a -b -e -g -h -q -s -threads -x -y" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExternalDatabaseUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--description|--last-updated|--name|--parent-database|--release-note|--release-url|--release-version|-d|-lastUpdated|-n|-parentDatabase|-releaseNote|-releaseUrl|-releaseVersion) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --last-updated --name --parent-database --release --release-note --release-url --release-version -d -h -lastUpdated -n -parentDatabase -release -releaseNote -releaseUrl -releaseVersion" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateExternalDatabase ' ]]; then
        if ! [[ "$current_option" =~ (--description|--last-updated|--name|--parent-database|--release-note|--release-url|--release-version|-d|-lastUpdated|-n|-parentDatabase|-releaseNote|-releaseUrl|-releaseVersion) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --last-updated --name --parent-database --release --release-note --release-url --release-version -d -h -lastUpdated -n -parentDatabase -release -releaseNote -releaseUrl -releaseVersion" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.NCBIGene2GOAssociationLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateGOAnnots ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.MultifunctionalityCli ' ]]; then
        if ! [[ "$current_option" =~ (--taxon|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --taxon -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateMultifunc ' ]]; then
        if ! [[ "$current_option" =~ (--taxon|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --taxon -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ProtocolAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--description|--name|-description|-name) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --name -description -h -name" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addProtocol ' ]]; then
        if ! [[ "$current_option" =~ (--description|--name|-description|-name) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --name -description -h -name" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.CompleteCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' complete ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ProtocolDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--protocol|-protocol) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --protocol -h -protocol" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteProtocol ' ]]; then
        if ! [[ "$current_option" =~ (--protocol|-protocol) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --protocol -h -protocol" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.SingleCellDataDownloaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--batch-format|--batch-output-file|--batch-report-frequency|--data-type|--fetch-threads|--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--retry|--retry-count|--sample-accessions|--summary-output-file|--supplementary-file|--threads|-batchFormat|-batchOutputFile|-batchReportFrequency|-dataType|-e|-f|-fetchThreads|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-retry|-retryCount|-s|-sampleAccessions|-supplementaryFile|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --batch-format --batch-output-file --batch-report-frequency --data-type --fetch-threads --file --help --mex-barcodes-file --mex-features-file --mex-matrix-file --resume --resume-ignore-unknown-datasets --retry --retry-count --sample-accessions --skip-download --summary-output-file --supplementary-file --threads -batchFormat -batchOutputFile -batchReportFrequency -dataType -e -f -fetchThreads -h -mexBarcodesFile -mexFeaturesFile -mexMatrixFile -r -resumeIgnoreUnknownDatasets -retry -retryCount -s -sampleAccessions -skipDownload -supplementaryFile -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--file|--summary-output-file|-batchOutputFile|-f|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' downloadSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--batch-format|--batch-output-file|--batch-report-frequency|--data-type|--fetch-threads|--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--retry|--retry-count|--sample-accessions|--summary-output-file|--supplementary-file|--threads|-batchFormat|-batchOutputFile|-batchReportFrequency|-dataType|-e|-f|-fetchThreads|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-retry|-retryCount|-s|-sampleAccessions|-supplementaryFile|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --batch-format --batch-output-file --batch-report-frequency --data-type --fetch-threads --file --help --mex-barcodes-file --mex-features-file --mex-matrix-file --resume --resume-ignore-unknown-datasets --retry --retry-count --sample-accessions --skip-download --summary-output-file --supplementary-file --threads -batchFormat -batchOutputFile -batchReportFrequency -dataType -e -f -fetchThreads -h -mexBarcodesFile -mexFeaturesFile -mexMatrixFile -r -resumeIgnoreUnknownDatasets -retry -retryCount -s -sampleAccessions -skipDownload -supplementaryFile -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|--file|--summary-output-file|-batchOutputFile|-f|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.MeshTermFetcherCli ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -m" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' fetchMeshTerms ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -m" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ListExpressionDataFIleLocksCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' listDataFileLocks ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ExternalDatabaseOverviewCli ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listExternalDatabases ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.ProtocolListCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' listProtocols ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.TaxonLoaderCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' loadTaxa ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.FactorValueMigratorCLI ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h -migrateNonTrivialCases -migrateRemainingCharacteristics -migrateRemainingFactorValues -migrationFile -noop" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' migrateFactorValues ' ]]; then
        if ! [[ "$current_option" =~ (--batch-format|--batch-output-file|--batch-report-frequency|-batchFormat|-batchOutputFile|-batchReportFrequency|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--batch-format --batch-output-file --batch-report-frequency --help -batchFormat -batchOutputFile -batchReportFrequency -h -migrateNonTrivialCases -migrateRemainingCharacteristics -migrateRemainingFactorValues -migrationFile -noop" -- "$2")
        fi
        if [[ "$current_option" =~ (--batch-output-file|-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.PubMedLoaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --help -d -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pubmedLoad ' ]]; then
        if ! [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --help -d -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.PubMedSearcher ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --persist -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' pubmedSearchAndSave ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --persist -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.UpdateGene2CsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--force --help -f -h" -- "$2")
    fi
    if [[ " $words " =~ ' updateGene2Cs ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--force --help -f -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.apps.UnifiedOntologyUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--dest-dir|--sources-dir|--threads|-destDir|-sourcesDir|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dest-dir --force --help --skip-download --sources-dir --threads -destDir -force -h -skipDownload -sourcesDir -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--dest-dir|--sources-dir|-destDir|-sourcesDir) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateUnifiedOntology ' ]]; then
        if ! [[ "$current_option" =~ (--dest-dir|--sources-dir|--threads|-destDir|-sourcesDir|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dest-dir --force --help --skip-download --sources-dir --threads -destDir -force -h -skipDownload -sourcesDir -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--dest-dir|--sources-dir|-destDir|-sourcesDir) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
}
complete -o filenames -o bashdefault -F __gemma_cli_staging_complete gemma-cli-staging
