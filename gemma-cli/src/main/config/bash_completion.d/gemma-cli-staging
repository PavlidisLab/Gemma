function __gemma_cli_staging_complete() {
    COMPREPLY=()
    words="${COMP_WORDS[*]}"
    current_option="${COMP_WORDS[$COMP_CWORD-1]}"
    if ! [[ " $words " =~ ' '(adATcleanup|addChangelogEntry|addExternalDatabase|addGEOData|addMetadataFile|addPlatformSequences|addTSVData|affyAltsUpdate|affyCollapse|affyFromCel|aggregateSingleCellData|blackList|blatPlatform|coexpAnalyze|corrMat|deleteDiffEx|deleteExperiments|deletePlatformElements|deleteProcessedData|deleteRawData|deleteSingleCellData|deleteSingleCellDataAggregate|detachSequences|detectQuantitationType|diffExAnalyze|downloadSingleCellData|dumpForNIF|fetchMeshTerms|fillBatchInfo|findDatasetPubs|findObsoleteTerms|fixOntologyTermLabels|geneUpdate|generateDataFile|generateDatabaseUpdate|genericPlatform|getDataMatrix|getRawDataMatrix|getSingleCellDataMatrix|importDesign|listExternalDatabases|listGEOData|listQuantitationTypes|loadGenesFromFile|loadSingleCellData|loadTaxa|makePlatformAnnotFiles|makePrivate|makeProcessedData|makePublic|mapPlatformToGenes|mergePlatforms|migrateFactorValues|orderVectorsByDesign|pca|platformMapSummary|platformRepeatScan|platformSubsumptionTest|printExperimentalDesign|probeRename|pubmedAssociateToExperiments|pubmedLoad|pubmedSearchAndSave|refreshExperiment|replaceData|rnaseqBatchInfo|rnaseqDataAdd|runGeeq|searchIndex|seqCleanup|splitExperiment|switchExperimentPlatform|transformSingleCellData|ubic.gemma.core.apps.AffyDataFromCelCli|ubic.gemma.core.apps.AffyProbeCollapseCli|ubic.gemma.core.apps.ArrayDesignAlternativePopulateCli|ubic.gemma.core.apps.ArrayDesignAnnotationFileCli|ubic.gemma.core.apps.ArrayDesignAuditTrailCleanupCli|ubic.gemma.core.apps.ArrayDesignBioSequenceDetachCli|ubic.gemma.core.apps.ArrayDesignBlatCli|ubic.gemma.core.apps.ArrayDesignMapSummaryCli|ubic.gemma.core.apps.ArrayDesignMergeCli|ubic.gemma.core.apps.ArrayDesignProbeCleanupCLI|ubic.gemma.core.apps.ArrayDesignProbeMapperCli|ubic.gemma.core.apps.ArrayDesignProbeRenamerCli|ubic.gemma.core.apps.ArrayDesignRepeatScanCli|ubic.gemma.core.apps.ArrayDesignSequenceAssociationCli|ubic.gemma.core.apps.ArrayDesignSubsumptionTesterCli|ubic.gemma.core.apps.BatchEffectPopulationCli|ubic.gemma.core.apps.BibRefUpdaterCli|ubic.gemma.core.apps.BioSequenceCleanupCli|ubic.gemma.core.apps.BlacklistCli|ubic.gemma.core.apps.DatabaseViewGeneratorCLI|ubic.gemma.core.apps.DeleteDiffExCli|ubic.gemma.core.apps.DeleteExperimentsCli|ubic.gemma.core.apps.DetectQuantitationTypeCli|ubic.gemma.core.apps.DifferentialExpressionAnalysisCli|ubic.gemma.core.apps.ExperimentalDesignImportCli|ubic.gemma.core.apps.ExperimentalDesignViewCli|ubic.gemma.core.apps.ExperimentalDesignWriterCLI|ubic.gemma.core.apps.ExpressionDataCorrMatCli|ubic.gemma.core.apps.ExpressionDataMatrixWriterCLI|ubic.gemma.core.apps.ExpressionExperimentDataFileGeneratorCli|ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogEntryAdderCli|ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogViewerCli|ubic.gemma.core.apps.ExpressionExperimentMetadataFileAdderCli|ubic.gemma.core.apps.ExpressionExperimentPlatformSwitchCli|ubic.gemma.core.apps.ExpressionExperimentPrimaryPubCli|ubic.gemma.core.apps.ExternalDatabaseAdderCli|ubic.gemma.core.apps.ExternalDatabaseOverviewCli|ubic.gemma.core.apps.ExternalDatabaseUpdaterCli|ubic.gemma.core.apps.ExternalFileGeneLoaderCLI|ubic.gemma.core.apps.FactorValueMigratorCLI|ubic.gemma.core.apps.FindObsoleteTermsCli|ubic.gemma.core.apps.FixOntologyTermLabelsCli|ubic.gemma.core.apps.GeeqCli|ubic.gemma.core.apps.GenerateDatabaseUpdateCli|ubic.gemma.core.apps.GenericGenelistDesignGenerator|ubic.gemma.core.apps.GeoGrabberCli|ubic.gemma.core.apps.IndexGemmaCLI|ubic.gemma.core.apps.LinkAnalysisCli|ubic.gemma.core.apps.ListQuantitationTypesCli|ubic.gemma.core.apps.LoadExpressionDataCli|ubic.gemma.core.apps.LoadSimpleExpressionDataCli|ubic.gemma.core.apps.MakeExperimentPrivateCli|ubic.gemma.core.apps.MakeExperimentsPublicCli|ubic.gemma.core.apps.MeshTermFetcherCli|ubic.gemma.core.apps.MultifunctionalityCli|ubic.gemma.core.apps.NCBIGene2GOAssociationLoaderCLI|ubic.gemma.core.apps.NcbiGeneLoaderCLI|ubic.gemma.core.apps.OrderVectorsByDesignCli|ubic.gemma.core.apps.ProcessedDataComputeCLI|ubic.gemma.core.apps.ProcessedDataDeleterCli|ubic.gemma.core.apps.PubMedLoaderCli|ubic.gemma.core.apps.RNASeqBatchInfoCli|ubic.gemma.core.apps.RNASeqDataAddCli|ubic.gemma.core.apps.RawDataDeleterCli|ubic.gemma.core.apps.RawExpressionDataWriterCli|ubic.gemma.core.apps.RefreshExperimentCli|ubic.gemma.core.apps.ReplaceDataCli|ubic.gemma.core.apps.SVDCli|ubic.gemma.core.apps.SingleCellDataAggregateDeleterCli|ubic.gemma.core.apps.SingleCellDataAggregatorCli|ubic.gemma.core.apps.SingleCellDataDeleterCli|ubic.gemma.core.apps.SingleCellDataDownloaderCli|ubic.gemma.core.apps.SingleCellDataLoaderCli|ubic.gemma.core.apps.SingleCellDataTransformCli|ubic.gemma.core.apps.SingleCellDataWriterCli|ubic.gemma.core.apps.SingleCellSparsityMetricsUpdaterCli|ubic.gemma.core.apps.SplitExperimentCli|ubic.gemma.core.apps.TaxonLoaderCli|ubic.gemma.core.apps.UpdateEE2CCli|ubic.gemma.core.apps.UpdateEe2AdCli|ubic.gemma.core.apps.UpdateGene2CsCli|ubic.gemma.core.apps.UpdatePubMedCli|ubic.gemma.core.apps.VectorMergingCli|ubic.gemma.core.loader.entrez.pubmed.PubMedSearcher|updateEe2Ad|updateEe2c|updateExternalDatabase|updateGOAnnots|updateGene2Cs|updateMultifunc|updatePubMeds|updateSingleCellSparsityMetrics|vectorMerge|viewChangelog|viewExpDesigns)' ' ]]; then
        if ! [[ "$current_option" =~ (--completion-executable|--completion-shell|--logger|--verbosity|-ce|-cs|-logger|-v) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--completion --completion-executable --completion-shell --help --help-all --logger --profiling --testdb --verbosity --version -c -ce -cs -h -ha -logger -profiling -testdb -v -version" -- "$2")
        fi
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "adATcleanup addChangelogEntry addExternalDatabase addGEOData addMetadataFile addPlatformSequences addTSVData affyAltsUpdate affyCollapse affyFromCel aggregateSingleCellData blackList blatPlatform coexpAnalyze corrMat deleteDiffEx deleteExperiments deletePlatformElements deleteProcessedData deleteRawData deleteSingleCellData deleteSingleCellDataAggregate detachSequences detectQuantitationType diffExAnalyze downloadSingleCellData dumpForNIF fetchMeshTerms fillBatchInfo findDatasetPubs findObsoleteTerms fixOntologyTermLabels geneUpdate generateDataFile generateDatabaseUpdate genericPlatform getDataMatrix getRawDataMatrix getSingleCellDataMatrix importDesign listExternalDatabases listGEOData listQuantitationTypes loadGenesFromFile loadSingleCellData loadTaxa makePlatformAnnotFiles makePrivate makeProcessedData makePublic mapPlatformToGenes mergePlatforms migrateFactorValues orderVectorsByDesign pca platformMapSummary platformRepeatScan platformSubsumptionTest printExperimentalDesign probeRename pubmedAssociateToExperiments pubmedLoad pubmedSearchAndSave refreshExperiment replaceData rnaseqBatchInfo rnaseqDataAdd runGeeq searchIndex seqCleanup splitExperiment switchExperimentPlatform transformSingleCellData ubic.gemma.core.apps.AffyDataFromCelCli ubic.gemma.core.apps.AffyProbeCollapseCli ubic.gemma.core.apps.ArrayDesignAlternativePopulateCli ubic.gemma.core.apps.ArrayDesignAnnotationFileCli ubic.gemma.core.apps.ArrayDesignAuditTrailCleanupCli ubic.gemma.core.apps.ArrayDesignBioSequenceDetachCli ubic.gemma.core.apps.ArrayDesignBlatCli ubic.gemma.core.apps.ArrayDesignMapSummaryCli ubic.gemma.core.apps.ArrayDesignMergeCli ubic.gemma.core.apps.ArrayDesignProbeCleanupCLI ubic.gemma.core.apps.ArrayDesignProbeMapperCli ubic.gemma.core.apps.ArrayDesignProbeRenamerCli ubic.gemma.core.apps.ArrayDesignRepeatScanCli ubic.gemma.core.apps.ArrayDesignSequenceAssociationCli ubic.gemma.core.apps.ArrayDesignSubsumptionTesterCli ubic.gemma.core.apps.BatchEffectPopulationCli ubic.gemma.core.apps.BibRefUpdaterCli ubic.gemma.core.apps.BioSequenceCleanupCli ubic.gemma.core.apps.BlacklistCli ubic.gemma.core.apps.DatabaseViewGeneratorCLI ubic.gemma.core.apps.DeleteDiffExCli ubic.gemma.core.apps.DeleteExperimentsCli ubic.gemma.core.apps.DetectQuantitationTypeCli ubic.gemma.core.apps.DifferentialExpressionAnalysisCli ubic.gemma.core.apps.ExperimentalDesignImportCli ubic.gemma.core.apps.ExperimentalDesignViewCli ubic.gemma.core.apps.ExperimentalDesignWriterCLI ubic.gemma.core.apps.ExpressionDataCorrMatCli ubic.gemma.core.apps.ExpressionDataMatrixWriterCLI ubic.gemma.core.apps.ExpressionExperimentDataFileGeneratorCli ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogEntryAdderCli ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogViewerCli ubic.gemma.core.apps.ExpressionExperimentMetadataFileAdderCli ubic.gemma.core.apps.ExpressionExperimentPlatformSwitchCli ubic.gemma.core.apps.ExpressionExperimentPrimaryPubCli ubic.gemma.core.apps.ExternalDatabaseAdderCli ubic.gemma.core.apps.ExternalDatabaseOverviewCli ubic.gemma.core.apps.ExternalDatabaseUpdaterCli ubic.gemma.core.apps.ExternalFileGeneLoaderCLI ubic.gemma.core.apps.FactorValueMigratorCLI ubic.gemma.core.apps.FindObsoleteTermsCli ubic.gemma.core.apps.FixOntologyTermLabelsCli ubic.gemma.core.apps.GeeqCli ubic.gemma.core.apps.GenerateDatabaseUpdateCli ubic.gemma.core.apps.GenericGenelistDesignGenerator ubic.gemma.core.apps.GeoGrabberCli ubic.gemma.core.apps.IndexGemmaCLI ubic.gemma.core.apps.LinkAnalysisCli ubic.gemma.core.apps.ListQuantitationTypesCli ubic.gemma.core.apps.LoadExpressionDataCli ubic.gemma.core.apps.LoadSimpleExpressionDataCli ubic.gemma.core.apps.MakeExperimentPrivateCli ubic.gemma.core.apps.MakeExperimentsPublicCli ubic.gemma.core.apps.MeshTermFetcherCli ubic.gemma.core.apps.MultifunctionalityCli ubic.gemma.core.apps.NCBIGene2GOAssociationLoaderCLI ubic.gemma.core.apps.NcbiGeneLoaderCLI ubic.gemma.core.apps.OrderVectorsByDesignCli ubic.gemma.core.apps.ProcessedDataComputeCLI ubic.gemma.core.apps.ProcessedDataDeleterCli ubic.gemma.core.apps.PubMedLoaderCli ubic.gemma.core.apps.RNASeqBatchInfoCli ubic.gemma.core.apps.RNASeqDataAddCli ubic.gemma.core.apps.RawDataDeleterCli ubic.gemma.core.apps.RawExpressionDataWriterCli ubic.gemma.core.apps.RefreshExperimentCli ubic.gemma.core.apps.ReplaceDataCli ubic.gemma.core.apps.SVDCli ubic.gemma.core.apps.SingleCellDataAggregateDeleterCli ubic.gemma.core.apps.SingleCellDataAggregatorCli ubic.gemma.core.apps.SingleCellDataDeleterCli ubic.gemma.core.apps.SingleCellDataDownloaderCli ubic.gemma.core.apps.SingleCellDataLoaderCli ubic.gemma.core.apps.SingleCellDataTransformCli ubic.gemma.core.apps.SingleCellDataWriterCli ubic.gemma.core.apps.SingleCellSparsityMetricsUpdaterCli ubic.gemma.core.apps.SplitExperimentCli ubic.gemma.core.apps.TaxonLoaderCli ubic.gemma.core.apps.UpdateEE2CCli ubic.gemma.core.apps.UpdateEe2AdCli ubic.gemma.core.apps.UpdateGene2CsCli ubic.gemma.core.apps.UpdatePubMedCli ubic.gemma.core.apps.VectorMergingCli ubic.gemma.core.loader.entrez.pubmed.PubMedSearcher updateEe2Ad updateEe2c updateExternalDatabase updateGOAnnots updateGene2Cs updateMultifunc updatePubMeds updateSingleCellSparsityMetrics vectorMerge viewChangelog viewExpDesigns" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogEntryAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --help -ce -e -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addChangelogEntry ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --help -ce -e -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.LoadExpressionDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--file|-batchFormat|-batchOutputFile|-e|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --file --force --help --match --platforms --update -allowsuper -batchFormat -batchOutputFile -e -f -force -h -m -nopost -softfile -splitByPlatform -update -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addGEOData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--file|-batchFormat|-batchOutputFile|-e|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --file --force --help --match --platforms --update -allowsuper -batchFormat -batchOutputFile -e -f -force -h -m -nopost -softfile -splitByPlatform -update -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f|-softfile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentMetadataFileAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --force --help -ce -e -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addMetadataFile ' ]]; then
        if ! [[ "$current_option" =~ (--changelog-entry|--experiment|-ce|-e) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--changelog-entry --experiment --force --help -ce -e -force -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.LoadSimpleExpressionDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--dir|--file|-batchFormat|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --file --help -batchFormat -batchOutputFile -d -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--dir|--file|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addTSVData ' ]]; then
        if ! [[ "$current_option" =~ (--dir|--file|-batchFormat|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --file --help -batchFormat -batchOutputFile -d -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--dir|--file|-batchOutputFile|-d|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.AffyDataFromCelCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-aptFile|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -aptFile -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-aptFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' affyFromCel ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-aptFile|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -aptFile -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-aptFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataAggregatorCli ' ]]; then
        if ! [[ "$current_option" =~ (--cell-level-characteristics|--cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--factor|--mapping-file|--quantitation-type|--redo-dimension|--redo-quantitation-type|--taxon|-batchFormat|-batchOutputFile|-clc|-cta|-e|-eeset|-f|-factor|-mappingFile|-q|-qt|-redoDimension|-redoQt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--allow-unmapped-characteristics --allow-unmapped-factor-values --cell-level-characteristics --cell-type-assignment --eeListfile --excludeEEFile --experiment --expressionQuery --factor --help --make-preferred --mapping-file --print-mapping --quantitation-type --redo --redo-dimension --redo-quantitation-type --taxon -adjustLibrarySizes -all -allowUnmappedCharacteristics -allowUnmappedFactorValues -batchFormat -batchOutputFile -clc -cta -e -eeset -f -factor -h -mappingFile -p -q -qt -redo -redoDimension -redoQt -t -writeCellTypeMapping -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--mapping-file|-batchOutputFile|-f|-mappingFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' aggregateSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--cell-level-characteristics|--cell-type-assignment|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--factor|--mapping-file|--quantitation-type|--redo-dimension|--redo-quantitation-type|--taxon|-batchFormat|-batchOutputFile|-clc|-cta|-e|-eeset|-f|-factor|-mappingFile|-q|-qt|-redoDimension|-redoQt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--allow-unmapped-characteristics --allow-unmapped-factor-values --cell-level-characteristics --cell-type-assignment --eeListfile --excludeEEFile --experiment --expressionQuery --factor --help --make-preferred --mapping-file --print-mapping --quantitation-type --redo --redo-dimension --redo-quantitation-type --taxon -adjustLibrarySizes -all -allowUnmappedCharacteristics -allowUnmappedFactorValues -batchFormat -batchOutputFile -clc -cta -e -eeset -f -factor -h -mappingFile -p -q -qt -redo -redoDimension -redoQt -t -writeCellTypeMapping -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--mapping-file|-batchOutputFile|-f|-mappingFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.LinkAnalysisCli ' ]]; then
        if ! [[ "$current_option" =~ (--cachecut|--cdfcut|--distinctValCut|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--fwe|--lowcut|--lowvarcut|--missingcut|-array|-batchFormat|-batchOutputFile|-c|-choosecut|-dataFile|-dv|-e|-eeset|-f|-k|-l|-lv|-m|-mdate|-metric|-normalizemethod|-probeDegreeLim|-q|-subset|-t|-w|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--abs --cachecut --cdfcut --distinctValCut --eeListfile --excludeEEFile --experiment --expressionQuery --force --fwe --help --lowcut --lowvarcut --missingcut --nodb -a -all -array -auto -batchFormat -batchOutputFile -c -choosecut -d -dataFile -delete -dv -e -eeset -f -force -h -init -k -l -logtransform -lv -m -mdate -metric -n -noimages -nonegcorr -noqc -normalizemethod -probeDegreeLim -q -subset -t -text -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-dataFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' coexpAnalyze ' ]]; then
        if ! [[ "$current_option" =~ (--cachecut|--cdfcut|--distinctValCut|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--fwe|--lowcut|--lowvarcut|--missingcut|-array|-batchFormat|-batchOutputFile|-c|-choosecut|-dataFile|-dv|-e|-eeset|-f|-k|-l|-lv|-m|-mdate|-metric|-normalizemethod|-probeDegreeLim|-q|-subset|-t|-w|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--abs --cachecut --cdfcut --distinctValCut --eeListfile --excludeEEFile --experiment --expressionQuery --force --fwe --help --lowcut --lowvarcut --missingcut --nodb -a -all -array -auto -batchFormat -batchOutputFile -c -choosecut -d -dataFile -delete -dv -e -eeset -f -force -h -init -k -l -logtransform -lv -m -mdate -metric -n -noimages -nonegcorr -noqc -normalizemethod -probeDegreeLim -q -subset -t -text -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-dataFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionDataCorrMatCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' corrMat ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.DeleteDiffExCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteDiffEx ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.DeleteExperimentsCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -a -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteExperiments ' ]]; then
        if ! [[ "$current_option" =~ (--array|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -a -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ProcessedDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteProcessedData ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.RawDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteRawData ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataAggregateDeleterCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--quantitation-type|-e|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help --quantitation-type -e -h -qt" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deleteSingleCellDataAggregate ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|--quantitation-type|-e|-qt) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help --quantitation-type -e -h -qt" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.DetectQuantitationTypeCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type-name|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qtName|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type-name --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qtName -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' detectQuantitationType ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type-name|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qtName|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type-name --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -qtName -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.DifferentialExpressionAnalysisCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--factors|--subset|--taxon|--type|-batchFormat|-batchOutputFile|-e|-eeset|-f|-factors|-mdate|-q|-subset|-t|-type|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--delete --eeListfile --excludeEEFile --experiment --expressionQuery --factors --force --help --ignore-failing-subsets --no-bayes --no-db --no-files --redo --subset --taxon --type --use-batch-factor -all -auto -batchFormat -batchOutputFile -delete -e -eeset -f -factors -force -h -ignoreFailingSubsets -mdate -nobayes -nodb -nofiles -q -redo -subset -t -type -usebatch -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--no-files|-batchOutputFile|-f|-nofiles|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' diffExAnalyze ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--factors|--subset|--taxon|--type|-batchFormat|-batchOutputFile|-e|-eeset|-f|-factors|-mdate|-q|-subset|-t|-type|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--delete --eeListfile --excludeEEFile --experiment --expressionQuery --factors --force --help --ignore-failing-subsets --no-bayes --no-db --no-files --redo --subset --taxon --type --use-batch-factor -all -auto -batchFormat -batchOutputFile -delete -e -eeset -f -factors -force -h -ignoreFailingSubsets -mdate -nobayes -nodb -nofiles -q -redo -subset -t -type -usebatch -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--no-files|-batchOutputFile|-f|-nofiles|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.BatchEffectPopulationCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' fillBatchInfo ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.UpdatePubMedCli ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' findDatasetPubs ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentDataFileGeneratorCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --forceWrite --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' generateDataFile ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --forceWrite --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -w -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionDataMatrixWriterCLI ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--outputFileName|--scale-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --outputFileName --scale-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -filter -force -h -o -q -scaleType -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--outputFileName|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--outputFileName|--scale-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --outputFileName --scale-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -filter -force -h -o -q -scaleType -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--outputFileName|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.RawExpressionDataWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--output-file|--quantitation-type|--scale-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-qt|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --output-file --quantitation-type --scale-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -o -q -qt -scaleType -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--output-file|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getRawDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--output-file|--quantitation-type|--scale-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-qt|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --output-file --quantitation-type --scale-type --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -o -q -qt -scaleType -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--output-file|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataWriterCli ' ]]; then
        if ! [[ "$current_option" =~ (--aggregate-by-cell-level-characteristics|--aggregate-by-cell-type-assignment|--aggregate-method|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--fetch-size|--format|--output|--quantitation-type|--scale-type|--taxon|-aggregateByClc|-aggregateByCta|-aggregateMethod|-batchFormat|-batchOutputFile|-e|-eeset|-f|-fetchSize|-format|-o|-q|-qt|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--aggregate-by-assay --aggregate-by-cell-level-characteristics --aggregate-by-cell-type-assignment --aggregate-by-preferred-cell-type-assignment --aggregate-method --eeListfile --excludeEEFile --experiment --expressionQuery --fetch-size --force --format --help --no-streaming --output --quantitation-type --scale-type --standard-location --taxon --use-ensembl-ids -aggregateByAssay -aggregateByClc -aggregateByCta -aggregateByPreferredCta -aggregateMethod -all -batchFormat -batchOutputFile -e -eeset -f -fetchSize -force -format -h -noStreaming -o -q -qt -scaleType -standardLocation -t -useEnsemblIds -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--output|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' getSingleCellDataMatrix ' ]]; then
        if ! [[ "$current_option" =~ (--aggregate-by-cell-level-characteristics|--aggregate-by-cell-type-assignment|--aggregate-method|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--fetch-size|--format|--output|--quantitation-type|--scale-type|--taxon|-aggregateByClc|-aggregateByCta|-aggregateMethod|-batchFormat|-batchOutputFile|-e|-eeset|-f|-fetchSize|-format|-o|-q|-qt|-scaleType|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--aggregate-by-assay --aggregate-by-cell-level-characteristics --aggregate-by-cell-type-assignment --aggregate-by-preferred-cell-type-assignment --aggregate-method --eeListfile --excludeEEFile --experiment --expressionQuery --fetch-size --force --format --help --no-streaming --output --quantitation-type --scale-type --standard-location --taxon --use-ensembl-ids -aggregateByAssay -aggregateByClc -aggregateByCta -aggregateByPreferredCta -aggregateMethod -all -batchFormat -batchOutputFile -e -eeset -f -fetchSize -force -format -h -noStreaming -o -q -qt -scaleType -standardLocation -t -useEnsemblIds -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--output|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExperimentalDesignImportCli ' ]]; then
        if ! [[ "$current_option" =~ (--designFile|--experiment|-e|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--designFile --experiment --help -e -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--designFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' importDesign ' ]]; then
        if ! [[ "$current_option" =~ (--designFile|--experiment|-e|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--designFile --experiment --help -e -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--designFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ListQuantitationTypesCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listQuantitationTypes ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--quantitation-type|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-qt|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --quantitation-type --taxon -batchFormat -batchOutputFile -e -eeset -f -h -q -qt -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataLoaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--anndata-cell-type-factor-name|--anndata-sample-factor-name|--anndata-unknown-cell-type-indicator|--cell-level-characteristics-file|--cell-type-assignment-file|--cell-type-assignment-name|--cell-type-assignment-protocol|--data-path|--data-type|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--platform|--quantitation-type-name|--quantitation-type-new-name|--quantitation-type-new-scale-type|--quantitation-type-new-type|--renaming-file|--sequencing-metadata-file|--sequencing-read-length|--taxon|-a|-annDataCellTypeFactorName|-annDataSampleFactorName|-annDataUnknownCellTypeIndicator|-batchFormat|-batchOutputFile|-clcFile|-ctaFile|-ctaName|-ctaProtocol|-dataType|-e|-eeset|-f|-p|-q|-qtName|-qtNewName|-qtNewScaleType|-qtNewType|-renamingFile|-sequencingMetadataFile|-sequencingReadLength|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--anndata-cell-type-factor-name --anndata-no-transpose --anndata-sample-factor-name --anndata-transpose --anndata-unknown-cell-type-indicator --anndata-use-raw-x --anndata-use-x --cell-level-characteristics-file --cell-type-assignment-file --cell-type-assignment-name --cell-type-assignment-protocol --data-path --data-type --eeListfile --excludeEEFile --experiment --expressionQuery --help --ignore-unmatched-cell-ids --infer-samples-from-cell-ids-overlap --load-cell-level-characteristics --load-cell-type-assignment --load-sequencing-metadata --mex-allow-mapping-design-elements-to-gene-symbols --mex-discard-empty-cells --mex-keep-empty-cells --mex-use-double-precision --platform --prefer-single-precision --preferred-cell-type-assignment --preferred-quantitation-type --quantitation-type-name --quantitation-type-new-name --quantitation-type-new-scale-type --quantitation-type-new-type --renaming-file --replace --sequencing-is-paired --sequencing-is-single-end --sequencing-metadata-file --sequencing-read-length --taxon -a -all -annDataCellTypeFactorName -annDataNoTranspose -annDataSampleFactorName -annDataTranspose -annDataUnknownCellTypeIndicator -annDataUseRawX -annDataUseX -batchFormat -batchOutputFile -clcFile -ctaFile -ctaName -ctaProtocol -dataType -e -eeset -f -h -ignoreUnmatchedCellIds -inferSamplesFromCellIdsOverlap -loadClc -loadCta -loadSequencingMetadata -mexAllowMappingDesignElementsToGeneSymbols -mexDiscardEmptyCells -mexKeepEmptyCells -mexUseDoublePrecision -p -preferSinglePrecision -preferredCta -preferredQt -q -qtName -qtNewName -qtNewScaleType -qtNewType -renamingFile -replace -sequencingIsPaired -sequencingIsSingleEnd -sequencingMetadataFile -sequencingReadLength -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--cell-level-characteristics-file|--cell-type-assignment-file|--data-path|--eeListfile|--excludeEEFile|--renaming-file|--sequencing-metadata-file|-batchOutputFile|-clcFile|-ctaFile|-f|-p|-renamingFile|-sequencingMetadataFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' loadSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--anndata-cell-type-factor-name|--anndata-sample-factor-name|--anndata-unknown-cell-type-indicator|--cell-level-characteristics-file|--cell-type-assignment-file|--cell-type-assignment-name|--cell-type-assignment-protocol|--data-path|--data-type|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--platform|--quantitation-type-name|--quantitation-type-new-name|--quantitation-type-new-scale-type|--quantitation-type-new-type|--renaming-file|--sequencing-metadata-file|--sequencing-read-length|--taxon|-a|-annDataCellTypeFactorName|-annDataSampleFactorName|-annDataUnknownCellTypeIndicator|-batchFormat|-batchOutputFile|-clcFile|-ctaFile|-ctaName|-ctaProtocol|-dataType|-e|-eeset|-f|-p|-q|-qtName|-qtNewName|-qtNewScaleType|-qtNewType|-renamingFile|-sequencingMetadataFile|-sequencingReadLength|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--anndata-cell-type-factor-name --anndata-no-transpose --anndata-sample-factor-name --anndata-transpose --anndata-unknown-cell-type-indicator --anndata-use-raw-x --anndata-use-x --cell-level-characteristics-file --cell-type-assignment-file --cell-type-assignment-name --cell-type-assignment-protocol --data-path --data-type --eeListfile --excludeEEFile --experiment --expressionQuery --help --ignore-unmatched-cell-ids --infer-samples-from-cell-ids-overlap --load-cell-level-characteristics --load-cell-type-assignment --load-sequencing-metadata --mex-allow-mapping-design-elements-to-gene-symbols --mex-discard-empty-cells --mex-keep-empty-cells --mex-use-double-precision --platform --prefer-single-precision --preferred-cell-type-assignment --preferred-quantitation-type --quantitation-type-name --quantitation-type-new-name --quantitation-type-new-scale-type --quantitation-type-new-type --renaming-file --replace --sequencing-is-paired --sequencing-is-single-end --sequencing-metadata-file --sequencing-read-length --taxon -a -all -annDataCellTypeFactorName -annDataNoTranspose -annDataSampleFactorName -annDataTranspose -annDataUnknownCellTypeIndicator -annDataUseRawX -annDataUseX -batchFormat -batchOutputFile -clcFile -ctaFile -ctaName -ctaProtocol -dataType -e -eeset -f -h -ignoreUnmatchedCellIds -inferSamplesFromCellIdsOverlap -loadClc -loadCta -loadSequencingMetadata -mexAllowMappingDesignElementsToGeneSymbols -mexDiscardEmptyCells -mexKeepEmptyCells -mexUseDoublePrecision -p -preferSinglePrecision -preferredCta -preferredQt -q -qtName -qtNewName -qtNewScaleType -qtNewType -renamingFile -replace -sequencingIsPaired -sequencingIsSingleEnd -sequencingMetadataFile -sequencingReadLength -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--cell-level-characteristics-file|--cell-type-assignment-file|--data-path|--eeListfile|--excludeEEFile|--renaming-file|--sequencing-metadata-file|-batchOutputFile|-clcFile|-ctaFile|-f|-p|-renamingFile|-sequencingMetadataFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.MakeExperimentPrivateCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePrivate ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ProcessedDataComputeCLI ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -diagupdate -e -eeset -f -force -h -ignoreqm -mdate -q -rankupdate -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makeProcessedData ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -diagupdate -e -eeset -f -force -h -ignoreqm -mdate -q -rankupdate -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.MakeExperimentsPublicCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePublic ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.OrderVectorsByDesignCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' orderVectorsByDesign ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SVDCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pca ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExperimentalDesignWriterCLI ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--outFilePrefix|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --outFilePrefix --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -o -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--outFilePrefix|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' printExperimentalDesign ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--outFilePrefix|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-o|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --outFilePrefix --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -o -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--outFilePrefix|-batchOutputFile|-f|-o|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentPrimaryPubCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-pubmedIDFile|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -pubmedIDFile -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-pubmedIDFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pubmedAssociateToExperiments ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-pubmedIDFile|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -pubmedIDFile -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-pubmedIDFile|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.RefreshExperimentCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|--threads|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-threads|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --refreshReports --refreshVectors --taxon --threads -all -batchFormat -batchOutputFile -e -eeset -f -h -q -r -t -threads -v -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' refreshExperiment ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|--threads|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-threads|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --refreshReports --refreshVectors --taxon --threads -all -batchFormat -batchOutputFile -e -eeset -f -h -q -r -t -threads -v -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ReplaceDataCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help -e -file -force -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' replaceData ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --force --help -e -file -force -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.RNASeqBatchInfoCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' rnaseqBatchInfo ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.RNASeqDataAddCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-count|-e|-eeset|-f|-multiqc|-q|-rlen|-rpkm|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -a -all -allowMissing -batchFormat -batchOutputFile -count -e -eeset -f -h -log2cpm -multiqc -q -rlen -rpkm -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-count|-f|-rpkm|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' rnaseqDataAdd ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-count|-e|-eeset|-f|-multiqc|-q|-rlen|-rpkm|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -a -all -allowMissing -batchFormat -batchOutputFile -count -e -eeset -f -h -log2cpm -multiqc -q -rlen -rpkm -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-count|-f|-rpkm|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.GeeqCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--mode|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-m|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --mode --taxon -all -auto -batchFormat -batchOutputFile -e -eeset -f -force -h -m -mdate -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' runGeeq ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--mode|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-m|-mdate|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --mode --taxon -all -auto -batchFormat -batchOutputFile -e -eeset -f -force -h -m -mdate -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SplitExperimentCli ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-factor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help -e -factor -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' splitExperiment ' ]]; then
        if ! [[ "$current_option" =~ (--experiment|-e|-factor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--experiment --help -e -factor -h" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentPlatformSwitchCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -a -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' switchExperimentPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--array|--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-a|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -a -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataTransformCli ' ]]; then
        if ! [[ "$current_option" =~ (--python|-python) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --python -h -python" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' transformSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--python|-python) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --python -h -python" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.UpdateEe2AdCli ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since -h -s" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateEe2Ad ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since -h -s" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.UpdateEE2CCli ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since --truncate -h -s -truncate" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateEe2c ' ]]; then
        if ! [[ "$current_option" =~ (--since|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --since --truncate -h -s -truncate" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellSparsityMetricsUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateSingleCellSparsityMetrics ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.VectorMergingCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' vectorMerge ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --force --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -force -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExpressionExperimentMetadataChangelogViewerCli ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' viewChangelog ' ]]; then
        if ! [[ "$current_option" =~ (--eeListfile|--excludeEEFile|--experiment|--expressionQuery|--taxon|-batchFormat|-batchOutputFile|-e|-eeset|-f|-q|-t|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--eeListfile --excludeEEFile --experiment --expressionQuery --help --taxon -all -batchFormat -batchOutputFile -e -eeset -f -h -q -t -x" -- "$2")
        fi
        if [[ "$current_option" =~ (--eeListfile|--excludeEEFile|-batchOutputFile|-f|-x) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignAuditTrailCleanupCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' adATcleanup ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignSequenceAssociationCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|--ids|--sequence|--type|-a|-batchFormat|-batchOutputFile|-f|-i|-mdate|-s|-t|-y) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help --ids --sequence --type -a -auto -batchFormat -batchOutputFile -f -force -h -i -mdate -s -t -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--ids|-batchOutputFile|-f|-i) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addPlatformSequences ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|--ids|--sequence|--type|-a|-batchFormat|-batchOutputFile|-f|-i|-mdate|-s|-t|-y) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help --ids --sequence --type -a -auto -batchFormat -batchOutputFile -f -force -h -i -mdate -s -t -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--ids|-batchOutputFile|-f|-i) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.AffyProbeCollapseCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-affyProbeFile|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -affyProbeFile -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-affyProbeFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' affyCollapse ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-affyProbeFile|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -affyProbeFile -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-affyProbeFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignBlatCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--blatfile|--scoreThresh|-a|-b|-batchFormat|-batchOutputFile|-f|-mdate|-s|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --blatfile --help --scoreThresh -a -auto -b -batchFormat -batchOutputFile -f -h -mdate -s -sensitive -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--blatfile|-b|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' blatPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--blatfile|--scoreThresh|-a|-b|-batchFormat|-batchOutputFile|-f|-mdate|-s|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --blatfile --help --scoreThresh -a -auto -b -batchFormat -batchOutputFile -f -h -mdate -s -sensitive -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--blatfile|-b|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignProbeCleanupCLI ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' deletePlatformElements ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignBioSequenceDetachCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -delete -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' detachSequences ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -delete -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.GenericGenelistDesignGenerator ' ]]; then
        if ! [[ "$current_option" =~ (--geneListFile|--platform|--taxon|-a|-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--geneListFile --help --platform --taxon -a -f -h -nodb -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--geneListFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' genericPlatform ' ]]; then
        if ! [[ "$current_option" =~ (--geneListFile|--platform|--taxon|-a|-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--geneListFile --help --platform --taxon -a -f -h -nodb -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--geneListFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignAnnotationFileCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--taxon|-a|-batchFormat|-batchOutputFile|-f|-l|-mdate|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch --dontDeleteOtherFiles --help --nogo --taxon -a -auto -b -batchFormat -batchOutputFile -f -h -k -l -mdate -nogo -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--dontDeleteOtherFiles|-batchOutputFile|-f|-k|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' makePlatformAnnotFiles ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--taxon|-a|-batchFormat|-batchOutputFile|-f|-l|-mdate|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --batch --dontDeleteOtherFiles --help --nogo --taxon -a -auto -b -batchFormat -batchOutputFile -f -h -k -l -mdate -nogo -t" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--dontDeleteOtherFiles|-batchOutputFile|-f|-k|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignProbeMapperCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--identityThreshold|--overlapThreshold|--scoreThreshold|-a|-batchFormat|-batchOutputFile|-config|-f|-i|-import|-mdate|-o|-probes|-s|-source|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --identityThreshold --overlapThreshold --scoreThreshold -a -auto -batchFormat -batchOutputFile -config -f -force -h -i -import -mdate -mirna -ncbi -nodb -o -probes -s -source -t -usePred" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f|-import) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' mapPlatformToGenes ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--identityThreshold|--overlapThreshold|--scoreThreshold|-a|-batchFormat|-batchOutputFile|-config|-f|-i|-import|-mdate|-o|-probes|-s|-source|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --identityThreshold --overlapThreshold --scoreThreshold -a -auto -batchFormat -batchOutputFile -config -f -force -h -i -import -mdate -mirna -ncbi -nodb -o -probes -s -source -t -usePred" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f|-import) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignMergeCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--name|--other|--shortname|-a|-batchFormat|-batchOutputFile|-f|-mdate|-n|-o|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --name --other --shortname -a -add -auto -batchFormat -batchOutputFile -f -h -mdate -n -o -s" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' mergePlatforms ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--name|--other|--shortname|-a|-batchFormat|-batchOutputFile|-f|-mdate|-n|-o|-s) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --name --other --shortname -a -add -auto -batchFormat -batchOutputFile -f -h -mdate -n -o -s" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignRepeatScanCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformRepeatScan ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignSubsumptionTesterCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--other|-a|-batchFormat|-batchOutputFile|-f|-mdate|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --other -a -all -auto -batchFormat -batchOutputFile -f -h -mdate -o" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformSubsumptionTest ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|--other|-a|-batchFormat|-batchOutputFile|-f|-mdate|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help --other -a -all -auto -batchFormat -batchOutputFile -f -h -mdate -o" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignProbeRenamerCli ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' probeRename ' ]]; then
        if ! [[ "$current_option" =~ (--array|--file|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--array --file --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.BioSequenceCleanupCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --file --help -a -auto -b -batchFormat -batchOutputFile -dryrun -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--file|-b|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' seqCleanup ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --file --help -a -auto -b -batchFormat -batchOutputFile -dryrun -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|--file|-b|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.DatabaseViewGeneratorCLI ' ]]; then
        if ! [[ "$current_option" =~ (--limit|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dataset --diffexpression --help --limit --tissue -d -h -l -t -x" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' dumpForNIF ' ]]; then
        if ! [[ "$current_option" =~ (--limit|-l) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dataset --diffexpression --help --limit --tissue -d -h -l -t -x" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.GeoGrabberCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--file|-chunkSize|-date|-e|-f|-gselimit|-output|-platformLimit|-startat|-startdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --file --help -chunkSize -date -e -f -gselimit -h -output -platformLimit -startat -startdate -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f|-output) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listGEOData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--file|-chunkSize|-date|-e|-f|-gselimit|-output|-platformLimit|-startat|-startdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --file --help -chunkSize -date -e -f -gselimit -h -output -platformLimit -startat -startdate -y" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f|-output) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignMapSummaryCli ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' platformMapSummary ' ]]; then
        if ! [[ "$current_option" =~ (--adListFile|--array|-a|-batchFormat|-batchOutputFile|-f|-mdate) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--adListFile --array --help -a -auto -batchFormat -batchOutputFile -f -h -mdate" -- "$2")
        fi
        if [[ "$current_option" =~ (--adListFile|-batchOutputFile|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExperimentalDesignViewCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' viewExpDesigns ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ArrayDesignAlternativePopulateCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' affyAltsUpdate ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.BlacklistCli ' ]]; then
        if ! [[ "$current_option" =~ (--accession|-a|-accession|-file|-reason) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--accession --help -a -accession -file -h -pp -reason -undo" -- "$2")
        fi
        if [[ "$current_option" =~ (-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' blackList ' ]]; then
        if ! [[ "$current_option" =~ (--accession|-a|-accession|-file|-reason) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--accession --help -a -accession -file -h -pp -reason -undo" -- "$2")
        fi
        if [[ "$current_option" =~ (-file) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.FindObsoleteTermsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' findObsoleteTerms ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.FixOntologyTermLabelsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dryRun --help -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' fixOntologyTermLabels ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dryRun --help -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.BibRefUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (-pmids) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h -pmids" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updatePubMeds ' ]]; then
        if ! [[ "$current_option" =~ (-pmids) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h -pmids" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExternalDatabaseAdderCli ' ]]; then
        if ! [[ "$current_option" =~ (--name|--type|-n|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --name --type -h -n -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' addExternalDatabase ' ]]; then
        if ! [[ "$current_option" =~ (--name|--type|-n|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --name --type -h -n -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.NcbiGeneLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f|-restart|-taxon) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -nodownload -restart -taxon" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' geneUpdate ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f|-restart|-taxon) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -nodownload -restart -taxon" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.GenerateDatabaseUpdateCli ' ]]; then
        if ! [[ "$current_option" =~ (--output-file|--vendor|-o|-vendor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--create --help --output-file --vendor -c -h -o -vendor" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-file|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' generateDatabaseUpdate ' ]]; then
        if ! [[ "$current_option" =~ (--output-file|--vendor|-o|-vendor) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--create --help --output-file --vendor -c -h -o -vendor" -- "$2")
        fi
        if [[ "$current_option" =~ (--output-file|-o) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExternalFileGeneLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -f -h -t" -- "$2")
        fi
        if [[ "$current_option" =~ (-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' loadGenesFromFile ' ]]; then
        if ! [[ "$current_option" =~ (-f|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -f -h -t" -- "$2")
        fi
        if [[ "$current_option" =~ (-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.IndexGemmaCLI ' ]]; then
        if ! [[ "$current_option" =~ (--threads|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --threads -a -b -e -g -h -q -s -threads -x -y" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' searchIndex ' ]]; then
        if ! [[ "$current_option" =~ (--threads|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --threads -a -b -e -g -h -q -s -threads -x -y" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExternalDatabaseUpdaterCli ' ]]; then
        if ! [[ "$current_option" =~ (--description|--last-updated|--name|--parent-database|--release-note|--release-url|--release-version|-d|-lastUpdated|-n|-parentDatabase|-releaseNote|-releaseUrl|-releaseVersion) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --last-updated --name --parent-database --release --release-note --release-url --release-version -d -h -lastUpdated -n -parentDatabase -release -releaseNote -releaseUrl -releaseVersion" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateExternalDatabase ' ]]; then
        if ! [[ "$current_option" =~ (--description|--last-updated|--name|--parent-database|--release-note|--release-url|--release-version|-d|-lastUpdated|-n|-parentDatabase|-releaseNote|-releaseUrl|-releaseVersion) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--description --help --last-updated --name --parent-database --release --release-note --release-url --release-version -d -h -lastUpdated -n -parentDatabase -release -releaseNote -releaseUrl -releaseVersion" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.NCBIGene2GOAssociationLoaderCLI ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateGOAnnots ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.MultifunctionalityCli ' ]]; then
        if ! [[ "$current_option" =~ (--taxon|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --taxon -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' updateMultifunc ' ]]; then
        if ! [[ "$current_option" =~ (--taxon|-t) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --taxon -h -t" -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.SingleCellDataDownloaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--data-type|--fetch-threads|--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--retry|--sample-accessions|--summary-output-file|--supplementary-file|--threads|-batchFormat|-batchOutputFile|-dataType|-e|-f|-fetchThreads|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-retry|-s|-sampleAccessions|-supplementaryFile|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --data-type --fetch-threads --file --help --mex-barcodes-file --mex-features-file --mex-matrix-file --resume --retry --sample-accessions --skip-download --summary-output-file --supplementary-file --threads -batchFormat -batchOutputFile -dataType -e -f -fetchThreads -h -mexBarcodesFile -mexFeaturesFile -mexMatrixFile -r -retry -s -sampleAccessions -skipDownload -supplementaryFile -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--summary-output-file|--supplementary-file|-batchOutputFile|-f|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-s|-supplementaryFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' downloadSingleCellData ' ]]; then
        if ! [[ "$current_option" =~ (--acc|--data-type|--fetch-threads|--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--retry|--sample-accessions|--summary-output-file|--supplementary-file|--threads|-batchFormat|-batchOutputFile|-dataType|-e|-f|-fetchThreads|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-retry|-s|-sampleAccessions|-supplementaryFile|-threads) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--acc --data-type --fetch-threads --file --help --mex-barcodes-file --mex-features-file --mex-matrix-file --resume --retry --sample-accessions --skip-download --summary-output-file --supplementary-file --threads -batchFormat -batchOutputFile -dataType -e -f -fetchThreads -h -mexBarcodesFile -mexFeaturesFile -mexMatrixFile -r -retry -s -sampleAccessions -skipDownload -supplementaryFile -threads" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|--mex-barcodes-file|--mex-features-file|--mex-matrix-file|--summary-output-file|--supplementary-file|-batchOutputFile|-f|-mexBarcodesFile|-mexFeaturesFile|-mexMatrixFile|-s|-supplementaryFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.MeshTermFetcherCli ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -m" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' fetchMeshTerms ' ]]; then
        if ! [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--file --help -f -h -m" -- "$2")
        fi
        if [[ "$current_option" =~ (--file|-f) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.ExternalDatabaseOverviewCli ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' listExternalDatabases ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.TaxonLoaderCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' loadTaxa ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.FactorValueMigratorCLI ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h -migrateNonTrivialCases -migrateRemainingCharacteristics -migrateRemainingFactorValues -migrationFile -noop" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' migrateFactorValues ' ]]; then
        if ! [[ "$current_option" =~ (-batchFormat|-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help -batchFormat -batchOutputFile -h -migrateNonTrivialCases -migrateRemainingCharacteristics -migrateRemainingFactorValues -migrationFile -noop" -- "$2")
        fi
        if [[ "$current_option" =~ (-batchOutputFile|-migrationFile) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.PubMedLoaderCli ' ]]; then
        if ! [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --help -d -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' pubmedLoad ' ]]; then
        if ! [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--dir --help -d -h" -- "$2")
        fi
        if [[ "$current_option" =~ (--dir|-d) ]]; then
            mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -f -- "$2")
        fi
    fi
    if [[ " $words " =~ ' ubic.gemma.core.loader.entrez.pubmed.PubMedSearcher ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --persist -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' pubmedSearchAndSave ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--help --persist -d -h" -- "$2")
    fi
    if [[ " $words " =~ ' ubic.gemma.core.apps.UpdateGene2CsCli ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--force --help -f -h" -- "$2")
    fi
    if [[ " $words " =~ ' updateGene2Cs ' ]]; then
        mapfile -t -O "${#COMPREPLY[@]}" COMPREPLY < <(compgen -W "--force --help -f -h" -- "$2")
    fi
}
complete -o filenames -o bashdefault -F __gemma_cli_staging_complete gemma-cli-staging
